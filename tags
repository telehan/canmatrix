!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ArCache	src/canmatrix/arxml.py	/^ArCache = dict()$/;"	v
ArCache	src/canmatrix/arxml_BACKUP_26060.py	/^ArCache = dict()$/;"	v
ArCache	src/canmatrix/arxml_REMOTE_26060.py	/^ArCache = dict()$/;"	v
BoardUnit	build/lib/canmatrix/canmatrix.py	/^class BoardUnit(object):$/;"	c
BoardUnit	src/canmatrix/canmatrix.py	/^class BoardUnit(object):$/;"	c
BoardUnitList	build/lib/canmatrix/canmatrix.py	/^class BoardUnitList(object):$/;"	c
BoardUnitList	src/canmatrix/canmatrix.py	/^class BoardUnitList(object):$/;"	c
CanId	build/lib/canmatrix/canmatrix.py	/^class CanId(object):$/;"	c
CanId	build/lib/canmatrix/join.py	/^from canmatrix.canmatrix import CanId$/;"	i
CanId	src/canmatrix/join.py	/^from canmatrix.canmatrix import CanId$/;"	i
CanMatrix	build/lib/canmatrix/canmatrix.py	/^class CanMatrix(object):$/;"	c
Command	versioneer.py	/^    from distutils.core import Command$/;"	i
Define	build/lib/canmatrix/canmatrix.py	/^class Define(object):$/;"	c
DuplicateMuxIdError	src/canmatrix/sym.py	/^class DuplicateMuxIdError(ParsingError):$/;"	c
EnumAttribs2Keys	build/lib/canmatrix/canmatrix.py	/^    def EnumAttribs2Keys(self):$/;"	f
EnumAttribs2Values	build/lib/canmatrix/canmatrix.py	/^    def EnumAttribs2Values(self):$/;"	f
FollowUps	build/lib/canmatrix/dbc.py	/^    class FollowUps(object):$/;"	c	function:load
FollowUps	src/canmatrix/dbc.py	/^    class FollowUps(object):$/;"	c
Frame	build/lib/canmatrix/canmatrix.py	/^class Frame(object):$/;"	c
Frame	src/canmatrix/canmatrix.py	/^class Frame(object):$/;"	c
FrameList	build/lib/canmatrix/canmatrix.py	/^class FrameList(object):$/;"	c
FrameList	src/canmatrix/canmatrix.py	/^class FrameList(object):$/;"	c
HANDLERS	src/canmatrix/_version.py	/^HANDLERS = {}$/;"	v
HANDLERS	versioneer.py	/^HANDLERS = {}$/;"	v
LONG_VERSION_PY	src/canmatrix/_version.py	/^LONG_VERSION_PY = {}$/;"	v
LONG_VERSION_PY	versioneer.py	/^LONG_VERSION_PY = {}$/;"	v
Max	src/canmatrix/dbf.py	/^                Max = float_factory(Max)$/;"	v
Min	src/canmatrix/dbf.py	/^                Min = float_factory(Min)$/;"	v
Mode	build/lib/canmatrix/sym.py	/^    class Mode(object):$/;"	c	function:load
Mode	src/canmatrix/sym.py	/^    class Mode(object):$/;"	c
NotThisMethod	src/canmatrix/_version.py	/^class NotThisMethod(Exception):$/;"	c
NotThisMethod	versioneer.py	/^class NotThisMethod(Exception):$/;"	c
OptionParser	build/lib/canmatrix/compare.py	/^    from optparse import OptionParser$/;"	i
OptionParser	build/lib/canmatrix/convert.py	/^    from optparse import OptionParser$/;"	i
OptionParser	examples/createCMacros.py	/^    from optparse import OptionParser$/;"	i
OptionParser	src/canmatrix/compare.py	/^    from optparse import OptionParser$/;"	i
OptionParser	src/canmatrix/convert.py	/^    from optparse import OptionParser$/;"	i
OrderedDict	build/lib/canmatrix/canmatrix.py	/^from collections import OrderedDict$/;"	i
OrderedDict	src/canmatrix/canmatrix.py	/^from collections import OrderedDict$/;"	i
ParsingError	src/canmatrix/sym.py	/^class ParsingError(Exception):$/;"	c
SafeRepresenter	build/lib/canmatrix/yaml.py	/^    from yaml.representer import SafeRepresenter$/;"	i
SafeRepresenter	src/canmatrix/yaml.py	/^    from yaml.representer import SafeRepresenter$/;"	i
Signal	build/lib/canmatrix/canmatrix.py	/^class Signal(object):$/;"	c
Signal	test/test_codec.py	/^from canmatrix.canmatrix import Signal$/;"	i
SignalGroup	build/lib/canmatrix/canmatrix.py	/^class SignalGroup(object):$/;"	c
SignalGroup	src/canmatrix/canmatrix.py	/^class SignalGroup(object):$/;"	c
StringIO	build/lib/canmatrix/formats.py	/^    import StringIO$/;"	i
StringIO	src/canmatrix/formats.py	/^    import StringIO$/;"	i
TestCanmatrixCodec	test/test_codec.py	/^class TestCanmatrixCodec(unittest.TestCase):$/;"	c
Unit	build/lib/canmatrix/arxml.py	/^                Unit = l4.text$/;"	v
Unit	build/lib/canmatrix/arxml.py	/^              Unit = displayname.text$/;"	v
Unit	src/canmatrix/arxml_BACKUP_26060.py	/^                Unit = l4.text$/;"	v
Unit	src/canmatrix/arxml_BACKUP_26060.py	/^              Unit = displayname.text$/;"	v
Unit	src/canmatrix/arxml_LOCAL_26060.py	/^                Unit = l4.text$/;"	v
Unit	src/canmatrix/arxml_LOCAL_26060.py	/^              Unit = displayname.text$/;"	v
VersioneerBadRootError	versioneer.py	/^class VersioneerBadRootError(Exception):$/;"	c
VersioneerConfig	src/canmatrix/_version.py	/^class VersioneerConfig:$/;"	c
VersioneerConfig	versioneer.py	/^class VersioneerConfig:$/;"	c
__add__	build/lib/canmatrix/cmcsv.py	/^    def __add__(self, other):$/;"	m	class:csvRow	file:
__add__	src/canmatrix/cmcsv.py	/^    def __add__(self, other):$/;"	m	class:csvRow	file:
__attrs_post_init__	src/canmatrix/canmatrix.py	/^    def __attrs_post_init__(self):$/;"	f	file:
__attrs_post_init__	src/canmatrix/sym.py	/^    def __attrs_post_init__(self):$/;"	m	class:DuplicateMuxIdError	file:
__attrs_post_init__	src/canmatrix/sym.py	/^    def __attrs_post_init__(self):$/;"	m	class:ParsingError	file:
__getitem__	build/lib/canmatrix/cmcsv.py	/^    def __getitem__(self, key):$/;"	m	class:csvRow	file:
__getitem__	src/canmatrix/canmatrix.py	/^    def __getitem__(self, name):$/;"	f	file:
__getitem__	src/canmatrix/cmcsv.py	/^    def __getitem__(self, key):$/;"	m	class:csvRow	file:
__init__	build/lib/canmatrix/arxml.py	/^    def __init__(self, name="", ref=None):$/;"	m	class:arTree
__init__	build/lib/canmatrix/autosarhelper.py	/^    def __init__(self, name="", ref=None):$/;"	m	class:arTree
__init__	build/lib/canmatrix/cancluster.py	/^    def __init__(self, *arg, **kw):$/;"	m	class:canCluster
__init__	build/lib/canmatrix/canmatrix.py	/^    def __init__(self):$/;"	m	class:BoardUnitList
__init__	build/lib/canmatrix/canmatrix.py	/^    def __init__(self):$/;"	m	class:CanMatrix
__init__	build/lib/canmatrix/canmatrix.py	/^    def __init__(self):$/;"	m	class:FrameList
__init__	build/lib/canmatrix/canmatrix.py	/^    def __init__(self, definition):$/;"	m	class:Define
__init__	build/lib/canmatrix/canmatrix.py	/^    def __init__(self, id, extended=True):$/;"	m	class:CanId
__init__	build/lib/canmatrix/canmatrix.py	/^    def __init__(self, name):$/;"	m	class:BoardUnit
__init__	build/lib/canmatrix/canmatrix.py	/^    def __init__(self, name, **kwargs):$/;"	m	class:Frame
__init__	build/lib/canmatrix/canmatrix.py	/^    def __init__(self, name, **kwargs):$/;"	m	class:Signal
__init__	build/lib/canmatrix/canmatrix.py	/^    def __init__(self, name, Id):$/;"	m	class:SignalGroup
__init__	build/lib/canmatrix/canmatrix.py	/^    def __init__(self, name, id):$/;"	f
__init__	build/lib/canmatrix/cmcsv.py	/^    def __init__(self):$/;"	m	class:csvRow
__init__	build/lib/canmatrix/compare.py	/^    def __init__(self, result=None, mtype=None, ref=None, changes=None):$/;"	m	class:compareResult
__init__	src/canmatrix/arxml.py	/^    def __init__(self, name="", ref=None):$/;"	m	class:arTree
__init__	src/canmatrix/arxml_BACKUP_26060.py	/^    def __init__(self, name="", ref=None):$/;"	m	class:arTree
__init__	src/canmatrix/arxml_BASE_26060.py	/^    def __init__(self, name="", ref=None):$/;"	m	class:arTree
__init__	src/canmatrix/arxml_LOCAL_26060.py	/^    def __init__(self, name="", ref=None):$/;"	m	class:arTree
__init__	src/canmatrix/arxml_REMOTE_26060.py	/^    def __init__(self, name="", ref=None):$/;"	m	class:arTree
__init__	src/canmatrix/cancluster.py	/^    def __init__(self, *arg, **kw):$/;"	m	class:canCluster
__init__	src/canmatrix/canmatrix.py	/^    def __init__(self):$/;"	m	class:BoardUnitList
__init__	src/canmatrix/canmatrix.py	/^    def __init__(self):$/;"	m	class:FrameList
__init__	src/canmatrix/canmatrix.py	/^    def __init__(self, name):$/;"	m	class:BoardUnit
__init__	src/canmatrix/canmatrix.py	/^    def __init__(self, name, **kwargs):$/;"	m	class:Frame
__init__	src/canmatrix/canmatrix.py	/^    def __init__(self, name, Id):$/;"	m	class:SignalGroup
__init__	src/canmatrix/canmatrix.py	/^    def __init__(self, name, id):$/;"	f
__init__	src/canmatrix/cmcsv.py	/^    def __init__(self):$/;"	m	class:csvRow
__init__	src/canmatrix/compare.py	/^    def __init__(self, result=None, mtype=None, ref=None, changes=None):$/;"	m	class:compareResult
__iter__	build/lib/canmatrix/canmatrix.py	/^    def __iter__(self):$/;"	f	file:
__iter__	build/lib/canmatrix/canmatrix.py	/^    def __iter__(self):$/;"	m	class:Frame	file:
__iter__	src/canmatrix/canmatrix.py	/^    def __iter__(self):$/;"	f	file:
__len__	build/lib/canmatrix/canmatrix.py	/^    def __len__(self):$/;"	f	file:
__len__	src/canmatrix/canmatrix.py	/^    def __len__(self):$/;"	f	file:
__setitem__	build/lib/canmatrix/cmcsv.py	/^    def __setitem__(self, key, item):$/;"	m	class:csvRow	file:
__setitem__	src/canmatrix/cmcsv.py	/^    def __setitem__(self, key, item):$/;"	m	class:csvRow	file:
__str__	build/lib/canmatrix/canmatrix.py	/^    def __str__(self):$/;"	f	file:
__str__	build/lib/canmatrix/canmatrix.py	/^    def __str__(self):$/;"	m	class:CanId	file:
__str__	build/lib/canmatrix/cmcsv.py	/^    def __str__(self):$/;"	m	class:csvRow	file:
__str__	src/canmatrix/canmatrix.py	/^    def __str__(self):$/;"	f	file:
__str__	src/canmatrix/cmcsv.py	/^    def __str__(self):$/;"	m	class:csvRow	file:
__str__	src/canmatrix/sym.py	/^    def __str__(self):$/;"	m	class:ParsingError	file:
__version__	build/lib/canmatrix/__init__.py	/^__version__ = canmatrix._version.get_versions()['version']$/;"	v
__version__	src/canmatrix/__init__.py	/^__version__ = canmatrix._version.get_versions()['version']$/;"	v
_build_exe	versioneer.py	/^        from cx_Freeze.dist import build_exe as _build_exe$/;"	i
_build_py	versioneer.py	/^        from distutils.command.build_py import build_py as _build_py$/;"	i
_build_py	versioneer.py	/^        from setuptools.command.build_py import build_py as _build_py$/;"	i
_py2exe	versioneer.py	/^            from py2exe.build_exe import py2exe as _py2exe  # py2$/;"	i
_py2exe	versioneer.py	/^            from py2exe.distutils_buildexe import py2exe as _py2exe  # py3$/;"	i
_sdist	versioneer.py	/^        from distutils.command.sdist import sdist as _sdist$/;"	i
_sdist	versioneer.py	/^        from setuptools.command.sdist import sdist as _sdist$/;"	i
_version	build/lib/canmatrix/__init__.py	/^import canmatrix._version$/;"	i
_version	src/canmatrix/__init__.py	/^import canmatrix._version$/;"	i
absolute_import	build/lib/canmatrix/__init__.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/arxml.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/autosarhelper.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/cmcsv.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/compare.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/convert.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/copy.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/dbc.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/dbf.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/fibex.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/kcd.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/log.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/sym.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/xls.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/xlsx.py	/^from __future__ import absolute_import$/;"	i
absolute_import	build/lib/canmatrix/yaml.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/__init__.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/arxml.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/arxml_BACKUP_26060.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/arxml_BASE_26060.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/arxml_LOCAL_26060.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/arxml_REMOTE_26060.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/cmcsv.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/compare.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/convert.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/copy.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/dbc.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/dbf.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/fibex.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/kcd.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/log.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/sym.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/xls.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/xlsx.py	/^from __future__ import absolute_import$/;"	i
absolute_import	src/canmatrix/yaml.py	/^from __future__ import absolute_import$/;"	i
absolute_import	test/test.py	/^from __future__ import absolute_import$/;"	i
accessNodes	src/canmatrix/dbc.py	/^                accessNodes = temp.group(9).split(",")$/;"	v	class:.FollowUps
accessType	src/canmatrix/dbc.py	/^                accessType  = temp.group(8)$/;"	v	class:.FollowUps
add	build/lib/canmatrix/canmatrix.py	/^    def add(self, BU):$/;"	m	class:BoardUnitList
add	src/canmatrix/canmatrix.py	/^    def add(self, BU):$/;"	m	class:BoardUnitList
addAttribute	build/lib/canmatrix/canmatrix.py	/^    def addAttribute(self, attribute, value):$/;"	f
addAttribute	src/canmatrix/canmatrix.py	/^    def addAttribute(self, attribute, value):$/;"	f
addBUDefines	build/lib/canmatrix/canmatrix.py	/^    def addBUDefines(self, type, definition):$/;"	f
addChild	build/lib/canmatrix/compare.py	/^    def addChild(self, child):$/;"	m	class:compareResult
addChild	src/canmatrix/compare.py	/^    def addChild(self, child):$/;"	m	class:compareResult
addComment	build/lib/canmatrix/canmatrix.py	/^    def addComment(self, comment):$/;"	f
addComment	src/canmatrix/canmatrix.py	/^    def addComment(self, comment):$/;"	f
addDefault	build/lib/canmatrix/canmatrix.py	/^    def addDefault(self, default):$/;"	f
addDefault	build/lib/canmatrix/canmatrix.py	/^    def addDefault(self, default):$/;"	m	class:Define
addDefineDefault	build/lib/canmatrix/canmatrix.py	/^    def addDefineDefault(self, name, value):$/;"	f
addFrame	build/lib/canmatrix/canmatrix.py	/^    def addFrame(self, frame):$/;"	f
addFrame	src/canmatrix/canmatrix.py	/^    def addFrame(self, frame):$/;"	f
addFrameDefines	build/lib/canmatrix/canmatrix.py	/^    def addFrameDefines(self, type, definition):$/;"	f
addGlobalDefines	build/lib/canmatrix/canmatrix.py	/^    def addGlobalDefines(self, type, definition):$/;"	f
addReceiver	build/lib/canmatrix/canmatrix.py	/^    def addReceiver(self, receiver):$/;"	f
addReceiver	src/canmatrix/canmatrix.py	/^    def addReceiver(self, receiver):$/;"	f
addSignal	build/lib/canmatrix/canmatrix.py	/^    def addSignal(self, signal):$/;"	f
addSignal	build/lib/canmatrix/canmatrix.py	/^    def addSignal(self, signal):$/;"	m	class:SignalGroup
addSignal	src/canmatrix/canmatrix.py	/^    def addSignal(self, signal):$/;"	f
addSignalDefines	build/lib/canmatrix/canmatrix.py	/^    def addSignalDefines(self, type, definition):$/;"	f
addSignalGroup	build/lib/canmatrix/canmatrix.py	/^    def addSignalGroup(self, Name, Id, signalNames):$/;"	m	class:Frame
addSignalToLastFrame	build/lib/canmatrix/canmatrix.py	/^    def addSignalToLastFrame(self, signal):$/;"	m	class:FrameList
addSignalToLastFrame	src/canmatrix/canmatrix.py	/^    def addSignalToLastFrame(self, signal):$/;"	m	class:FrameList
addTransmitter	build/lib/canmatrix/canmatrix.py	/^    def addTransmitter(self, transmitter):$/;"	f
addValueTable	build/lib/canmatrix/canmatrix.py	/^    def addValueTable(self, name, valueTable):$/;"	f
addValues	build/lib/canmatrix/canmatrix.py	/^    def addValues(self, value, valueName):$/;"	f
addValues	src/canmatrix/canmatrix.py	/^    def addValues(self, value, valueName):$/;"	f
additionalFrameInfo	src/canmatrix/xls.py	/^        additionalFrameInfo = []$/;"	v
arGetChild	build/lib/canmatrix/arxml.py	/^def arGetChild(parent, tagname, arTranslationTable, namespace):$/;"	f
arGetChild	build/lib/canmatrix/autosarhelper.py	/^def arGetChild(parent, tagname, arTranslationTable, namespace):$/;"	f
arGetChild	src/canmatrix/arxml.py	/^def arGetChild(parent, tagname, xmlRoot, namespace):$/;"	f
arGetChild	src/canmatrix/arxml_BACKUP_26060.py	/^def arGetChild(parent, tagname, xmlRoot, namespace):$/;"	f
arGetChild	src/canmatrix/arxml_BASE_26060.py	/^def arGetChild(parent, tagname, arTranslationTable, namespace):$/;"	f
arGetChild	src/canmatrix/arxml_LOCAL_26060.py	/^def arGetChild(parent, tagname, arTranslationTable, namespace):$/;"	f
arGetChild	src/canmatrix/arxml_REMOTE_26060.py	/^def arGetChild(parent, tagname, xmlRoot, namespace):$/;"	f
arGetChildren	build/lib/canmatrix/arxml.py	/^def arGetChildren(parent, tagname, arTranslationTable, namespace):$/;"	f
arGetChildren	build/lib/canmatrix/autosarhelper.py	/^def arGetChildren(parent, tagname, arTranslationTable, namespace):$/;"	f
arGetChildren	src/canmatrix/arxml.py	/^def arGetChildren(parent, tagname, arTranslationTable, namespace):$/;"	f
arGetChildren	src/canmatrix/arxml_BACKUP_26060.py	/^def arGetChildren(parent, tagname, arTranslationTable, namespace):$/;"	f
arGetChildren	src/canmatrix/arxml_BASE_26060.py	/^def arGetChildren(parent, tagname, arTranslationTable, namespace):$/;"	f
arGetChildren	src/canmatrix/arxml_LOCAL_26060.py	/^def arGetChildren(parent, tagname, arTranslationTable, namespace):$/;"	f
arGetChildren	src/canmatrix/arxml_REMOTE_26060.py	/^def arGetChildren(parent, tagname, arTranslationTable, namespace):$/;"	f
arGetName	build/lib/canmatrix/arxml.py	/^def arGetName(parent, ns):$/;"	f
arGetName	build/lib/canmatrix/autosarhelper.py	/^def arGetName(parent, ns):$/;"	f
arGetName	src/canmatrix/arxml.py	/^def arGetName(parent, ns):$/;"	f
arGetName	src/canmatrix/arxml_BACKUP_26060.py	/^def arGetName(parent, ns):$/;"	f
arGetName	src/canmatrix/arxml_BASE_26060.py	/^def arGetName(parent, ns):$/;"	f
arGetName	src/canmatrix/arxml_LOCAL_26060.py	/^def arGetName(parent, ns):$/;"	f
arGetName	src/canmatrix/arxml_REMOTE_26060.py	/^def arGetName(parent, ns):$/;"	f
arGetPath	build/lib/canmatrix/arxml.py	/^def arGetPath(ardict, path):$/;"	f
arGetPath	build/lib/canmatrix/autosarhelper.py	/^def arGetPath(ardict, path):$/;"	f
arGetPath	src/canmatrix/arxml.py	/^def arGetPath(ardict, path):$/;"	f
arGetPath	src/canmatrix/arxml_BACKUP_26060.py	/^def arGetPath(ardict, path):$/;"	f
arGetPath	src/canmatrix/arxml_BASE_26060.py	/^def arGetPath(ardict, path):$/;"	f
arGetPath	src/canmatrix/arxml_LOCAL_26060.py	/^def arGetPath(ardict, path):$/;"	f
arGetPath	src/canmatrix/arxml_REMOTE_26060.py	/^def arGetPath(ardict, path):$/;"	f
arGetXchildren	build/lib/canmatrix/arxml.py	/^def arGetXchildren(root, path, arDict, ns):$/;"	f
arGetXchildren	build/lib/canmatrix/autosarhelper.py	/^def arGetXchildren(root, path, arDict, ns):$/;"	f
arGetXchildren	src/canmatrix/arxml.py	/^def arGetXchildren(root, path, arDict, ns):$/;"	f
arGetXchildren	src/canmatrix/arxml_BACKUP_26060.py	/^def arGetXchildren(root, path, arDict, ns):$/;"	f
arGetXchildren	src/canmatrix/arxml_BASE_26060.py	/^def arGetXchildren(root, path, arDict, ns):$/;"	f
arGetXchildren	src/canmatrix/arxml_LOCAL_26060.py	/^def arGetXchildren(root, path, arDict, ns):$/;"	f
arGetXchildren	src/canmatrix/arxml_REMOTE_26060.py	/^def arGetXchildren(root, path, arDict, ns):$/;"	f
arParseTree	build/lib/canmatrix/arxml.py	/^def arParseTree(tag, ardict, namespace):$/;"	f
arParseTree	build/lib/canmatrix/autosarhelper.py	/^def arParseTree(tag, ardict, namespace):$/;"	f
arParseTree	src/canmatrix/arxml.py	/^def arParseTree(tag, ardict, namespace):$/;"	f
arParseTree	src/canmatrix/arxml_BACKUP_26060.py	/^def arParseTree(tag, ardict, namespace):$/;"	f
arParseTree	src/canmatrix/arxml_BASE_26060.py	/^def arParseTree(tag, ardict, namespace):$/;"	f
arParseTree	src/canmatrix/arxml_LOCAL_26060.py	/^def arParseTree(tag, ardict, namespace):$/;"	f
arParseTree	src/canmatrix/arxml_REMOTE_26060.py	/^def arParseTree(tag, ardict, namespace):$/;"	f
arPath2xPath	src/canmatrix/arxml.py	/^def arPath2xPath(arPath, destElement=None):$/;"	f
arPath2xPath	src/canmatrix/arxml_BACKUP_26060.py	/^def arPath2xPath(arPath, destElement=None):$/;"	f
arPath2xPath	src/canmatrix/arxml_REMOTE_26060.py	/^def arPath2xPath(arPath, destElement=None):$/;"	f
arTree	build/lib/canmatrix/arxml.py	/^class arTree(object):$/;"	c
arTree	build/lib/canmatrix/autosarhelper.py	/^class arTree(object):$/;"	c
arTree	src/canmatrix/arxml.py	/^class arTree(object):$/;"	c
arTree	src/canmatrix/arxml_BACKUP_26060.py	/^class arTree(object):$/;"	c
arTree	src/canmatrix/arxml_BASE_26060.py	/^class arTree(object):$/;"	c
arTree	src/canmatrix/arxml_LOCAL_26060.py	/^class arTree(object):$/;"	c
arTree	src/canmatrix/arxml_REMOTE_26060.py	/^class arTree(object):$/;"	c
arguments	.idea/coverage.bat	/^set arguments=%2$/;"	v
as_list	build/lib/canmatrix/cmcsv.py	/^    def as_list(self):$/;"	m	class:csvRow
as_list	src/canmatrix/cmcsv.py	/^    def as_list(self):$/;"	m	class:csvRow
attr	src/canmatrix/canmatrix.py	/^import attr$/;"	i
attribute	build/lib/canmatrix/canmatrix.py	/^    def attribute(self, attributeName):$/;"	f
attribute	build/lib/canmatrix/canmatrix.py	/^    def attribute(self, db, attributeName):$/;"	f
attribute	build/lib/canmatrix/canmatrix.py	/^    def attribute(self, db, attributeName):$/;"	m	class:Frame
attribute	src/canmatrix/canmatrix.py	/^    def attribute(self, attributeName, db=None, default=None):$/;"	f
attribute	src/canmatrix/canmatrix.py	/^    def attribute(self, db, attributeName):$/;"	f
attributes	src/canmatrix/canmatrix.py	/^    attributes = attr.ib(factory=dict, repr=False)$/;"	v
attributes	src/canmatrix/canmatrix.py	/^    attributes = attr.ib(type=dict, default = attr.Factory(dict))$/;"	v
attributes	src/canmatrix/copy.py	/^        attributes = frame.attributes$/;"	v
attributes	src/canmatrix/copy.py	/^    attributes = frame.attributes$/;"	v
baseType	build/lib/canmatrix/arxml.py	/^            baseType = arGetChild(datdefprops, "BASE-TYPE", arDict, ns)$/;"	v
baseType	build/lib/canmatrix/arxml.py	/^            baseType = arGetChild(isignal, "BASE-TYPE", arDict, ns)$/;"	v
baseType	src/canmatrix/arxml_BACKUP_26060.py	/^            baseType = arGetChild(datdefprops, "BASE-TYPE", xmlRoot, ns)$/;"	v
baseType	src/canmatrix/arxml_BACKUP_26060.py	/^            baseType = arGetChild(isignal, "BASE-TYPE", xmlRoot, ns)$/;"	v
baseType	src/canmatrix/arxml_LOCAL_26060.py	/^            baseType = arGetChild(datdefprops, "BASE-TYPE", arDict, ns)$/;"	v
baseType	src/canmatrix/arxml_LOCAL_26060.py	/^            baseType = arGetChild(isignal, "BASE-TYPE", arDict, ns)$/;"	v
basestring	build/lib/canmatrix/canmatrix.py	/^from past.builtins import basestring$/;"	i
basestring	src/canmatrix/canmatrix.py	/^from past.builtins import basestring$/;"	i
bitNumbering	build/lib/canmatrix/arxml.py	/^                            bitNumbering=1,$/;"	v
bitNumbering	build/lib/canmatrix/dbf.py	/^                        bitNumbering=1,$/;"	v
bitNumbering	src/canmatrix/arxml_BACKUP_26060.py	/^                            bitNumbering=1,$/;"	v
bitNumbering	src/canmatrix/arxml_LOCAL_26060.py	/^                            bitNumbering=1,$/;"	v
bitNumbering	src/canmatrix/dbf.py	/^                        bitNumbering=1,$/;"	v
bitNumbering	src/canmatrix/xls.py	/^                            bitNumbering=1,$/;"	v
bitstruct	build/lib/canmatrix/canmatrix.py	/^            logger.error("message decoding not supported due bitstruct import error \/\/ try pip install bitstruct")$/;"	i
bitstruct	build/lib/canmatrix/canmatrix.py	/^    bitstruct = None$/;"	v
bitstruct	build/lib/canmatrix/canmatrix.py	/^    import bitstruct$/;"	i
bitstruct	src/canmatrix/canmatrix.py	/^import bitstruct$/;"	i
bitstruct_format	build/lib/canmatrix/canmatrix.py	/^    def bitstruct_format(self):$/;"	f
bitstruct_format	build/lib/canmatrix/canmatrix.py	/^    def bitstruct_format(self, signalsToDecode = None):$/;"	f
bitstruct_format	src/canmatrix/canmatrix.py	/^    def bitstruct_format(self):$/;"	f
bo	build/lib/canmatrix/dbc.py	/^                        bo = db.frameById(botschaftId)$/;"	v	class:load.FollowUps
bo	src/canmatrix/dbc.py	/^                            bo = db.frameById(botschaftId)$/;"	v	class:.FollowUps
bo	src/canmatrix/dbc.py	/^                        bo = db.frameById(botschaftId)$/;"	v	class:.FollowUps
boList	src/canmatrix/dbf.py	/^                boList = temstr.split(',')$/;"	v
boardUnit	build/lib/canmatrix/dbc.py	/^                    boardUnit = db.boardUnitByName(temp.group(1))$/;"	v	class:load.FollowUps
boardUnit	build/lib/canmatrix/dbc.py	/^                boardUnit = db.boardUnitByName(temp.group(1))$/;"	v	class:load.FollowUps
boardUnit	src/canmatrix/dbc.py	/^                        boardUnit = db.boardUnitByName(temp.group(1))$/;"	v	class:.FollowUps
boardUnit	src/canmatrix/dbc.py	/^                    boardUnit = db.boardUnitByName(temp.group(1))$/;"	v	class:.FollowUps
boardUnit	src/canmatrix/dbc.py	/^                boardUnit = db.boardUnitByName(temp.group(1))$/;"	v	class:.FollowUps
boardUnit	src/canmatrix/dbc.py	/^    boardUnit = None$/;"	v
boardUnitByName	build/lib/canmatrix/canmatrix.py	/^    def boardUnitByName(self, name):$/;"	f
boardUnitByName	src/canmatrix/canmatrix.py	/^    def boardUnitByName(self, name):$/;"	f
boardUnits	build/lib/canmatrix/cancluster.py	/^    def boardUnits(self):$/;"	m	class:canCluster
boardUnits	src/canmatrix/cancluster.py	/^    def boardUnits(self):$/;"	m	class:canCluster
boolean_options	versioneer.py	/^        boolean_options = []$/;"	v	class:get_cmdclass.cmd_version
botschaft	build/lib/canmatrix/dbc.py	/^                    botschaft = db.frameById(temp.group(1))$/;"	v	class:load.FollowUps
botschaft	build/lib/canmatrix/dbc.py	/^                botschaft = db.frameById(temp.group(1))$/;"	v	class:load.FollowUps
botschaft	build/lib/canmatrix/dbc.py	/^            botschaft = db.frameById(temp.group(1))$/;"	v	class:load.FollowUps
botschaft	src/canmatrix/dbc.py	/^                        botschaft = db.frameById(temp.group(1))$/;"	v	class:.FollowUps
botschaft	src/canmatrix/dbc.py	/^                    botschaft = db.frameById(temp.group(1))$/;"	v	class:.FollowUps
botschaft	src/canmatrix/dbc.py	/^                botschaft = db.frameById(temp.group(1))$/;"	v	class:.FollowUps
botschaft	src/canmatrix/dbc.py	/^            botschaft = db.frameById(temp.group(1))$/;"	v	class:.FollowUps
botschaftId	build/lib/canmatrix/dbc.py	/^                botschaftId = temp.group(1)$/;"	v	class:load.FollowUps
botschaftId	src/canmatrix/dbc.py	/^                    botschaftId = temp.group(1)$/;"	v	class:.FollowUps
botschaftId	src/canmatrix/dbc.py	/^                botschaftId = temp.group(1)$/;"	v	class:.FollowUps
bu	build/lib/canmatrix/arxml.py	/^            bu = processEcu(node, db, arDict, multiplexTranslation, ns)$/;"	v
bu	src/canmatrix/arxml_BACKUP_26060.py	/^            bu = processEcu(node, db, searchPoint, multiplexTranslation, ns)$/;"	v
bu	src/canmatrix/arxml_LOCAL_26060.py	/^            bu = processEcu(node, db, arDict, multiplexTranslation, ns)$/;"	v
byId	build/lib/canmatrix/canmatrix.py	/^    def byId(self, Id):$/;"	f
byId	src/canmatrix/canmatrix.py	/^    def byId(self, Id):$/;"	f
byName	build/lib/canmatrix/canmatrix.py	/^    def byName(self, Name):$/;"	f
byName	build/lib/canmatrix/canmatrix.py	/^    def byName(self, name):$/;"	f
byName	src/canmatrix/canmatrix.py	/^    def byName(self, Name):$/;"	f
byName	src/canmatrix/canmatrix.py	/^    def byName(self, name):$/;"	f
calcDLC	build/lib/canmatrix/canmatrix.py	/^    def calcDLC(self):$/;"	f
calcMax	build/lib/canmatrix/canmatrix.py	/^    def calcMax(self):$/;"	f
calcMax	src/canmatrix/canmatrix.py	/^    def calcMax(self):$/;"	f
calcMin	build/lib/canmatrix/canmatrix.py	/^    def calcMin(self):$/;"	f
calcMin	src/canmatrix/canmatrix.py	/^    def calcMin(self):$/;"	f
calc_max_for_none	src/canmatrix/canmatrix.py	/^    calc_max_for_none = attr.ib(type=bool, default = True)$/;"	v
calc_max_for_none	src/canmatrix/sym.py	/^    calc_max_for_none = options.get('calc_max_for_none')$/;"	v
calc_min_for_none	src/canmatrix/canmatrix.py	/^    calc_min_for_none = attr.ib(type=bool, default = True)$/;"	v
calc_min_for_none	src/canmatrix/sym.py	/^    calc_min_for_none = options.get('calc_min_for_none')$/;"	v
calculateRawRange	build/lib/canmatrix/canmatrix.py	/^    def calculateRawRange(self):$/;"	f
calculateRawRange	src/canmatrix/canmatrix.py	/^    def calculateRawRange(self):$/;"	f
can	build/lib/canmatrix/fibex.py	/^can = "http:\/\/www.asam.net\/xml\/fbx\/can"$/;"	v
can	src/canmatrix/fibex.py	/^can = "http:\/\/www.asam.net\/xml\/fbx\/can"$/;"	v
canCluster	build/lib/canmatrix/cancluster.py	/^class canCluster(dict):$/;"	c
canCluster	src/canmatrix/cancluster.py	/^class canCluster(dict):$/;"	c
cancluster	build/lib/canmatrix/__init__.py	/^import canmatrix.cancluster as cancluster$/;"	i
cancluster	src/canmatrix/__init__.py	/^import canmatrix.cancluster as cancluster$/;"	i
canmatrix	build/lib/canmatrix/__init__.py	/^import canmatrix._version$/;"	i
canmatrix	build/lib/canmatrix/__init__.py	/^import canmatrix.cancluster as cancluster$/;"	i
canmatrix	build/lib/canmatrix/__init__.py	/^import canmatrix.convert as convert$/;"	i
canmatrix	build/lib/canmatrix/__init__.py	/^import canmatrix.copy as copy$/;"	i
canmatrix	build/lib/canmatrix/__init__.py	/^import canmatrix.formats as formats$/;"	i
canmatrix	build/lib/canmatrix/compare.py	/^    import canmatrix.formats$/;"	i
canmatrix	build/lib/canmatrix/convert.py	/^import canmatrix.canmatrix as cm$/;"	i
canmatrix	build/lib/canmatrix/convert.py	/^import canmatrix.copy as cmcp$/;"	i
canmatrix	build/lib/canmatrix/convert.py	/^import canmatrix.formats$/;"	i
canmatrix	build/lib/canmatrix/formats.py	/^import canmatrix$/;"	i
canmatrix	build/lib/canmatrix/join.py	/^import canmatrix.formats$/;"	i
canmatrix	build/lib/canmatrix/xlsx.py	/^        import canmatrix.xls$/;"	i
canmatrix	examples/BusmasterRestbus.py	/^import canmatrix.formats$/;"	i
canmatrix	examples/compare.py	/^import canmatrix.compare$/;"	i
canmatrix	examples/convert.py	/^import canmatrix.convert$/;"	i
canmatrix	examples/createCMacros.py	/^import canmatrix.formats$/;"	i
canmatrix	examples/createJ1939Dbc.py	/^import canmatrix.formats$/;"	i
canmatrix	examples/createccl.py	/^import canmatrix.formats$/;"	i
canmatrix	examples/exampleJoin.py	/^import canmatrix.formats$/;"	i
canmatrix	examples/exampleMerge.py	/^import canmatrix.formats$/;"	i
canmatrix	src/canmatrix/__init__.py	/^import canmatrix._version$/;"	i
canmatrix	src/canmatrix/__init__.py	/^import canmatrix.cancluster as cancluster$/;"	i
canmatrix	src/canmatrix/__init__.py	/^import canmatrix.convert as convert$/;"	i
canmatrix	src/canmatrix/__init__.py	/^import canmatrix.copy as copy$/;"	i
canmatrix	src/canmatrix/__init__.py	/^import canmatrix.formats as formats$/;"	i
canmatrix	src/canmatrix/compare.py	/^    import canmatrix.formats$/;"	i
canmatrix	src/canmatrix/convert.py	/^import canmatrix.canmatrix as cm$/;"	i
canmatrix	src/canmatrix/convert.py	/^import canmatrix.copy as cmcp$/;"	i
canmatrix	src/canmatrix/convert.py	/^import canmatrix.formats$/;"	i
canmatrix	src/canmatrix/formats.py	/^import canmatrix$/;"	i
canmatrix	src/canmatrix/join.py	/^import canmatrix.formats$/;"	i
canmatrix	src/canmatrix/tests/test_canmatrix.py	/^import canmatrix.canmatrix$/;"	i
canmatrix	src/canmatrix/tests/test_cmjson.py	/^import canmatrix.canmatrix$/;"	i
canmatrix	src/canmatrix/tests/test_cmjson.py	/^import canmatrix.formats$/;"	i
canmatrix	src/canmatrix/tests/test_sym.py	/^import canmatrix.sym$/;"	i
canmatrix	src/canmatrix/xlsx.py	/^        import canmatrix.xls$/;"	i
canmatrix	test/createTestFdMatrix.py	/^import canmatrix$/;"	i
canmatrix	test/createTestMatrix.py	/^import canmatrix.formats$/;"	i
canmatrix	test/test.py	/^import canmatrix.convert$/;"	i
canmatrix	test/test.py	/^import canmatrix.formats$/;"	i
classifiers	setup.py	/^    classifiers = filter(None, classifiers.split("\\n")),$/;"	v
clusterExporter	build/lib/canmatrix/arxml.py	/^clusterExporter = 1$/;"	v
clusterExporter	build/lib/canmatrix/kcd.py	/^clusterExporter = 1$/;"	v
clusterExporter	src/canmatrix/arxml.py	/^clusterExporter = 1$/;"	v
clusterExporter	src/canmatrix/arxml_BACKUP_26060.py	/^clusterExporter = 1$/;"	v
clusterExporter	src/canmatrix/arxml_BASE_26060.py	/^clusterExporter = 1$/;"	v
clusterExporter	src/canmatrix/arxml_LOCAL_26060.py	/^clusterExporter = 1$/;"	v
clusterExporter	src/canmatrix/arxml_REMOTE_26060.py	/^clusterExporter = 1$/;"	v
clusterExporter	src/canmatrix/kcd.py	/^clusterExporter = 1$/;"	v
clusterImporter	build/lib/canmatrix/arxml.py	/^clusterImporter = 1$/;"	v
clusterImporter	build/lib/canmatrix/kcd.py	/^clusterImporter = 1$/;"	v
clusterImporter	src/canmatrix/arxml.py	/^clusterImporter = 1$/;"	v
clusterImporter	src/canmatrix/arxml_BACKUP_26060.py	/^clusterImporter = 1$/;"	v
clusterImporter	src/canmatrix/arxml_BASE_26060.py	/^clusterImporter = 1$/;"	v
clusterImporter	src/canmatrix/arxml_LOCAL_26060.py	/^clusterImporter = 1$/;"	v
clusterImporter	src/canmatrix/arxml_REMOTE_26060.py	/^clusterImporter = 1$/;"	v
clusterImporter	src/canmatrix/kcd.py	/^clusterImporter = 1$/;"	v
cm	build/lib/canmatrix/convert.py	/^import canmatrix.canmatrix as cm$/;"	i
cm	examples/createJ1939Dbc.py	/^cm = canmatrix.CanMatrix()$/;"	v
cm	src/canmatrix/convert.py	/^import canmatrix.canmatrix as cm$/;"	i
cmcp	build/lib/canmatrix/convert.py	/^import canmatrix.copy as cmcp$/;"	i
cmcp	src/canmatrix/convert.py	/^import canmatrix.copy as cmcp$/;"	i
cmd	versioneer.py	/^    cmd = sys.argv[1]$/;"	v
cmd_build_exe	versioneer.py	/^        class cmd_build_exe(_build_exe):$/;"	c	class:get_cmdclass.cmd_build_py
cmd_build_py	versioneer.py	/^    class cmd_build_py(_build_py):$/;"	c	function:get_cmdclass
cmd_py2exe	versioneer.py	/^        class cmd_py2exe(_py2exe):$/;"	c	class:get_cmdclass.cmd_build_py
cmd_sdist	versioneer.py	/^    class cmd_sdist(_sdist):$/;"	c	function:get_cmdclass
cmd_version	versioneer.py	/^    class cmd_version(Command):$/;"	c	function:get_cmdclass
cmdclass	setup.py	/^    cmdclass = versioneer.get_cmdclass(),$/;"	v
codecs	build/lib/canmatrix/cmcsv.py	/^    import codecs$/;"	i
codecs	build/lib/canmatrix/cmjson.py	/^import codecs$/;"	i
codecs	build/lib/canmatrix/dbc.py	/^import codecs$/;"	i
codecs	build/lib/canmatrix/dbf.py	/^import codecs$/;"	i
codecs	build/lib/canmatrix/sym.py	/^import codecs$/;"	i
codecs	build/lib/canmatrix/xls.py	/^import codecs$/;"	i
codecs	build/lib/canmatrix/xlsx.py	/^import codecs$/;"	i
codecs	build/lib/canmatrix/yaml.py	/^import codecs$/;"	i
codecs	src/canmatrix/cmcsv.py	/^    import codecs$/;"	i
codecs	src/canmatrix/cmjson.py	/^import codecs$/;"	i
codecs	src/canmatrix/dbc.py	/^import codecs$/;"	i
codecs	src/canmatrix/xls.py	/^import codecs$/;"	i
codecs	src/canmatrix/xlsx.py	/^import codecs$/;"	i
codecs	src/canmatrix/yaml.py	/^import codecs$/;"	i
codecs	test/createTestFdMatrix.py	/^import codecs$/;"	i
codecs	test/createTestMatrix.py	/^import codecs$/;"	i
col	src/canmatrix/xls.py	/^                    col = head_top.__len__()$/;"	v
col	src/canmatrix/xls.py	/^                    col = writeBuMatrix($/;"	v
col	src/canmatrix/xls.py	/^                col = head_top.__len__()$/;"	v
col	src/canmatrix/xls.py	/^                col = writeBuMatrix($/;"	v
collections	build/lib/canmatrix/dbc.py	/^import collections$/;"	i
collections	build/lib/canmatrix/sym.py	/^import collections$/;"	i
collections	src/canmatrix/dbc.py	/^import collections$/;"	i
collections	src/canmatrix/sym.py	/^import collections$/;"	i
comDir	build/lib/canmatrix/arxml.py	/^                    comDir = arGetChild($/;"	v
comDir	src/canmatrix/arxml_BACKUP_26060.py	/^                    comDir = arGetChild($/;"	v
comDir	src/canmatrix/arxml_LOCAL_26060.py	/^                    comDir = arGetChild($/;"	v
commandStr	src/canmatrix/xls.py	/^                        commandStr = additionalInputs[additionalIndex].replace("signal", "newSig")$/;"	v
commandStr	src/canmatrix/xls.py	/^                    commandStr = additionalInputs[additionalIndex].replace("frame", "newBo")$/;"	v
comment	build/lib/canmatrix/arxml.py	/^                            comment=signalDescription,$/;"	v
comment	build/lib/canmatrix/arxml.py	/^        comment = getDesc(frameR, arDict, ns)$/;"	v
comment	build/lib/canmatrix/dbc.py	/^                            comment = temp_raw.group(2).decode($/;"	v	class:load.FollowUps
comment	build/lib/canmatrix/dbc.py	/^                        comment = temp_raw.group(2).decode($/;"	v	class:load.FollowUps
comment	build/lib/canmatrix/dbc.py	/^                        comment = temp_raw.group(3).decode($/;"	v	class:load.FollowUps
comment	build/lib/canmatrix/dbf.py	/^                comment = signal.comment.replace("\\n", " ")$/;"	v
comment	build/lib/canmatrix/dbf.py	/^            comment = bu.comment.replace("\\n", " ")$/;"	v
comment	build/lib/canmatrix/dbf.py	/^            comment = frame.comment.replace("\\n", " ")$/;"	v
comment	build/lib/canmatrix/sym.py	/^                                        comment=comment)$/;"	v	class:load.Mode
comment	build/lib/canmatrix/sym.py	/^                                    comment=comment)$/;"	v	class:load.Mode
comment	build/lib/canmatrix/sym.py	/^                    comment = line.split('\/\/')[1].strip()$/;"	v	class:load.Mode
comment	build/lib/canmatrix/sym.py	/^                comment = ""$/;"	v	class:load.Mode
comment	examples/createJ1939Dbc.py	/^                         comment = "J1939 packet containing >8 byte payload")$/;"	v
comment	examples/createJ1939Dbc.py	/^                         comment="J1939 packet containing 8 byte payload")$/;"	v
comment	examples/createJ1939Dbc.py	/^                         comment="J1939 packet containing <8 byte payload")$/;"	v
comment	src/canmatrix/arxml_BACKUP_26060.py	/^                            comment=signalDescription,$/;"	v
comment	src/canmatrix/arxml_BACKUP_26060.py	/^        comment = getDesc(frameR, arDict, ns)$/;"	v
comment	src/canmatrix/arxml_BACKUP_26060.py	/^        comment = getDesc(frameR, xmlRoot, ns)$/;"	v
comment	src/canmatrix/arxml_LOCAL_26060.py	/^                            comment=signalDescription,$/;"	v
comment	src/canmatrix/arxml_LOCAL_26060.py	/^        comment = getDesc(frameR, arDict, ns)$/;"	v
comment	src/canmatrix/canmatrix.py	/^    comment = attr.ib(default = None)$/;"	v
comment	src/canmatrix/canmatrix.py	/^    comment = attr.ib(default=None)$/;"	v
comment	src/canmatrix/dbc.py	/^                                comment = temp_raw.group(2).decode($/;"	v	class:.FollowUps
comment	src/canmatrix/dbc.py	/^                            comment = temp_raw.group(2).decode($/;"	v	class:.FollowUps
comment	src/canmatrix/dbc.py	/^                            comment = temp_raw.group(3).decode($/;"	v	class:.FollowUps
comment	src/canmatrix/dbc.py	/^                        comment = temp_raw.group(2).decode($/;"	v	class:.FollowUps
comment	src/canmatrix/dbc.py	/^                        comment = temp_raw.group(3).decode($/;"	v	class:.FollowUps
comment	src/canmatrix/dbc.py	/^    comment = ""$/;"	v
comment	src/canmatrix/dbf.py	/^                comment = signal.comment.replace("\\n", " ")$/;"	v
comment	src/canmatrix/dbf.py	/^            comment = bu.comment.replace("\\n", " ")$/;"	v
comment	src/canmatrix/dbf.py	/^            comment = frame.comment.replace("\\n", " ")$/;"	v
comment	src/canmatrix/kcd.py	/^            comment = etree.Element('Notes')$/;"	v
comment	src/canmatrix/sym.py	/^                                            comment=comment,$/;"	v	class:.Mode
comment	src/canmatrix/sym.py	/^                                         comment=comment,$/;"	v	class:.Mode
comment	src/canmatrix/sym.py	/^                                        comment=comment)$/;"	v	class:.Mode
comment	src/canmatrix/sym.py	/^                                    comment=comment)$/;"	v	class:.Mode
comment	src/canmatrix/sym.py	/^                        comment = split[1].strip()$/;"	v	class:.Mode
comment	src/canmatrix/sym.py	/^                    comment = ""$/;"	v	class:.Mode
comment	src/canmatrix/sym.py	/^                    comment = line.split('\/\/')[1].strip()$/;"	v	class:.Mode
comment	src/canmatrix/sym.py	/^                comment = ""$/;"	v	class:.Mode
comment	test/createTestMatrix.py	/^    comment = "Multi \\n Line \\n Signal comment with a-umlaut: ä".decode("utf-8")$/;"	v
comment	test/createTestMatrix.py	/^    comment = u"Multi \\n Line \\n Signal comment with a-umlaut: ä"$/;"	v
comments	src/canmatrix/canmatrix.py	/^    comments = attr.ib(type=dict, default = attr.Factory(dict))$/;"	v
compare	examples/compare.py	/^import canmatrix.compare$/;"	i
compareAttributes	build/lib/canmatrix/compare.py	/^def compareAttributes(ele1, ele2, ignore=None):$/;"	f
compareAttributes	src/canmatrix/compare.py	/^def compareAttributes(ele1, ele2, ignore=None):$/;"	f
compareBu	build/lib/canmatrix/compare.py	/^def compareBu(bu1, bu2, ignore=None):$/;"	f
compareBu	src/canmatrix/compare.py	/^def compareBu(bu1, bu2, ignore=None):$/;"	f
compareDb	build/lib/canmatrix/compare.py	/^def compareDb(db1, db2, ignore=None):$/;"	f
compareDb	src/canmatrix/compare.py	/^def compareDb(db1, db2, ignore=None):$/;"	f
compareDefineList	build/lib/canmatrix/compare.py	/^def compareDefineList(d1list, d2list):$/;"	f
compareDefineList	src/canmatrix/compare.py	/^def compareDefineList(d1list, d2list):$/;"	f
compareFrame	build/lib/canmatrix/compare.py	/^def compareFrame(f1, f2, ignore=None):$/;"	f
compareFrame	src/canmatrix/compare.py	/^def compareFrame(f1, f2, ignore=None):$/;"	f
compareResult	build/lib/canmatrix/compare.py	/^class compareResult(object):$/;"	c
compareResult	src/canmatrix/compare.py	/^class compareResult(object):$/;"	c
compareSignal	build/lib/canmatrix/compare.py	/^def compareSignal(s1, s2, ignore=None):$/;"	f
compareSignal	src/canmatrix/compare.py	/^def compareSignal(s1, s2, ignore=None):$/;"	f
compareSignalGroup	build/lib/canmatrix/compare.py	/^def compareSignalGroup(sg1, sg2):$/;"	f
compareSignalGroup	src/canmatrix/compare.py	/^def compareSignalGroup(sg1, sg2):$/;"	f
compareValueTable	build/lib/canmatrix/compare.py	/^def compareValueTable(vt1, vt2):$/;"	f
compareValueTable	src/canmatrix/compare.py	/^def compareValueTable(vt1, vt2):$/;"	f
compmethod	build/lib/canmatrix/arxml.py	/^                    compmethod = None$/;"	v
compmethod	build/lib/canmatrix/arxml.py	/^                    compmethod = arGetChild(datdefpropscond, "COMPU-METHOD", arDict, ns)$/;"	v
compmethod	build/lib/canmatrix/arxml.py	/^            compmethod = arGetChild(datdefprops, "COMPU-METHOD", arDict, ns)$/;"	v
compmethod	build/lib/canmatrix/arxml.py	/^            compmethod = arGetChild(isignal, "COMPU-METHOD", arDict, ns)$/;"	v
compmethod	build/lib/canmatrix/arxml.py	/^            compmethod = arGetChild(syssignal, "COMPU-METHOD", arDict, ns)$/;"	v
compmethod	build/lib/canmatrix/arxml.py	/^        compmethod = arGetChild(datdefprops, "COMPU-METHOD", arDict, ns)$/;"	v
compmethod	src/canmatrix/arxml_BACKUP_26060.py	/^                    compmethod = None$/;"	v
compmethod	src/canmatrix/arxml_BACKUP_26060.py	/^                    compmethod = arGetChild(datdefpropscond, "COMPU-METHOD", arDict, ns)$/;"	v
compmethod	src/canmatrix/arxml_BACKUP_26060.py	/^                    compmethod = arGetChild(datdefpropscond, "COMPU-METHOD", xmlRoot, ns)$/;"	v
compmethod	src/canmatrix/arxml_BACKUP_26060.py	/^            compmethod = arGetChild(datdefprops, "COMPU-METHOD", arDict, ns)$/;"	v
compmethod	src/canmatrix/arxml_BACKUP_26060.py	/^            compmethod = arGetChild(datdefprops, "COMPU-METHOD", xmlRoot, ns)$/;"	v
compmethod	src/canmatrix/arxml_BACKUP_26060.py	/^            compmethod = arGetChild(isignal, "COMPU-METHOD", xmlRoot, ns)$/;"	v
compmethod	src/canmatrix/arxml_BACKUP_26060.py	/^            compmethod = arGetChild(syssignal, "COMPU-METHOD", xmlRoot, ns)$/;"	v
compmethod	src/canmatrix/arxml_BACKUP_26060.py	/^        compmethod = arGetChild(datdefprops, "COMPU-METHOD", arDict, ns)$/;"	v
compmethod	src/canmatrix/arxml_LOCAL_26060.py	/^                    compmethod = None$/;"	v
compmethod	src/canmatrix/arxml_LOCAL_26060.py	/^                    compmethod = arGetChild(datdefpropscond, "COMPU-METHOD", arDict, ns)$/;"	v
compmethod	src/canmatrix/arxml_LOCAL_26060.py	/^            compmethod = arGetChild(datdefprops, "COMPU-METHOD", arDict, ns)$/;"	v
compmethod	src/canmatrix/arxml_LOCAL_26060.py	/^            compmethod = arGetChild(isignal, "COMPU-METHOD", arDict, ns)$/;"	v
compmethod	src/canmatrix/arxml_LOCAL_26060.py	/^            compmethod = arGetChild(syssignal, "COMPU-METHOD", arDict, ns)$/;"	v
compmethod	src/canmatrix/arxml_LOCAL_26060.py	/^        compmethod = arGetChild(datdefprops, "COMPU-METHOD", arDict, ns)$/;"	v
computeSignalValueInFrame	build/lib/canmatrix/canmatrix.py	/^def computeSignalValueInFrame(startbit, ln, fmt, value):$/;"	f
configparser	versioneer.py	/^    import ConfigParser as configparser$/;"	i
configparser	versioneer.py	/^    import configparser$/;"	i
constructor	build/lib/canmatrix/yaml.py	/^def constructor(loader, node, cls, mapping={}):$/;"	f
constructor	src/canmatrix/yaml.py	/^def constructor(loader, node, cls, mapping={}):$/;"	f
contains_fd	build/lib/canmatrix/canmatrix.py	/^    def contains_fd(self):$/;"	f
convert	build/lib/canmatrix/__init__.py	/^import canmatrix.convert as convert$/;"	i
convert	build/lib/canmatrix/convert.py	/^def convert(infile, outfileName, **options):$/;"	f
convert	examples/convert.py	/^import canmatrix.convert$/;"	i
convert	src/canmatrix/__init__.py	/^import canmatrix.convert as convert$/;"	i
convert	src/canmatrix/convert.py	/^def convert(infile, outfileName, **options):$/;"	f
convert	test/test.py	/^import canmatrix.convert$/;"	i
converted_path	test/test.py	/^converted_path = 'converted'$/;"	v
copy	build/lib/canmatrix/__init__.py	/^import canmatrix.copy as copy$/;"	i
copy	build/lib/canmatrix/yaml.py	/^import copy$/;"	i
copy	src/canmatrix/__init__.py	/^import canmatrix.copy as copy$/;"	i
copy	src/canmatrix/canmatrix.py	/^import copy$/;"	i
copy	src/canmatrix/yaml.py	/^import copy$/;"	i
copy	test/test.py	/^import copy$/;"	i
copyBU	build/lib/canmatrix/copy.py	/^def copyBU(buId, sourceDb, targetDb):$/;"	f
copyBU	src/canmatrix/copy.py	/^def copyBU(buId, sourceDb, targetDb):$/;"	f
copyBUwithFrames	build/lib/canmatrix/copy.py	/^def copyBUwithFrames(buId, sourceDb, targetDb):$/;"	f
copyBUwithFrames	src/canmatrix/copy.py	/^def copyBUwithFrames(buId, sourceDb, targetDb):$/;"	f
copyFrame	build/lib/canmatrix/copy.py	/^def copyFrame(frameId, sourceDb, targetDb):$/;"	f
copyFrame	src/canmatrix/copy.py	/^def copyFrame(frameId, sourceDb, targetDb):$/;"	f
count	build/lib/canmatrix/dbf.py	/^    count = 1$/;"	v
count	src/canmatrix/dbf.py	/^    count = 1$/;"	v
createDecodeMacro	examples/createCMacros.py	/^def createDecodeMacro($/;"	f
createDecodeMacrosForFrame	examples/createCMacros.py	/^def createDecodeMacrosForFrame($/;"	f
createDummySignals	build/lib/canmatrix/canmatrix.py	/^    def createDummySignals(self):$/;"	f
createNode	examples/BusmasterRestbus.py	/^def createNode(structNames, timedPrototypes, timedCallbacks):$/;"	f
createShortNameDesc	build/lib/canmatrix/fibex.py	/^def createShortNameDesc(parent, shortname, desc):$/;"	f
createShortNameDesc	src/canmatrix/fibex.py	/^def createShortNameDesc(parent, shortname, desc):$/;"	f
createSignal	build/lib/canmatrix/kcd.py	/^def createSignal(signal, nodeList, typeEnums):$/;"	f
createSignal	build/lib/canmatrix/sym.py	/^def createSignal(signal):$/;"	f
createSignal	src/canmatrix/kcd.py	/^def createSignal(signal, nodeList, typeEnums):$/;"	f
createSignal	src/canmatrix/sym.py	/^def createSignal(signal):$/;"	f
createStoreMacro	examples/createCMacros.py	/^def createStoreMacro(signal, prefix="", frame="frame"):$/;"	f
createStoreMacrosForFrame	examples/createCMacros.py	/^def createStoreMacrosForFrame(Frame, prefix="", framename="frame"):$/;"	f
createSubElement	build/lib/canmatrix/arxml.py	/^def createSubElement(parent, elementName, strName=None):$/;"	f
createSubElement	src/canmatrix/arxml.py	/^def createSubElement(parent, elementName, strName=None):$/;"	f
createSubElement	src/canmatrix/arxml_BACKUP_26060.py	/^def createSubElement(parent, elementName, strName=None):$/;"	f
createSubElement	src/canmatrix/arxml_BASE_26060.py	/^def createSubElement(parent, elementName, strName=None):$/;"	f
createSubElement	src/canmatrix/arxml_LOCAL_26060.py	/^def createSubElement(parent, elementName, strName=None):$/;"	f
createSubElement	src/canmatrix/arxml_REMOTE_26060.py	/^def createSubElement(parent, elementName, strName=None):$/;"	f
createSubElementFx	build/lib/canmatrix/fibex.py	/^def createSubElementFx(parent, elementName, elementText=None):$/;"	f
createSubElementFx	src/canmatrix/fibex.py	/^def createSubElementFx(parent, elementName, elementText=None):$/;"	f
createSubElementHo	build/lib/canmatrix/fibex.py	/^def createSubElementHo(parent, elementName, elementText=None):$/;"	f
createSubElementHo	src/canmatrix/fibex.py	/^def createSubElementHo(parent, elementName, elementText=None):$/;"	f
csv	build/lib/canmatrix/cmcsv.py	/^import csv$/;"	i
csv	src/canmatrix/cmcsv.py	/^import csv$/;"	i
csvRow	build/lib/canmatrix/cmcsv.py	/^class csvRow:$/;"	c
csvRow	src/canmatrix/cmcsv.py	/^class csvRow:$/;"	c
cycleTime	src/canmatrix/kcd.py	/^                cycleTime = frame.attribute("GenMsgCycleTime", db=db)$/;"	v
cycleTime	src/canmatrix/kcd.py	/^                cycleTime = int(frame.attributes["GenMsgCycleTime"])$/;"	v
cycleTime	src/canmatrix/xls.py	/^                cycleTime = 0.0$/;"	v
cyclicTiming	build/lib/canmatrix/arxml.py	/^    cyclicTiming = arGetChild(timingSpec, "CYCLIC-TIMING", arDict, ns)$/;"	v
cyclicTiming	src/canmatrix/arxml_BACKUP_26060.py	/^    cyclicTiming = arGetChild(timingSpec, "CYCLIC-TIMING", xmlRoot, ns)$/;"	v
cyclicTiming	src/canmatrix/arxml_LOCAL_26060.py	/^    cyclicTiming = arGetChild(timingSpec, "CYCLIC-TIMING", arDict, ns)$/;"	v
datdefpropscond	build/lib/canmatrix/arxml.py	/^            datdefpropscond = arGetChild(datdefpropsvar, "SW-DATA-DEF-PROPS-CONDITIONAL", arDict ,ns)$/;"	v
datdefpropscond	src/canmatrix/arxml_BACKUP_26060.py	/^            datdefpropscond = arGetChild(datdefpropsvar, "SW-DATA-DEF-PROPS-CONDITIONAL", arDict ,ns)$/;"	v
datdefpropscond	src/canmatrix/arxml_BACKUP_26060.py	/^            datdefpropscond = arGetChild(datdefpropsvar, "SW-DATA-DEF-PROPS-CONDITIONAL", xmlRoot ,ns)$/;"	v
datdefpropscond	src/canmatrix/arxml_LOCAL_26060.py	/^            datdefpropscond = arGetChild(datdefpropsvar, "SW-DATA-DEF-PROPS-CONDITIONAL", arDict ,ns)$/;"	v
datdefpropsvar	build/lib/canmatrix/arxml.py	/^            datdefpropsvar = arGetChild(networkrep, "SW-DATA-DEF-PROPS-VARIANTS", arDict, ns)$/;"	v
datdefpropsvar	src/canmatrix/arxml_BACKUP_26060.py	/^            datdefpropsvar = arGetChild(networkrep, "SW-DATA-DEF-PROPS-VARIANTS", arDict, ns)$/;"	v
datdefpropsvar	src/canmatrix/arxml_BACKUP_26060.py	/^            datdefpropsvar = arGetChild(networkrep, "SW-DATA-DEF-PROPS-VARIANTS", xmlRoot, ns)$/;"	v
datdefpropsvar	src/canmatrix/arxml_LOCAL_26060.py	/^            datdefpropsvar = arGetChild(networkrep, "SW-DATA-DEF-PROPS-VARIANTS", arDict, ns)$/;"	v
db	src/canmatrix/dbc.py	/^    db = CanMatrix()$/;"	v
db	src/canmatrix/sym.py	/^    db = CanMatrix()$/;"	v
db	test/createTestFdMatrix.py	/^db = canmatrix.CanMatrix()$/;"	v
db	test/createTestMatrix.py	/^db = CanMatrix()$/;"	v
db1	examples/exampleMerge.py	/^db1 = canmatrix.formats.loadp("first.dbc", flatImport=True)$/;"	v
db2	examples/exampleMerge.py	/^db2 = canmatrix.formats.loadp("second.dbc", flatImport=True)$/;"	v
db3	examples/exampleMerge.py	/^db3 = CanMatrix()$/;"	v
dbcExportCommentEncoding	test/createTestFdMatrix.py	/^             dbcExportCommentEncoding='iso-8859-1')$/;"	v
dbcExportCommentEncoding	test/createTestMatrix.py	/^             dbcExportCommentEncoding='iso-8859-1')$/;"	v
decimal	src/canmatrix/arxml.py	/^import decimal$/;"	i
decimal	src/canmatrix/arxml_BACKUP_26060.py	/^import decimal$/;"	i
decimal	src/canmatrix/arxml_REMOTE_26060.py	/^import decimal$/;"	i
decimal	src/canmatrix/canmatrix.py	/^import decimal$/;"	i
decimal	src/canmatrix/dbc.py	/^import decimal$/;"	i
decimal	src/canmatrix/dbf.py	/^import decimal$/;"	i
decimal	src/canmatrix/kcd.py	/^import decimal$/;"	i
decimal	src/canmatrix/sym.py	/^import decimal$/;"	i
decimal	src/canmatrix/tests/test_canmatrix.py	/^import decimal$/;"	i
decimal	src/canmatrix/xls.py	/^import decimal$/;"	i
decode	build/lib/canmatrix/canmatrix.py	/^    def decode(self, data, decodeToStr=False):$/;"	f
decode	build/lib/canmatrix/canmatrix.py	/^    def decode(self, frame_id, data, decodeToStr=False):$/;"	f
decodeCompuMethod	build/lib/canmatrix/arxml.py	/^def decodeCompuMethod(compuMethod, arDict, ns):$/;"	f
decodeCompuMethod	src/canmatrix/arxml.py	/^def decodeCompuMethod(compuMethod, arDict, ns, float_factory):$/;"	f
decodeCompuMethod	src/canmatrix/arxml_BACKUP_26060.py	/^def decodeCompuMethod(compuMethod, arDict, ns, float_factory):$/;"	f
decodeCompuMethod	src/canmatrix/arxml_BASE_26060.py	/^def decodeCompuMethod(compuMethod, arDict, ns):$/;"	f
decodeCompuMethod	src/canmatrix/arxml_LOCAL_26060.py	/^def decodeCompuMethod(compuMethod, arDict, ns):$/;"	f
decodeCompuMethod	src/canmatrix/arxml_REMOTE_26060.py	/^def decodeCompuMethod(compuMethod, arDict, ns, float_factory):$/;"	f
decodeDefine	build/lib/canmatrix/dbf.py	/^def decodeDefine(line):$/;"	f
decodeDefine	src/canmatrix/dbf.py	/^def decodeDefine(line):$/;"	f
decoded	build/lib/canmatrix/dbc.py	/^        decoded = l.decode(dbcImportEncoding)$/;"	v	class:load.FollowUps
decoded	src/canmatrix/dbc.py	/^            decoded = l.decode(dbcImportEncoding).strip()$/;"	v	class:.FollowUps
decoded	src/canmatrix/dbc.py	/^        decoded = l.decode(dbcImportEncoding)$/;"	v	class:.FollowUps
decorate	src/canmatrix/_version.py	/^    def decorate(f):$/;"	f	function:register_vcs_handler
decorate	versioneer.py	/^    def decorate(f):$/;"	f	function:register_vcs_handler
deepcopy	src/canmatrix/copy.py	/^from copy import deepcopy$/;"	i
deepcopy	src/canmatrix/dbc.py	/^from copy import deepcopy$/;"	i
deepcopy	src/canmatrix/dbf.py	/^from copy import deepcopy$/;"	i
default	src/canmatrix/sym.py	/^            default = float(genSigStartVal) * float(signal.factor)$/;"	v
default	src/canmatrix/sym.py	/^        default = float(signal.attributes[$/;"	v
defaultFloatFactory	src/canmatrix/canmatrix.py	/^defaultFloatFactory = decimal.Decimal$/;"	v
defaultVal	build/lib/canmatrix/dbf.py	/^            defaultVal = "0"$/;"	v
defaultVal	build/lib/canmatrix/dbf.py	/^        defaultVal = define.defaultValue$/;"	v
defaultVal	src/canmatrix/dbf.py	/^            defaultVal = "0"$/;"	v
defaultVal	src/canmatrix/dbf.py	/^        defaultVal = define.defaultValue$/;"	v
default_float_factory	src/canmatrix/arxml.py	/^default_float_factory = decimal.Decimal$/;"	v
default_float_factory	src/canmatrix/arxml_BACKUP_26060.py	/^default_float_factory = decimal.Decimal$/;"	v
default_float_factory	src/canmatrix/arxml_REMOTE_26060.py	/^default_float_factory = decimal.Decimal$/;"	v
default_float_factory	src/canmatrix/dbc.py	/^default_float_factory = decimal.Decimal$/;"	v
default_float_factory	src/canmatrix/dbf.py	/^default_float_factory = decimal.Decimal$/;"	v
default_float_factory	src/canmatrix/kcd.py	/^default_float_factory = decimal.Decimal$/;"	v
default_float_factory	src/canmatrix/sym.py	/^default_float_factory = decimal.Decimal$/;"	v
default_float_factory	src/canmatrix/xls.py	/^default_float_factory = decimal.Decimal$/;"	v
default_matrix	src/canmatrix/tests/test_cmjson.py	/^def default_matrix():$/;"	f
defaultdict	build/lib/canmatrix/cmcsv.py	/^from collections import defaultdict$/;"	i
defaultdict	src/canmatrix/cmcsv.py	/^from collections import defaultdict$/;"	i
defaults	src/canmatrix/dbc.py	/^    defaults = {}$/;"	v
delAttribute	build/lib/canmatrix/canmatrix.py	/^    def delAttribute(self, attribute):$/;"	f
delAttribute	src/canmatrix/canmatrix.py	/^    def delAttribute(self, attribute):$/;"	f
delEcu	build/lib/canmatrix/canmatrix.py	/^    def delEcu(self, ecu):$/;"	f
delFrame	build/lib/canmatrix/canmatrix.py	/^    def delFrame(self, frame):$/;"	f
delFrameAttributes	build/lib/canmatrix/canmatrix.py	/^    def delFrameAttributes(self, unwantedAttributes):$/;"	f
delReceiver	src/canmatrix/canmatrix.py	/^    def delReceiver(self, receiver):$/;"	f
delSignal	build/lib/canmatrix/canmatrix.py	/^    def delSignal(self, signal):$/;"	f
delSignal	build/lib/canmatrix/canmatrix.py	/^    def delSignal(self, signal):$/;"	m	class:SignalGroup
delSignal	src/canmatrix/canmatrix.py	/^    def delSignal(self, signal):$/;"	f
delSignalAttributes	build/lib/canmatrix/canmatrix.py	/^    def delSignalAttributes(self, unwantedAttributes):$/;"	f
deleteObsoleteDefines	build/lib/canmatrix/canmatrix.py	/^    def deleteObsoleteDefines(self):$/;"	f
deleteZeroSignals	build/lib/canmatrix/canmatrix.py	/^    def deleteZeroSignals(self):$/;"	f
desc	build/lib/canmatrix/arxml.py	/^            desc = arGetChild(node, "DESC", arDict, ns)$/;"	v
desc	src/canmatrix/arxml_BACKUP_26060.py	/^            desc = arGetChild(node, "DESC", searchPoint, ns)$/;"	v
desc	src/canmatrix/arxml_LOCAL_26060.py	/^            desc = arGetChild(node, "DESC", arDict, ns)$/;"	v
description	setup.py	/^    description = doclines[0],$/;"	v
description	versioneer.py	/^        description = "report generated version string"$/;"	v	class:get_cmdclass.cmd_version
destination	build/lib/canmatrix/canmatrix.py	/^    destination = None  # Destination Address$/;"	v	class:CanId
directory	test/test.py	/^            directory = os.path.join(converted_path, 'from_' + i)$/;"	v
displayDecimalPlaces	build/lib/canmatrix/sym.py	/^                            displayDecimalPlaces = s[1] $/;"	v	class:load.Mode
displayDecimalPlaces	build/lib/canmatrix/sym.py	/^                displayDecimalPlaces = None$/;"	v	class:load.Mode
displayDecimalPlaces	src/canmatrix/sym.py	/^                                displayDecimalPlaces = s[1]$/;"	v	class:.Mode
displayDecimalPlaces	src/canmatrix/sym.py	/^                            displayDecimalPlaces = s[1] $/;"	v	class:.Mode
displayDecimalPlaces	src/canmatrix/sym.py	/^                    displayDecimalPlaces = None$/;"	v	class:.Mode
displayDecimalPlaces	src/canmatrix/sym.py	/^                displayDecimalPlaces = None$/;"	v	class:.Mode
displayname	build/lib/canmatrix/arxml.py	/^              displayname = arGetChild(unit, "DISPLAY-NAME", arDict, ns)$/;"	v
displayname	src/canmatrix/arxml_BACKUP_26060.py	/^              displayname = arGetChild(unit, "DISPLAY-NAME", xmlRoot, ns)$/;"	v
displayname	src/canmatrix/arxml_LOCAL_26060.py	/^              displayname = arGetChild(unit, "DISPLAY-NAME", arDict, ns)$/;"	v
division	build/lib/canmatrix/arxml.py	/^from __future__ import division$/;"	i
division	build/lib/canmatrix/canmatrix.py	/^from __future__ import division$/;"	i
division	build/lib/canmatrix/dbc.py	/^from __future__ import division$/;"	i
division	build/lib/canmatrix/dbf.py	/^from __future__ import division$/;"	i
division	build/lib/canmatrix/kcd.py	/^from __future__ import division$/;"	i
division	build/lib/canmatrix/sym.py	/^from __future__ import division$/;"	i
division	build/lib/canmatrix/xls.py	/^from __future__ import division$/;"	i
division	build/lib/canmatrix/xlsx.py	/^from __future__ import division$/;"	i
division	examples/BusmasterRestbus.py	/^from __future__ import division$/;"	i
division	src/canmatrix/arxml.py	/^from __future__ import division$/;"	i
division	src/canmatrix/arxml_BACKUP_26060.py	/^from __future__ import division$/;"	i
division	src/canmatrix/arxml_BASE_26060.py	/^from __future__ import division$/;"	i
division	src/canmatrix/arxml_LOCAL_26060.py	/^from __future__ import division$/;"	i
division	src/canmatrix/arxml_REMOTE_26060.py	/^from __future__ import division$/;"	i
division	src/canmatrix/canmatrix.py	/^from __future__ import division$/;"	i
division	src/canmatrix/dbc.py	/^from __future__ import division$/;"	i
division	src/canmatrix/dbf.py	/^from __future__ import division$/;"	i
division	src/canmatrix/kcd.py	/^from __future__ import division$/;"	i
division	src/canmatrix/sym.py	/^from __future__ import division$/;"	i
division	src/canmatrix/xls.py	/^from __future__ import division$/;"	i
division	src/canmatrix/xlsx.py	/^from __future__ import division$/;"	i
dlc	build/lib/canmatrix/arxml.py	/^                         dlc=int(dlc.text))$/;"	v
dlc	build/lib/canmatrix/arxml.py	/^        dlc = arGetChild(pdu, "LENGTH", arDict, ns)$/;"	v
dlc	build/lib/canmatrix/dbc.py	/^                                  dlc=temp.group(3),$/;"	v	class:load.FollowUps
dlc	src/canmatrix/arxml_BACKUP_26060.py	/^                         dlc=int(dlc.text))$/;"	v
dlc	src/canmatrix/arxml_BACKUP_26060.py	/^        dlc = arGetChild(pdu, "LENGTH", xmlRoot, ns)$/;"	v
dlc	src/canmatrix/arxml_LOCAL_26060.py	/^                         dlc=int(dlc.text))$/;"	v
dlc	src/canmatrix/arxml_LOCAL_26060.py	/^        dlc = arGetChild(pdu, "LENGTH", arDict, ns)$/;"	v
dlc	src/canmatrix/cmjson.py	/^                             dlc=8)$/;"	v
dlc	src/canmatrix/dbc.py	/^                                  dlc=temp.group(3),$/;"	v	class:.FollowUps
dlc	src/canmatrix/dbf.py	/^                          dlc=size,$/;"	v
do_setup	versioneer.py	/^def do_setup():$/;"	f
do_vcs_install	versioneer.py	/^def do_vcs_install(manifest_in, versionfile_source, ipy):$/;"	f
doclines	setup.py	/^doclines = __doc__.split("\\n")$/;"	v
dump	build/lib/canmatrix/arxml.py	/^def dump(dbs, f, **options):$/;"	f
dump	build/lib/canmatrix/cmcsv.py	/^def dump(db, thefile, delimiter=',', **options):$/;"	f
dump	build/lib/canmatrix/cmjson.py	/^def dump(db, f, **options):$/;"	f
dump	build/lib/canmatrix/dbc.py	/^def dump(db, f, **options):$/;"	f
dump	build/lib/canmatrix/dbf.py	/^def dump(db, f, **options):$/;"	f
dump	build/lib/canmatrix/fibex.py	/^def dump(db, f, **options):$/;"	f
dump	build/lib/canmatrix/formats.py	/^def dump(canMatrixOrCluster, fileObject, exportType, **options):$/;"	f
dump	build/lib/canmatrix/kcd.py	/^def dump(dbs, f, **options):$/;"	f
dump	build/lib/canmatrix/sym.py	/^def dump(db, f, **options):$/;"	f
dump	build/lib/canmatrix/xls.py	/^def dump(db, file, **options):$/;"	f
dump	build/lib/canmatrix/xlsx.py	/^def dump(db, filename, **options):$/;"	f
dump	build/lib/canmatrix/yaml.py	/^def dump(db, f, **options):$/;"	f
dump	src/canmatrix/arxml.py	/^def dump(dbs, f, **options):$/;"	f
dump	src/canmatrix/arxml_BACKUP_26060.py	/^def dump(dbs, f, **options):$/;"	f
dump	src/canmatrix/arxml_BASE_26060.py	/^def dump(dbs, f, **options):$/;"	f
dump	src/canmatrix/arxml_LOCAL_26060.py	/^def dump(dbs, f, **options):$/;"	f
dump	src/canmatrix/arxml_REMOTE_26060.py	/^def dump(dbs, f, **options):$/;"	f
dump	src/canmatrix/cmcsv.py	/^def dump(db, thefile, delimiter=',', **options):$/;"	f
dump	src/canmatrix/cmjson.py	/^def dump(db, f, **options):$/;"	f
dump	src/canmatrix/dbc.py	/^def dump(db, f, **options):$/;"	f
dump	src/canmatrix/dbc.py	/^def dump(mydb, f, **options):$/;"	f
dump	src/canmatrix/dbf.py	/^def dump(mydb, f, **options):$/;"	f
dump	src/canmatrix/fibex.py	/^def dump(db, f, **options):$/;"	f
dump	src/canmatrix/formats.py	/^def dump(canMatrixOrCluster, fileObject, exportType, **options):$/;"	f
dump	src/canmatrix/kcd.py	/^def dump(dbs, f, **options):$/;"	f
dump	src/canmatrix/sym.py	/^def dump(db, f, **options):$/;"	f
dump	src/canmatrix/xls.py	/^def dump(db, file, **options):$/;"	f
dump	src/canmatrix/xlsx.py	/^def dump(db, filename, **options):$/;"	f
dump	src/canmatrix/yaml.py	/^def dump(db, f, **options):$/;"	f
dumpResult	build/lib/canmatrix/compare.py	/^def dumpResult(res, depth=0):$/;"	f
dumpResult	src/canmatrix/compare.py	/^def dumpResult(res, depth=0):$/;"	f
dumpp	build/lib/canmatrix/formats.py	/^def dumpp(canCluster, path, exportType=None, **options):$/;"	f
dumpp	src/canmatrix/formats.py	/^def dumpp(canCluster, path, exportType=None, **options):$/;"	f
duplicate_signal_counter	src/canmatrix/dbc.py	/^        duplicate_signal_counter = collections.Counter()$/;"	v
duplicate_signal_totals	src/canmatrix/dbc.py	/^        duplicate_signal_totals = collections.Counter($/;"	v
duplicate_signal_totals	src/canmatrix/dbc.py	/^        duplicate_signal_totals = collections.Counter(normalized_names.values())$/;"	v
dynamicPart	build/lib/canmatrix/arxml.py	/^        dynamicPart = arGetChild(pdu, "DYNAMIC-PART", arDict, ns)$/;"	v
dynamicPart	src/canmatrix/arxml_BACKUP_26060.py	/^        dynamicPart = arGetChild(pdu, "DYNAMIC-PART", xmlRoot, ns)$/;"	v
dynamicPart	src/canmatrix/arxml_LOCAL_26060.py	/^        dynamicPart = arGetChild(pdu, "DYNAMIC-PART", arDict, ns)$/;"	v
dynamicPartAlternativeList	build/lib/canmatrix/arxml.py	/^        dynamicPartAlternativeList = arGetChildren(dynamicPartAlternatives, "DYNAMIC-PART-ALTERNATIVE", arDict, ns)$/;"	v
dynamicPartAlternativeList	src/canmatrix/arxml_BACKUP_26060.py	/^        dynamicPartAlternativeList = arGetChildren(dynamicPartAlternatives, "DYNAMIC-PART-ALTERNATIVE", xmlRoot, ns)$/;"	v
dynamicPartAlternativeList	src/canmatrix/arxml_LOCAL_26060.py	/^        dynamicPartAlternativeList = arGetChildren(dynamicPartAlternatives, "DYNAMIC-PART-ALTERNATIVE", arDict, ns)$/;"	v
dynamicPartAlternatives	build/lib/canmatrix/arxml.py	/^        dynamicPartAlternatives = arGetChild(dynamicPart, "DYNAMIC-PART-ALTERNATIVES", arDict, ns)$/;"	v
dynamicPartAlternatives	src/canmatrix/arxml_BACKUP_26060.py	/^        dynamicPartAlternatives = arGetChild(dynamicPart, "DYNAMIC-PART-ALTERNATIVES", xmlRoot, ns)$/;"	v
dynamicPartAlternatives	src/canmatrix/arxml_LOCAL_26060.py	/^        dynamicPartAlternatives = arGetChild(dynamicPart, "DYNAMIC-PART-ALTERNATIVES", arDict, ns)$/;"	v
ecuName	build/lib/canmatrix/arxml.py	/^                        ecuName = arGetName($/;"	v
ecuName	src/canmatrix/arxml_BACKUP_26060.py	/^                        ecuName = arGetName($/;"	v
ecuName	src/canmatrix/arxml_LOCAL_26060.py	/^                        ecuName = arGetName($/;"	v
ecus	build/lib/canmatrix/cancluster.py	/^    def ecus(self):$/;"	m	class:canCluster
ecus	src/canmatrix/cancluster.py	/^    def ecus(self):$/;"	m	class:canCluster
empty	src/canmatrix/kcd.py	/^                            empty = 1$/;"	v
empty	src/canmatrix/kcd.py	/^                    empty = 0$/;"	v
encode	build/lib/canmatrix/canmatrix.py	/^    def encode(self, data=None):$/;"	f
encode	build/lib/canmatrix/canmatrix.py	/^    def encode(self, frame_id, data):$/;"	f
encoding	build/lib/canmatrix/arxml.py	/^            encoding = arGetChild(baseType, "BASE-TYPE-ENCODING", arDict, ns)$/;"	v
encoding	src/canmatrix/arxml_BACKUP_26060.py	/^            encoding = arGetChild(baseType, "BASE-TYPE-ENCODING", xmlRoot, ns)$/;"	v
encoding	src/canmatrix/arxml_LOCAL_26060.py	/^            encoding = arGetChild(baseType, "BASE-TYPE-ENCODING", arDict, ns)$/;"	v
enumDict	build/lib/canmatrix/sym.py	/^enumDict = {}$/;"	v
enumDict	src/canmatrix/sym.py	/^enumDict = {}$/;"	v
enumeration	src/canmatrix/canmatrix.py	/^    enumeration = attr.ib(type=str, default = None)$/;"	v
enums	build/lib/canmatrix/sym.py	/^enums = "{ENUMS}\\n"$/;"	v
enums	src/canmatrix/sym.py	/^enums = "{ENUMS}\\n"$/;"	v
envVar	src/canmatrix/dbc.py	/^        envVar = db.envVars[envVarName]$/;"	v
errno	src/canmatrix/_version.py	/^import errno$/;"	i
errno	versioneer.py	/^import errno$/;"	i
error	build/lib/canmatrix/canmatrix.py	/^            logger.error("message decoding not supported due bitstruct import error \/\/ try pip install bitstruct")$/;"	i
errors	versioneer.py	/^        errors = do_setup()$/;"	v
etree	build/lib/canmatrix/arxml.py	/^from lxml import etree$/;"	i
etree	build/lib/canmatrix/fibex.py	/^from lxml import etree$/;"	i
etree	build/lib/canmatrix/kcd.py	/^from lxml import etree$/;"	i
etree	src/canmatrix/arxml.py	/^from lxml import etree$/;"	i
etree	src/canmatrix/arxml_BACKUP_26060.py	/^from lxml import etree$/;"	i
etree	src/canmatrix/arxml_BASE_26060.py	/^from lxml import etree$/;"	i
etree	src/canmatrix/arxml_LOCAL_26060.py	/^from lxml import etree$/;"	i
etree	src/canmatrix/arxml_REMOTE_26060.py	/^from lxml import etree$/;"	i
etree	src/canmatrix/fibex.py	/^from lxml import etree$/;"	i
etree	src/canmatrix/kcd.py	/^from lxml import etree$/;"	i
evId	src/canmatrix/dbc.py	/^                evId  = temp.group(7)$/;"	v	class:.FollowUps
eventTiming	build/lib/canmatrix/arxml.py	/^    eventTiming = arGetChild(timingSpec, "EVENT-CONTROLLED-TIMING", arDict, ns)$/;"	v
eventTiming	src/canmatrix/arxml_BACKUP_26060.py	/^    eventTiming = arGetChild(timingSpec, "EVENT-CONTROLLED-TIMING", xmlRoot, ns)$/;"	v
eventTiming	src/canmatrix/arxml_LOCAL_26060.py	/^    eventTiming = arGetChild(timingSpec, "EVENT-CONTROLLED-TIMING", arDict, ns)$/;"	v
exit_code	test/test.py	/^exit_code = subprocess.call(['diff', '-r', 'reference', 'converted'])$/;"	v
export_types	test/test.py	/^export_types = []$/;"	v
extended	build/lib/canmatrix/dbf.py	/^            extended = 'X'$/;"	v
extended	build/lib/canmatrix/dbf.py	/^        extended = 'S'$/;"	v
extended	src/canmatrix/dbf.py	/^            extended = 'X'$/;"	v
extended	src/canmatrix/dbf.py	/^        extended = 'S'$/;"	v
extension	build/lib/canmatrix/cmcsv.py	/^extension = 'csv'$/;"	v
extension	build/lib/canmatrix/cmjson.py	/^extension = 'json'$/;"	v
extension	build/lib/canmatrix/fibex.py	/^extension = "xml"$/;"	v
extension	src/canmatrix/cmcsv.py	/^extension = 'csv'$/;"	v
extension	src/canmatrix/cmjson.py	/^extension = 'json'$/;"	v
extension	src/canmatrix/fibex.py	/^extension = "xml"$/;"	v
extensionMapping	build/lib/canmatrix/formats.py	/^extensionMapping = {}$/;"	v
extensionMapping	src/canmatrix/formats.py	/^extensionMapping = {}$/;"	v
extras	src/canmatrix/dbc.py	/^                    extras = {}$/;"	v	class:.FollowUps
extras	src/canmatrix/sym.py	/^                            extras = {}$/;"	v	class:.Mode
extras	src/canmatrix/sym.py	/^                        extras = {}$/;"	v	class:.Mode
extras_require	setup.py	/^    extras_require = {$/;"	v
factor	build/lib/canmatrix/arxml.py	/^                            factor=factor,$/;"	v
factor	build/lib/canmatrix/dbc.py	/^                                 factor=temp.group(6),$/;"	v	class:load.FollowUps
factor	build/lib/canmatrix/dbc.py	/^                                 factor=temp.group(7),$/;"	v	class:load.FollowUps
factor	build/lib/canmatrix/sym.py	/^                                        factor=factor,$/;"	v	class:load.Mode
factor	build/lib/canmatrix/sym.py	/^                                    factor=factor,$/;"	v	class:load.Mode
factor	build/lib/canmatrix/sym.py	/^                            factor = s[1]$/;"	v	class:load.Mode
factor	build/lib/canmatrix/sym.py	/^                factor = 1$/;"	v	class:load.Mode
factor	src/canmatrix/arxml_BACKUP_26060.py	/^                            factor=factor,$/;"	v
factor	src/canmatrix/arxml_LOCAL_26060.py	/^                            factor=factor,$/;"	v
factor	src/canmatrix/canmatrix.py	/^    factor = attr.ib(converter = float_factory, default = float_factory(1.0))$/;"	v
factor	src/canmatrix/cmjson.py	/^                                   factor=signal["factor"],$/;"	v
factor	src/canmatrix/dbc.py	/^                                 factor=temp.group(6),$/;"	v	class:.FollowUps
factor	src/canmatrix/dbc.py	/^                                 factor=temp.group(7),$/;"	v	class:.FollowUps
factor	src/canmatrix/dbc.py	/^                        factor=temp.group(6),$/;"	v	class:.FollowUps
factor	src/canmatrix/dbc.py	/^                        factor=temp.group(7),$/;"	v	class:.FollowUps
factor	src/canmatrix/dbf.py	/^                                                factor=factor,$/;"	v
factor	src/canmatrix/dbf.py	/^                factor = float_factory(factor)$/;"	v
factor	src/canmatrix/sym.py	/^                                            factor=factor,$/;"	v	class:.Mode
factor	src/canmatrix/sym.py	/^                                        factor=factor,$/;"	v	class:.Mode
factor	src/canmatrix/sym.py	/^                                    factor=factor,$/;"	v	class:.Mode
factor	src/canmatrix/sym.py	/^                                factor = s[1]$/;"	v	class:.Mode
factor	src/canmatrix/sym.py	/^                            factor = s[1]$/;"	v	class:.Mode
factor	src/canmatrix/sym.py	/^                    factor = 1$/;"	v	class:.Mode
factor	src/canmatrix/sym.py	/^                factor = 1$/;"	v	class:.Mode
factor	src/canmatrix/xls.py	/^                factor = factor.strip()$/;"	v
factor	src/canmatrix/xls.py	/^            factor = factor.strip()$/;"	v
factor	src/canmatrix/xls.py	/^        factor = 0$/;"	v
factor	src/canmatrix/xls.py	/^        factor = sh.cell(rownum, index['function']).value$/;"	v
factor	test/createTestMatrix.py	/^                   factor=1.0,$/;"	v
factor	test/createTestMatrix.py	/^                  factor=5.0,$/;"	v
files	examples/exampleJoin.py	/^files = ["..\/test\/db_B.dbc", "..\/test\/db_A.dbc"]$/;"	v
finalize_options	versioneer.py	/^        def finalize_options(self):$/;"	m	class:get_cmdclass.cmd_version
findNotUsedBits	build/lib/canmatrix/canmatrix.py	/^    def findNotUsedBits(self):$/;"	f
find_packages	setup.py	/^from setuptools import setup, find_packages$/;"	i
float_factory	src/canmatrix/canmatrix.py	/^    float_factory = defaultFloatFactory$/;"	v
float_factory	src/canmatrix/sym.py	/^    float_factory = options.get('float_factory', default_float_factory)$/;"	v
fmt	build/lib/canmatrix/arxml.py	/^            fmt = "%0" + "%d" % bo.size + "X"$/;"	v
fmt	src/canmatrix/arxml_BACKUP_26060.py	/^            fmt = "%0" + "%d" % bo.size + "X"$/;"	v
fmt	src/canmatrix/arxml_LOCAL_26060.py	/^            fmt = "%0" + "%d" % bo.size + "X"$/;"	v
fnmatch	build/lib/canmatrix/canmatrix.py	/^import fnmatch$/;"	i
fnmatch	src/canmatrix/canmatrix.py	/^import fnmatch$/;"	i
followUp	build/lib/canmatrix/dbc.py	/^                        followUp = FollowUps.boardUnitComment$/;"	v	class:load.FollowUps
followUp	build/lib/canmatrix/dbc.py	/^                    followUp = FollowUps.frameComment$/;"	v	class:load.FollowUps
followUp	build/lib/canmatrix/dbc.py	/^                    followUp = FollowUps.signalComment$/;"	v	class:load.FollowUps
followUp	build/lib/canmatrix/dbc.py	/^                followUp = FollowUps.nothing$/;"	v	class:load.FollowUps
followUp	src/canmatrix/dbc.py	/^                            followUp = FollowUps.boardUnitComment$/;"	v	class:.FollowUps
followUp	src/canmatrix/dbc.py	/^                        followUp = FollowUps.boardUnitComment$/;"	v	class:.FollowUps
followUp	src/canmatrix/dbc.py	/^                        followUp = FollowUps.frameComment$/;"	v	class:.FollowUps
followUp	src/canmatrix/dbc.py	/^                        followUp = FollowUps.signalComment$/;"	v	class:.FollowUps
followUp	src/canmatrix/dbc.py	/^                    followUp = FollowUps.frameComment$/;"	v	class:.FollowUps
followUp	src/canmatrix/dbc.py	/^                    followUp = FollowUps.nothing$/;"	v	class:.FollowUps
followUp	src/canmatrix/dbc.py	/^                    followUp = FollowUps.signalComment$/;"	v	class:.FollowUps
followUp	src/canmatrix/dbc.py	/^                followUp = FollowUps.nothing$/;"	v	class:.FollowUps
followUp	src/canmatrix/dbc.py	/^    followUp = FollowUps.nothing$/;"	v
font	build/lib/canmatrix/xls.py	/^font = 'font: name Verdana, height 160'$/;"	v
font	build/lib/canmatrix/xlsx.py	/^font = 'font: name Verdana, height 160'$/;"	v
font	src/canmatrix/xls.py	/^font = 'font: name Verdana, height 160'$/;"	v
font	src/canmatrix/xlsx.py	/^font = 'font: name Verdana, height 160'$/;"	v
format_float	build/lib/canmatrix/dbc.py	/^def format_float(f):$/;"	f
format_float	build/lib/canmatrix/sym.py	/^def format_float(f):$/;"	f
format_float	src/canmatrix/dbc.py	/^def format_float(f):$/;"	f
format_float	src/canmatrix/sym.py	/^def format_float(f):$/;"	f
formats	build/lib/canmatrix/__init__.py	/^import canmatrix.formats as formats$/;"	i
formats	build/lib/canmatrix/compare.py	/^    import canmatrix.formats$/;"	i
formats	build/lib/canmatrix/convert.py	/^import canmatrix.formats$/;"	i
formats	build/lib/canmatrix/join.py	/^import canmatrix.formats$/;"	i
formats	examples/BusmasterRestbus.py	/^import canmatrix.formats$/;"	i
formats	examples/createCMacros.py	/^import canmatrix.formats$/;"	i
formats	examples/createJ1939Dbc.py	/^import canmatrix.formats$/;"	i
formats	examples/createccl.py	/^import canmatrix.formats$/;"	i
formats	examples/exampleJoin.py	/^import canmatrix.formats$/;"	i
formats	examples/exampleMerge.py	/^import canmatrix.formats$/;"	i
formats	src/canmatrix/__init__.py	/^import canmatrix.formats as formats$/;"	i
formats	src/canmatrix/compare.py	/^    import canmatrix.formats$/;"	i
formats	src/canmatrix/convert.py	/^import canmatrix.formats$/;"	i
formats	src/canmatrix/join.py	/^import canmatrix.formats$/;"	i
formats	src/canmatrix/tests/test_cmjson.py	/^import canmatrix.formats$/;"	i
formats	test/createTestMatrix.py	/^import canmatrix.formats$/;"	i
formats	test/test.py	/^import canmatrix.formats$/;"	i
formats	test/test_codec.py	/^from canmatrix import formats$/;"	i
frame	build/lib/canmatrix/arxml.py	/^            frame = 0$/;"	v
frame	build/lib/canmatrix/dbc.py	/^                    frame = db.frameById(temp.group(1))$/;"	v	class:load.FollowUps
frame	build/lib/canmatrix/dbc.py	/^                frame = db.frameById(temp.group(1))$/;"	v	class:load.FollowUps
frame	build/lib/canmatrix/dbc.py	/^            frame = db.frameById(temp.group(1))$/;"	v	class:load.FollowUps
frame	build/lib/canmatrix/sym.py	/^                    frame = Frame(frameName)$/;"	v	class:load.Mode
frame	src/canmatrix/arxml_BACKUP_26060.py	/^            frame = 0$/;"	v
frame	src/canmatrix/arxml_LOCAL_26060.py	/^            frame = 0$/;"	v
frame	src/canmatrix/copy.py	/^        frame = sourceDb.frameByName(frameId)$/;"	v
frame	src/canmatrix/dbc.py	/^                        frame = db.frameById(temp.group(1))$/;"	v	class:.FollowUps
frame	src/canmatrix/dbc.py	/^                    frame  = db.frameById(frameId)$/;"	v	class:.FollowUps
frame	src/canmatrix/dbc.py	/^                    frame = db.frameById(temp.group(1))$/;"	v	class:.FollowUps
frame	src/canmatrix/dbc.py	/^                frame = Frame(temp.group(2), id=int(temp.group(1)), size=int(temp.group(3)), transmitters=temp.group(4).split())$/;"	v	class:.FollowUps
frame	src/canmatrix/dbc.py	/^                frame = db.frameById(temp.group(1))$/;"	v	class:.FollowUps
frame	src/canmatrix/dbc.py	/^            frame = db.frameById(temp.group(1))$/;"	v	class:.FollowUps
frame	src/canmatrix/dbc.py	/^    frame = None$/;"	v
frame	src/canmatrix/sym.py	/^                        frame = Frame(frameName)$/;"	v	class:.Mode
frame	src/canmatrix/sym.py	/^                    frame = Frame(frameName)$/;"	v	class:.Mode
frame	src/canmatrix/sym.py	/^    frame = None$/;"	v
frame1	examples/createJ1939Dbc.py	/^frame1 = canmatrix.Frame("Node604", j1939_pgn = 0xff00, j1939_prio = 0x6,$/;"	v
frame2	examples/createJ1939Dbc.py	/^frame2 = canmatrix.Frame("Node605", j1939_pgn = 0xff01, j1939_prio = 0x6,$/;"	v
frame3	examples/createJ1939Dbc.py	/^frame3 = canmatrix.Frame("Node606", j1939_pgn = 0xff02, j1939_prio = 0x6,$/;"	v
frameById	build/lib/canmatrix/canmatrix.py	/^    def frameById(self, Id):$/;"	f
frameByName	build/lib/canmatrix/canmatrix.py	/^    def frameByName(self, name):$/;"	f
frameId	src/canmatrix/dbc.py	/^                    frameId = temp.group(1)$/;"	v	class:.FollowUps
frameList	src/canmatrix/copy.py	/^        frameList = sourceDb.globFrames(frameId)$/;"	v
frameName	build/lib/canmatrix/sym.py	/^                    frameName = line.replace('[', '').replace(']', '').strip()$/;"	v	class:load.Mode
frameName	src/canmatrix/sym.py	/^                        frameName = line.replace('[', '').replace(']', '').replace('"','').strip()$/;"	v	class:.Mode
frameName	src/canmatrix/sym.py	/^                    frameName = line.replace('[', '').replace(']', '').strip()$/;"	v	class:.Mode
frameName	src/canmatrix/sym.py	/^    frameName = ""$/;"	v
frame_constructor	build/lib/canmatrix/yaml.py	/^def frame_constructor(loader, node):$/;"	f
frame_constructor	src/canmatrix/yaml.py	/^def frame_constructor(loader, node):$/;"	f
frame_representer	build/lib/canmatrix/yaml.py	/^def frame_representer(dumper, data):$/;"	f
frame_representer	src/canmatrix/yaml.py	/^def frame_representer(dumper, data):$/;"	f
frames	build/lib/canmatrix/cancluster.py	/^    def frames(self):$/;"	m	class:canCluster
frames	src/canmatrix/cancluster.py	/^    def frames(self):$/;"	m	class:canCluster
framestyle	src/canmatrix/xls.py	/^                    framestyle = sty_white$/;"	v
framestyle	src/canmatrix/xls.py	/^                framestyle = sty_white$/;"	v
function	src/canmatrix/xls.py	/^                function = sh.cell(rownum, index['function']).value$/;"	v
fx	build/lib/canmatrix/fibex.py	/^fx = "http:\/\/www.asam.net\/xml\/fbx"$/;"	v
fx	src/canmatrix/fibex.py	/^fx = "http:\/\/www.asam.net\/xml\/fbx"$/;"	v
genCallbacks	examples/BusmasterRestbus.py	/^def genCallbacks(cycle, bId, db):$/;"	f
genSigStartVal	src/canmatrix/sym.py	/^        genSigStartVal = signal.attribute("GenSigStartValue", db=db)$/;"	v
genSimulatonFile	examples/BusmasterRestbus.py	/^def genSimulatonFile(nodes):$/;"	f
genString	examples/BusmasterRestbus.py	/^def genString(string):$/;"	f
genZeros	examples/BusmasterRestbus.py	/^def genZeros(count):$/;"	f
get	versioneer.py	/^    def get(parser, name):$/;"	f	function:get_config_from_root
getArPath	src/canmatrix/arxml.py	/^def getArPath(tree, arPath, namespaces):$/;"	f
getArPath	src/canmatrix/arxml_BACKUP_26060.py	/^def getArPath(tree, arPath, namespaces):$/;"	f
getArPath	src/canmatrix/arxml_REMOTE_26060.py	/^def getArPath(tree, arPath, namespaces):$/;"	f
getBaseTypeOfSignal	build/lib/canmatrix/arxml.py	/^def getBaseTypeOfSignal(signal):$/;"	f
getBaseTypeOfSignal	src/canmatrix/arxml.py	/^def getBaseTypeOfSignal(signal):$/;"	f
getBaseTypeOfSignal	src/canmatrix/arxml_BACKUP_26060.py	/^def getBaseTypeOfSignal(signal):$/;"	f
getBaseTypeOfSignal	src/canmatrix/arxml_BASE_26060.py	/^def getBaseTypeOfSignal(signal):$/;"	f
getBaseTypeOfSignal	src/canmatrix/arxml_LOCAL_26060.py	/^def getBaseTypeOfSignal(signal):$/;"	f
getBaseTypeOfSignal	src/canmatrix/arxml_REMOTE_26060.py	/^def getBaseTypeOfSignal(signal):$/;"	f
getChild	build/lib/canmatrix/arxml.py	/^    def getChild(self, path):$/;"	m	class:arTree
getChild	build/lib/canmatrix/autosarhelper.py	/^    def getChild(self, path):$/;"	m	class:arTree
getChild	src/canmatrix/arxml.py	/^    def getChild(self, path):$/;"	m	class:arTree
getChild	src/canmatrix/arxml_BACKUP_26060.py	/^    def getChild(self, path):$/;"	f
getChild	src/canmatrix/arxml_BASE_26060.py	/^    def getChild(self, path):$/;"	m	class:arTree
getChild	src/canmatrix/arxml_LOCAL_26060.py	/^    def getChild(self, path):$/;"	m	class:arTree
getChild	src/canmatrix/arxml_REMOTE_26060.py	/^    def getChild(self, path):$/;"	m	class:arTree
getDesc	build/lib/canmatrix/arxml.py	/^def getDesc(element, arDict, ns):$/;"	f
getDesc	src/canmatrix/arxml.py	/^def getDesc(element, arDict, ns):$/;"	f
getDesc	src/canmatrix/arxml_BACKUP_26060.py	/^def getDesc(element, arDict, ns):$/;"	f
getDesc	src/canmatrix/arxml_BASE_26060.py	/^def getDesc(element, arDict, ns):$/;"	f
getDesc	src/canmatrix/arxml_LOCAL_26060.py	/^def getDesc(element, arDict, ns):$/;"	f
getDesc	src/canmatrix/arxml_REMOTE_26060.py	/^def getDesc(element, arDict, ns):$/;"	f
getFrame	build/lib/canmatrix/arxml.py	/^def getFrame(frameTriggering, arDict, multiplexTranslation, ns):$/;"	f
getFrame	src/canmatrix/arxml.py	/^def getFrame(frameTriggering, xmlRoot, multiplexTranslation, ns, float_factory):$/;"	f
getFrame	src/canmatrix/arxml_BACKUP_26060.py	/^def getFrame(frameTriggering, xmlRoot, multiplexTranslation, ns, float_factory):$/;"	f
getFrame	src/canmatrix/arxml_BASE_26060.py	/^def getFrame(frameTriggering, arDict, multiplexTranslation, ns):$/;"	f
getFrame	src/canmatrix/arxml_LOCAL_26060.py	/^def getFrame(frameTriggering, arDict, multiplexTranslation, ns):$/;"	f
getFrame	src/canmatrix/arxml_REMOTE_26060.py	/^def getFrame(frameTriggering, xmlRoot, multiplexTranslation, ns, float_factory):$/;"	f
getFrameInfo	build/lib/canmatrix/xls_common.py	/^def getFrameInfo(db, frame):$/;"	f
getFrameInfo	src/canmatrix/xls_common.py	/^def getFrameInfo(db, frame):$/;"	f
getIfPossible	build/lib/canmatrix/xlsx.py	/^def getIfPossible(row, value):$/;"	f
getIfPossible	src/canmatrix/xlsx.py	/^def getIfPossible(row, value):$/;"	f
getSignal	build/lib/canmatrix/xls_common.py	/^def getSignal(db, sig, motorolaBitFormat):$/;"	f
getSignal	src/canmatrix/xls_common.py	/^def getSignal(db, sig, motorolaBitFormat):$/;"	f
getSignals	build/lib/canmatrix/arxml.py	/^def getSignals(signalarray, Bo, arDict, ns, multiplexId):$/;"	f
getSignals	src/canmatrix/arxml.py	/^def getSignals(signalarray, Bo, xmlRoot, ns, multiplexId, float_factory):$/;"	f
getSignals	src/canmatrix/arxml_BACKUP_26060.py	/^def getSignals(signalarray, Bo, xmlRoot, ns, multiplexId, float_factory):$/;"	f
getSignals	src/canmatrix/arxml_BASE_26060.py	/^def getSignals(signalarray, Bo, arDict, ns, multiplexId):$/;"	f
getSignals	src/canmatrix/arxml_LOCAL_26060.py	/^def getSignals(signalarray, Bo, arDict, ns, multiplexId):$/;"	f
getSignals	src/canmatrix/arxml_REMOTE_26060.py	/^def getSignals(signalarray, Bo, xmlRoot, ns, multiplexId, float_factory):$/;"	f
getStartbit	build/lib/canmatrix/canmatrix.py	/^    def getStartbit(self, bitNumbering=None, startLittle=None):$/;"	f
getStartbit	src/canmatrix/canmatrix.py	/^    def getStartbit(self, bitNumbering=None, startLittle=None):$/;"	f
getSysSignals	build/lib/canmatrix/arxml.py	/^def getSysSignals(syssignal, syssignalarray, Bo, Id, ns):$/;"	f
getSysSignals	src/canmatrix/arxml.py	/^def getSysSignals(syssignal, syssignalarray, Bo, Id, ns):$/;"	f
getSysSignals	src/canmatrix/arxml_BACKUP_26060.py	/^def getSysSignals(syssignal, syssignalarray, Bo, Id, ns):$/;"	f
getSysSignals	src/canmatrix/arxml_BASE_26060.py	/^def getSysSignals(syssignal, syssignalarray, Bo, Id, ns):$/;"	f
getSysSignals	src/canmatrix/arxml_LOCAL_26060.py	/^def getSysSignals(syssignal, syssignalarray, Bo, Id, ns):$/;"	f
getSysSignals	src/canmatrix/arxml_REMOTE_26060.py	/^def getSysSignals(syssignal, syssignalarray, Bo, Id, ns):$/;"	f
get_cmdclass	versioneer.py	/^def get_cmdclass():$/;"	f
get_config	src/canmatrix/_version.py	/^def get_config():$/;"	f
get_config_from_root	versioneer.py	/^def get_config_from_root(root):$/;"	f
get_keywords	src/canmatrix/_version.py	/^def get_keywords():$/;"	f
get_root	versioneer.py	/^def get_root():$/;"	f
get_version	versioneer.py	/^def get_version():$/;"	f
get_versions	build/lib/canmatrix/_version.py	/^def get_versions():$/;"	f
get_versions	src/canmatrix/_version.py	/^def get_versions():$/;"	f
get_versions	versioneer.py	/^def get_versions(verbose=False):$/;"	f
git_get_keywords	src/canmatrix/_version.py	/^def git_get_keywords(versionfile_abs):$/;"	f
git_get_keywords	versioneer.py	/^def git_get_keywords(versionfile_abs):$/;"	f
git_pieces_from_vcs	src/canmatrix/_version.py	/^def git_pieces_from_vcs(tag_prefix, root, verbose, run_command=run_command):$/;"	f
git_pieces_from_vcs	versioneer.py	/^def git_pieces_from_vcs(tag_prefix, root, verbose, run_command=run_command):$/;"	f
git_versions_from_keywords	src/canmatrix/_version.py	/^def git_versions_from_keywords(keywords, tag_prefix, verbose):$/;"	f
git_versions_from_keywords	versioneer.py	/^def git_versions_from_keywords(keywords, tag_prefix, verbose):$/;"	f
glob	build/lib/canmatrix/canmatrix.py	/^    def glob(self, globStr):$/;"	f
glob	examples/BusmasterRestbus.py	/^import glob$/;"	i
glob	src/canmatrix/canmatrix.py	/^    def glob(self, globStr):$/;"	f
globBoardUnits	build/lib/canmatrix/canmatrix.py	/^    def globBoardUnits(self, globStr):$/;"	f
globFrames	build/lib/canmatrix/canmatrix.py	/^    def globFrames(self, globStr):$/;"	f
globSignals	build/lib/canmatrix/canmatrix.py	/^    def globSignals(self, globStr):$/;"	f
hexadecimal_output	build/lib/canmatrix/sym.py	/^                        hexadecimal_output = True$/;"	v	class:load.Mode
hexadecimal_output	build/lib/canmatrix/sym.py	/^                hexadecimal_output = False$/;"	v	class:load.Mode
hexadecimal_output	src/canmatrix/sym.py	/^                            hexadecimal_output = True$/;"	v	class:.Mode
hexadecimal_output	src/canmatrix/sym.py	/^                        hexadecimal_output = True$/;"	v	class:.Mode
hexadecimal_output	src/canmatrix/sym.py	/^                    hexadecimal_output = False$/;"	v	class:.Mode
hexadecimal_output	src/canmatrix/sym.py	/^                hexadecimal_output = False$/;"	v	class:.Mode
ho	build/lib/canmatrix/fibex.py	/^ho = "http:\/\/www.asam.net\/xml"$/;"	v
ho	src/canmatrix/fibex.py	/^ho = "http:\/\/www.asam.net\/xml"$/;"	v
i	build/lib/canmatrix/dbc.py	/^        i = i + 1$/;"	v	class:load.FollowUps
i	src/canmatrix/dbc.py	/^        i = i + 1$/;"	v	class:.FollowUps
i	src/canmatrix/dbc.py	/^    i = 0$/;"	v
id	build/lib/canmatrix/arxml.py	/^                         id=idNum,$/;"	v
id	build/lib/canmatrix/canmatrix.py	/^    def id(self):$/;"	f
id	build/lib/canmatrix/canmatrix.py	/^    def id(self):$/;"	m	class:Frame
id	build/lib/canmatrix/canmatrix.py	/^    def id(self, value):$/;"	m	class:Frame
id	build/lib/canmatrix/dbc.py	/^                                  id=temp.group(1),$/;"	v	class:load.FollowUps
id	src/canmatrix/arxml_BACKUP_26060.py	/^                         id=idNum,$/;"	v
id	src/canmatrix/arxml_LOCAL_26060.py	/^                         id=idNum,$/;"	v
id	src/canmatrix/canmatrix.py	/^    def id(self):$/;"	f
id	src/canmatrix/canmatrix.py	/^    def id(self):$/;"	m	class:Frame
id	src/canmatrix/canmatrix.py	/^    id = attr.ib(type=int)$/;"	v
id	src/canmatrix/dbc.py	/^                                  id=temp.group(1),$/;"	v	class:.FollowUps
id	src/canmatrix/dbc.py	/^    id = 1$/;"	v
id	src/canmatrix/sym.py	/^                                id=multiplexor,$/;"	v	class:.Mode
id	src/canmatrix/sym.py	/^    id = attr.ib(default=None)$/;"	v	class:DuplicateMuxIdError
ids_sharing_same_pgn	build/lib/canmatrix/join.py	/^def ids_sharing_same_pgn(id_x, pgn_x, id_y, pgn_y):$/;"	f
ids_sharing_same_pgn	src/canmatrix/join.py	/^def ids_sharing_same_pgn(id_x, pgn_x, id_y, pgn_y):$/;"	f
import_types	test/test.py	/^import_types = []$/;"	v
in_file	test/test.py	/^    in_file = test_file_base + '.' + i.lower()$/;"	v
indexOffset	build/lib/canmatrix/sym.py	/^                    indexOffset = 0$/;"	v	class:load.Mode
indexOffset	build/lib/canmatrix/sym.py	/^                    indexOffset = 2$/;"	v	class:load.Mode
indexOffset	build/lib/canmatrix/sym.py	/^                indexOffset = 1$/;"	v	class:load.Mode
indexOffset	src/canmatrix/sym.py	/^                        indexOffset = 0$/;"	v	class:.Mode
indexOffset	src/canmatrix/sym.py	/^                        indexOffset = 2$/;"	v	class:.Mode
indexOffset	src/canmatrix/sym.py	/^                    indexOffset = 0$/;"	v	class:.Mode
indexOffset	src/canmatrix/sym.py	/^                    indexOffset = 1$/;"	v	class:.Mode
indexOffset	src/canmatrix/sym.py	/^                    indexOffset = 2$/;"	v	class:.Mode
indexOffset	src/canmatrix/sym.py	/^                indexOffset = 1$/;"	v	class:.Mode
initialValue	src/canmatrix/dbc.py	/^                initialValue  = temp.group(6)$/;"	v	class:.FollowUps
initialize_options	versioneer.py	/^        def initialize_options(self):$/;"	m	class:get_cmdclass.cmd_version
initvalue	build/lib/canmatrix/arxml.py	/^            initvalue = None$/;"	v
initvalue	build/lib/canmatrix/arxml.py	/^            initvalue = arGetXchildren(isignal, "INIT-VALUE\/NUMERICAL-VALUE-SPECIFICATION\/VALUE", arDict, ns) ##AR4.2$/;"	v
initvalue	build/lib/canmatrix/arxml.py	/^            initvalue = initvalue[0]$/;"	v
initvalue	build/lib/canmatrix/arxml.py	/^        initvalue = arGetXchildren(syssignal, "INIT-VALUE\/VALUE", arDict, ns)$/;"	v
initvalue	src/canmatrix/arxml_BACKUP_26060.py	/^            initvalue = None$/;"	v
initvalue	src/canmatrix/arxml_BACKUP_26060.py	/^            initvalue = arGetXchildren(isignal, "INIT-VALUE\/NUMERICAL-VALUE-SPECIFICATION\/VALUE", xmlRoot, ns) ##AR4.2$/;"	v
initvalue	src/canmatrix/arxml_BACKUP_26060.py	/^            initvalue = initvalue[0]$/;"	v
initvalue	src/canmatrix/arxml_BACKUP_26060.py	/^        initvalue = arGetXchildren(syssignal, "INIT-VALUE\/VALUE", xmlRoot, ns)$/;"	v
initvalue	src/canmatrix/arxml_LOCAL_26060.py	/^            initvalue = None$/;"	v
initvalue	src/canmatrix/arxml_LOCAL_26060.py	/^            initvalue = arGetXchildren(isignal, "INIT-VALUE\/NUMERICAL-VALUE-SPECIFICATION\/VALUE", arDict, ns) ##AR4.2$/;"	v
initvalue	src/canmatrix/arxml_LOCAL_26060.py	/^            initvalue = initvalue[0]$/;"	v
initvalue	src/canmatrix/arxml_LOCAL_26060.py	/^        initvalue = arGetXchildren(syssignal, "INIT-VALUE\/VALUE", arDict, ns)$/;"	v
install	build/lib/canmatrix/canmatrix.py	/^            logger.error("message decoding not supported due bitstruct import error \/\/ try pip install bitstruct")$/;"	i
intel	build/lib/canmatrix/sym.py	/^                        intel = 0$/;"	v	class:load.Mode
intel	build/lib/canmatrix/sym.py	/^                intel = 1$/;"	v	class:load.Mode
intel	src/canmatrix/sym.py	/^                            intel = 0$/;"	v	class:.Mode
intel	src/canmatrix/sym.py	/^                        intel = 0$/;"	v	class:.Mode
intel	src/canmatrix/sym.py	/^                    intel = 1$/;"	v	class:.Mode
intel	src/canmatrix/sym.py	/^                intel = 1$/;"	v	class:.Mode
io	build/lib/canmatrix/cmcsv.py	/^        import io$/;"	i
io	build/lib/canmatrix/cmjson.py	/^        import io$/;"	i
io	build/lib/canmatrix/formats.py	/^    import io$/;"	i
io	src/canmatrix/cmcsv.py	/^        import io$/;"	i
io	src/canmatrix/cmjson.py	/^        import io$/;"	i
io	src/canmatrix/formats.py	/^    import io$/;"	i
io	src/canmatrix/tests/test_cmjson.py	/^import io$/;"	i
io	src/canmatrix/tests/test_sym.py	/^import io$/;"	i
ipdu	build/lib/canmatrix/arxml.py	/^            ipdu = arGetChild(alternative, "I-PDU", arDict, ns)$/;"	v
ipdu	build/lib/canmatrix/arxml.py	/^        ipdu = arGetChild(staticPart, "I-PDU", arDict, ns)$/;"	v
ipdu	src/canmatrix/arxml_BACKUP_26060.py	/^            ipdu = arGetChild(alternative, "I-PDU", xmlRoot, ns)$/;"	v
ipdu	src/canmatrix/arxml_BACKUP_26060.py	/^        ipdu = arGetChild(staticPart, "I-PDU", xmlRoot, ns)$/;"	v
ipdu	src/canmatrix/arxml_LOCAL_26060.py	/^            ipdu = arGetChild(alternative, "I-PDU", arDict, ns)$/;"	v
ipdu	src/canmatrix/arxml_LOCAL_26060.py	/^        ipdu = arGetChild(staticPart, "I-PDU", arDict, ns)$/;"	v
ipduTriggering	build/lib/canmatrix/arxml.py	/^        ipduTriggering = arGetChild($/;"	v
ipduTriggering	build/lib/canmatrix/arxml.py	/^        ipduTriggering = arGetChild(ipduTriggeringRefs, "I-PDU-TRIGGERING", arDict, ns)$/;"	v
ipduTriggering	src/canmatrix/arxml_BACKUP_26060.py	/^        ipduTriggering = arGetChild($/;"	v
ipduTriggering	src/canmatrix/arxml_BACKUP_26060.py	/^        ipduTriggering = arGetChild(ipduTriggeringRefs, "I-PDU-TRIGGERING", arDict, ns)$/;"	v
ipduTriggering	src/canmatrix/arxml_BACKUP_26060.py	/^        ipduTriggering = arGetChild(ipduTriggeringRefs, "I-PDU-TRIGGERING", xmlRoot, ns)$/;"	v
ipduTriggering	src/canmatrix/arxml_LOCAL_26060.py	/^        ipduTriggering = arGetChild($/;"	v
ipduTriggering	src/canmatrix/arxml_LOCAL_26060.py	/^        ipduTriggering = arGetChild(ipduTriggeringRefs, "I-PDU-TRIGGERING", arDict, ns)$/;"	v
ipduTriggeringRefs	build/lib/canmatrix/arxml.py	/^        ipduTriggeringRefs = arGetChild($/;"	v
ipduTriggeringRefs	build/lib/canmatrix/arxml.py	/^        ipduTriggeringRefs = arGetChild(frameTriggering, "I-PDU-TRIGGERING-REFS", arDict, ns)$/;"	v
ipduTriggeringRefs	src/canmatrix/arxml_BACKUP_26060.py	/^        ipduTriggeringRefs = arGetChild($/;"	v
ipduTriggeringRefs	src/canmatrix/arxml_BACKUP_26060.py	/^        ipduTriggeringRefs = arGetChild(frameTriggering, "I-PDU-TRIGGERING-REFS", arDict, ns)$/;"	v
ipduTriggeringRefs	src/canmatrix/arxml_BACKUP_26060.py	/^        ipduTriggeringRefs = arGetChild(frameTriggering, "I-PDU-TRIGGERING-REFS", xmlRoot, ns)$/;"	v
ipduTriggeringRefs	src/canmatrix/arxml_LOCAL_26060.py	/^        ipduTriggeringRefs = arGetChild($/;"	v
ipduTriggeringRefs	src/canmatrix/arxml_LOCAL_26060.py	/^        ipduTriggeringRefs = arGetChild(frameTriggering, "I-PDU-TRIGGERING-REFS", arDict, ns)$/;"	v
ipdus	build/lib/canmatrix/arxml.py	/^                ipdus = arGetChild(trigs, "I-PDU", arDict, ns)$/;"	v
ipdus	src/canmatrix/arxml_BACKUP_26060.py	/^                ipdus = arGetChild(trigs, "I-PDU", xmlRoot, ns)$/;"	v
ipdus	src/canmatrix/arxml_LOCAL_26060.py	/^                ipdus = arGetChild(trigs, "I-PDU", arDict, ns)$/;"	v
is_complex_multiplexed	src/canmatrix/dbc.py	/^                        is_complex_multiplexed = True$/;"	v	class:.FollowUps
is_complex_multiplexed	src/canmatrix/dbc.py	/^                    is_complex_multiplexed = False$/;"	v	class:.FollowUps
is_float	build/lib/canmatrix/arxml.py	/^                            is_float=is_float)$/;"	v
is_float	build/lib/canmatrix/arxml.py	/^                is_float = True$/;"	v
is_float	build/lib/canmatrix/sym.py	/^                                        is_float=is_float,$/;"	v	class:load.Mode
is_float	build/lib/canmatrix/sym.py	/^                                    is_float=is_float,$/;"	v	class:load.Mode
is_float	build/lib/canmatrix/sym.py	/^                        is_float = True$/;"	v	class:load.Mode
is_float	build/lib/canmatrix/sym.py	/^                is_float = False$/;"	v	class:load.Mode
is_float	src/canmatrix/arxml_BACKUP_26060.py	/^                            is_float=is_float)$/;"	v
is_float	src/canmatrix/arxml_BACKUP_26060.py	/^                is_float = True$/;"	v
is_float	src/canmatrix/arxml_LOCAL_26060.py	/^                            is_float=is_float)$/;"	v
is_float	src/canmatrix/arxml_LOCAL_26060.py	/^                is_float = True$/;"	v
is_float	src/canmatrix/canmatrix.py	/^    is_float = attr.ib(type=bool, default=False)$/;"	v
is_float	src/canmatrix/cmjson.py	/^                    is_float = False$/;"	v
is_float	src/canmatrix/cmjson.py	/^                    is_float = True$/;"	v
is_float	src/canmatrix/dbf.py	/^                                                is_float=is_float,$/;"	v
is_float	src/canmatrix/dbf.py	/^                    is_float = True$/;"	v
is_float	src/canmatrix/dbf.py	/^                is_float = False$/;"	v
is_float	src/canmatrix/sym.py	/^                                            is_float=is_float,$/;"	v	class:.Mode
is_float	src/canmatrix/sym.py	/^                                        is_float=is_float,$/;"	v	class:.Mode
is_float	src/canmatrix/sym.py	/^                                    is_float=is_float,$/;"	v	class:.Mode
is_float	src/canmatrix/sym.py	/^                            is_float = True$/;"	v	class:.Mode
is_float	src/canmatrix/sym.py	/^                        is_float = True$/;"	v	class:.Mode
is_float	src/canmatrix/sym.py	/^                    is_float = False$/;"	v	class:.Mode
is_float	src/canmatrix/sym.py	/^                is_float = False$/;"	v	class:.Mode
is_little_endian	build/lib/canmatrix/arxml.py	/^                            is_little_endian=is_little_endian,$/;"	v
is_little_endian	build/lib/canmatrix/arxml.py	/^                is_little_endian = True$/;"	v
is_little_endian	build/lib/canmatrix/arxml.py	/^            is_little_endian = True$/;"	v
is_little_endian	build/lib/canmatrix/arxml.py	/^        is_little_endian = False$/;"	v
is_little_endian	build/lib/canmatrix/dbc.py	/^                                 is_little_endian=(int(temp.group(4)) == 1),$/;"	v	class:load.FollowUps
is_little_endian	build/lib/canmatrix/dbc.py	/^                                 is_little_endian=(int(temp.group(5)) == 1),$/;"	v	class:load.FollowUps
is_little_endian	build/lib/canmatrix/sym.py	/^                                        is_little_endian=intel,$/;"	v	class:load.Mode
is_little_endian	build/lib/canmatrix/sym.py	/^                                    is_little_endian=intel,$/;"	v	class:load.Mode
is_little_endian	src/canmatrix/arxml_BACKUP_26060.py	/^                            is_little_endian=is_little_endian,$/;"	v
is_little_endian	src/canmatrix/arxml_BACKUP_26060.py	/^                is_little_endian = True$/;"	v
is_little_endian	src/canmatrix/arxml_BACKUP_26060.py	/^            is_little_endian = True$/;"	v
is_little_endian	src/canmatrix/arxml_BACKUP_26060.py	/^        is_little_endian = False$/;"	v
is_little_endian	src/canmatrix/arxml_LOCAL_26060.py	/^                            is_little_endian=is_little_endian,$/;"	v
is_little_endian	src/canmatrix/arxml_LOCAL_26060.py	/^                is_little_endian = True$/;"	v
is_little_endian	src/canmatrix/arxml_LOCAL_26060.py	/^            is_little_endian = True$/;"	v
is_little_endian	src/canmatrix/arxml_LOCAL_26060.py	/^        is_little_endian = False$/;"	v
is_little_endian	src/canmatrix/canmatrix.py	/^    is_little_endian = attr.ib(type=bool, default = True)$/;"	v
is_little_endian	src/canmatrix/cmjson.py	/^                                   is_little_endian=is_little_endian,$/;"	v
is_little_endian	src/canmatrix/cmjson.py	/^                    is_little_endian = False$/;"	v
is_little_endian	src/canmatrix/cmjson.py	/^                    is_little_endian = True$/;"	v
is_little_endian	src/canmatrix/dbc.py	/^                                 is_little_endian=(int(temp.group(4)) == 1),$/;"	v	class:.FollowUps
is_little_endian	src/canmatrix/dbc.py	/^                                 is_little_endian=(int(temp.group(5)) == 1),$/;"	v	class:.FollowUps
is_little_endian	src/canmatrix/dbc.py	/^                        is_little_endian=(int(temp.group(4)) == 1),$/;"	v	class:.FollowUps
is_little_endian	src/canmatrix/dbc.py	/^                        is_little_endian=(int(temp.group(5)) == 1),$/;"	v	class:.FollowUps
is_little_endian	src/canmatrix/dbf.py	/^                                                is_little_endian=($/;"	v
is_little_endian	src/canmatrix/sym.py	/^                                            is_little_endian=intel,$/;"	v	class:.Mode
is_little_endian	src/canmatrix/sym.py	/^                                        is_little_endian=intel,$/;"	v	class:.Mode
is_little_endian	src/canmatrix/sym.py	/^                                    is_little_endian=intel,$/;"	v	class:.Mode
is_little_endian	src/canmatrix/xls.py	/^                                is_little_endian=is_little_endian,$/;"	v
is_little_endian	src/canmatrix/xls.py	/^                    is_little_endian = False$/;"	v
is_little_endian	src/canmatrix/xls.py	/^                    is_little_endian = True$/;"	v
is_little_endian	src/canmatrix/xls.py	/^                is_little_endian = True  # Default Intel$/;"	v
is_little_endian	test/createTestMatrix.py	/^                   is_little_endian=True,$/;"	v
is_little_endian	test/createTestMatrix.py	/^                  is_little_endian=False,$/;"	v
is_multiplexed	build/lib/canmatrix/canmatrix.py	/^    def is_multiplexed(self):$/;"	m	class:Frame
is_signed	build/lib/canmatrix/arxml.py	/^                            is_signed=is_signed,$/;"	v
is_signed	build/lib/canmatrix/arxml.py	/^                    is_signed = False  # unsigned$/;"	v
is_signed	build/lib/canmatrix/arxml.py	/^                   is_signed = True  # signed$/;"	v
is_signed	build/lib/canmatrix/arxml.py	/^                is_signed = False  # unsigned - unless signs are negative, keep everything positive.$/;"	v
is_signed	build/lib/canmatrix/arxml.py	/^                is_signed = False  # unsigned$/;"	v
is_signed	build/lib/canmatrix/arxml.py	/^                is_signed = True  # signed$/;"	v
is_signed	build/lib/canmatrix/arxml.py	/^            is_signed = True  # signed$/;"	v
is_signed	build/lib/canmatrix/arxml.py	/^        is_signed = False  # unsigned$/;"	v
is_signed	build/lib/canmatrix/arxml.py	/^        is_signed = False$/;"	v
is_signed	build/lib/canmatrix/dbc.py	/^                                 is_signed=(temp.group(5) == '-'),$/;"	v	class:load.FollowUps
is_signed	build/lib/canmatrix/dbc.py	/^                                 is_signed=(temp.group(6) == '-'),$/;"	v	class:load.FollowUps
is_signed	build/lib/canmatrix/sym.py	/^                                        is_signed=is_signed,$/;"	v	class:load.Mode
is_signed	build/lib/canmatrix/sym.py	/^                                    is_signed=is_signed,$/;"	v	class:load.Mode
is_signed	build/lib/canmatrix/sym.py	/^                        is_signed = True$/;"	v	class:load.Mode
is_signed	build/lib/canmatrix/sym.py	/^                    is_signed = False$/;"	v	class:load.Mode
is_signed	build/lib/canmatrix/sym.py	/^                    is_signed = True$/;"	v	class:load.Mode
is_signed	src/canmatrix/arxml_BACKUP_26060.py	/^                            is_signed=is_signed,$/;"	v
is_signed	src/canmatrix/arxml_BACKUP_26060.py	/^                    is_signed = False  # unsigned$/;"	v
is_signed	src/canmatrix/arxml_BACKUP_26060.py	/^                   is_signed = True  # signed$/;"	v
is_signed	src/canmatrix/arxml_BACKUP_26060.py	/^                is_signed = False  # unsigned - unless signs are negative, keep everything positive.$/;"	v
is_signed	src/canmatrix/arxml_BACKUP_26060.py	/^                is_signed = False  # unsigned$/;"	v
is_signed	src/canmatrix/arxml_BACKUP_26060.py	/^                is_signed = True  # signed$/;"	v
is_signed	src/canmatrix/arxml_BACKUP_26060.py	/^            is_signed = True  # signed$/;"	v
is_signed	src/canmatrix/arxml_BACKUP_26060.py	/^        is_signed = False  # unsigned$/;"	v
is_signed	src/canmatrix/arxml_BACKUP_26060.py	/^        is_signed = False$/;"	v
is_signed	src/canmatrix/arxml_LOCAL_26060.py	/^                            is_signed=is_signed,$/;"	v
is_signed	src/canmatrix/arxml_LOCAL_26060.py	/^                    is_signed = False  # unsigned$/;"	v
is_signed	src/canmatrix/arxml_LOCAL_26060.py	/^                   is_signed = True  # signed$/;"	v
is_signed	src/canmatrix/arxml_LOCAL_26060.py	/^                is_signed = False  # unsigned - unless signs are negative, keep everything positive.$/;"	v
is_signed	src/canmatrix/arxml_LOCAL_26060.py	/^                is_signed = False  # unsigned$/;"	v
is_signed	src/canmatrix/arxml_LOCAL_26060.py	/^                is_signed = True  # signed$/;"	v
is_signed	src/canmatrix/arxml_LOCAL_26060.py	/^            is_signed = True  # signed$/;"	v
is_signed	src/canmatrix/arxml_LOCAL_26060.py	/^        is_signed = False  # unsigned$/;"	v
is_signed	src/canmatrix/arxml_LOCAL_26060.py	/^        is_signed = False$/;"	v
is_signed	src/canmatrix/canmatrix.py	/^    is_signed = attr.ib(type=bool, default = True)$/;"	v
is_signed	src/canmatrix/cmjson.py	/^                                   is_signed=is_signed,$/;"	v
is_signed	src/canmatrix/cmjson.py	/^                    is_signed = False$/;"	v
is_signed	src/canmatrix/cmjson.py	/^                    is_signed = True$/;"	v
is_signed	src/canmatrix/dbc.py	/^                                 is_signed=(temp.group(5) == '-'),$/;"	v	class:.FollowUps
is_signed	src/canmatrix/dbc.py	/^                                 is_signed=(temp.group(6) == '-'),$/;"	v	class:.FollowUps
is_signed	src/canmatrix/dbc.py	/^                        is_signed=(temp.group(5) == '-'),$/;"	v	class:.FollowUps
is_signed	src/canmatrix/dbc.py	/^                        is_signed=(temp.group(6) == '-'),$/;"	v	class:.FollowUps
is_signed	src/canmatrix/dbf.py	/^                                                is_signed=is_signed,$/;"	v
is_signed	src/canmatrix/dbf.py	/^                    is_signed = False$/;"	v
is_signed	src/canmatrix/dbf.py	/^                    is_signed = True$/;"	v
is_signed	src/canmatrix/dbf.py	/^                is_signed = False$/;"	v
is_signed	src/canmatrix/sym.py	/^                                            is_signed=is_signed,$/;"	v	class:.Mode
is_signed	src/canmatrix/sym.py	/^                                        is_signed=is_signed,$/;"	v	class:.Mode
is_signed	src/canmatrix/sym.py	/^                                    is_signed=is_signed,$/;"	v	class:.Mode
is_signed	src/canmatrix/sym.py	/^                            is_signed = True$/;"	v	class:.Mode
is_signed	src/canmatrix/sym.py	/^                        is_signed = False$/;"	v	class:.Mode
is_signed	src/canmatrix/sym.py	/^                        is_signed = True$/;"	v	class:.Mode
is_signed	src/canmatrix/sym.py	/^                    is_signed = False$/;"	v	class:.Mode
is_signed	src/canmatrix/sym.py	/^                    is_signed = True$/;"	v	class:.Mode
is_signed	src/canmatrix/xls.py	/^                                is_signed=is_signed,$/;"	v
is_signed	src/canmatrix/xls.py	/^            is_signed = False$/;"	v
is_signed	test/createTestMatrix.py	/^                   is_signed=False,$/;"	v
is_signed	test/createTestMatrix.py	/^                  is_signed=False,$/;"	v
isignal	build/lib/canmatrix/arxml.py	/^                    isignal = arGetChild(sigTrig, 'I-SIGNAL', arDict, ns)$/;"	v
isignal	build/lib/canmatrix/arxml.py	/^                isignal = arGetChild(sigTrig, 'SIGNAL', arDict, ns)$/;"	v
isignal	src/canmatrix/arxml_BACKUP_26060.py	/^                    isignal = arGetChild(sigTrig, 'I-SIGNAL', searchPoint, ns)$/;"	v
isignal	src/canmatrix/arxml_BACKUP_26060.py	/^                isignal = arGetChild(sigTrig, 'SIGNAL', searchPoint, ns)$/;"	v
isignal	src/canmatrix/arxml_LOCAL_26060.py	/^                    isignal = arGetChild(sigTrig, 'I-SIGNAL', arDict, ns)$/;"	v
isignal	src/canmatrix/arxml_LOCAL_26060.py	/^                isignal = arGetChild(sigTrig, 'SIGNAL', arDict, ns)$/;"	v
isignaltriggerings	build/lib/canmatrix/arxml.py	/^            isignaltriggerings = arGetXchildren($/;"	v
isignaltriggerings	src/canmatrix/arxml_BACKUP_26060.py	/^            isignaltriggerings = arGetXchildren($/;"	v
isignaltriggerings	src/canmatrix/arxml_LOCAL_26060.py	/^            isignaltriggerings = arGetXchildren($/;"	v
iterparse	build/lib/canmatrix/xlsx.py	/^    from xml.etree.ElementTree import iterparse$/;"	i
iterparse	build/lib/canmatrix/xlsx.py	/^from xml.etree.ElementTree import iterparse$/;"	i
iterparse	src/canmatrix/xlsx.py	/^    from xml.etree.ElementTree import iterparse$/;"	i
iterparse	src/canmatrix/xlsx.py	/^from xml.etree.ElementTree import iterparse$/;"	i
j1939_source	examples/createJ1939Dbc.py	/^                         j1939_source = 0x80,$/;"	v
join_frame_by_signal_startbit	build/lib/canmatrix/join.py	/^def join_frame_by_signal_startbit(files):$/;"	f
join_frame_by_signal_startbit	examples/exampleJoin.py	/^from canmatrix.join import join_frame_by_signal_startbit$/;"	i
join_frame_by_signal_startbit	src/canmatrix/join.py	/^def join_frame_by_signal_startbit(files):$/;"	f
join_frame_for_manufacturer	build/lib/canmatrix/join.py	/^def join_frame_for_manufacturer(db, files):$/;"	f
join_frame_for_manufacturer	src/canmatrix/join.py	/^def join_frame_for_manufacturer(db, files):$/;"	f
json	build/lib/canmatrix/_version.py	/^import json$/;"	i
json	build/lib/canmatrix/cmjson.py	/^import json$/;"	i
json	src/canmatrix/cmjson.py	/^import json$/;"	i
json	src/canmatrix/tests/test_cmjson.py	/^import json$/;"	i
json	versioneer.py	/^import json$/;"	i
keywords	setup.py	/^    keywords = "CAN dbc arxml kcd dbf sym",$/;"	v
l	build/lib/canmatrix/dbc.py	/^        l = line.strip()$/;"	v	class:load.FollowUps
l	src/canmatrix/dbc.py	/^        l = line.strip()$/;"	v	class:.FollowUps
l2	build/lib/canmatrix/arxml.py	/^            l2 = arGetChild(desc, "L-2", arDict, ns)$/;"	v
l2	src/canmatrix/arxml_BACKUP_26060.py	/^            l2 = arGetChild(desc, "L-2", searchPoint, ns)$/;"	v
l2	src/canmatrix/arxml_LOCAL_26060.py	/^            l2 = arGetChild(desc, "L-2", arDict, ns)$/;"	v
l4	build/lib/canmatrix/arxml.py	/^              l4 = arGetChild(longname, "L-4", arDict, ns)$/;"	v
l4	src/canmatrix/arxml_BACKUP_26060.py	/^              l4 = arGetChild(longname, "L-4", arDict, ns)$/;"	v
l4	src/canmatrix/arxml_BACKUP_26060.py	/^              l4 = arGetChild(longname, "L-4", xmlRoot, ns)$/;"	v
l4	src/canmatrix/arxml_LOCAL_26060.py	/^              l4 = arGetChild(longname, "L-4", arDict, ns)$/;"	v
label	src/canmatrix/kcd.py	/^                        label = etree.Element($/;"	v
label	src/canmatrix/xls.py	/^                        label=str($/;"	v
labelset	src/canmatrix/kcd.py	/^                    labelset = etree.Element('LabelSet')$/;"	v
labelset	src/canmatrix/kcd.py	/^            labelset = None$/;"	v
launchParam	src/canmatrix/xls.py	/^                launchParam = "0"$/;"	v
launchParam	src/canmatrix/xls.py	/^                launchParam = str(int(launchParam))$/;"	v
license	setup.py	/^    license = "BSD",$/;"	v
line	build/lib/canmatrix/sym.py	/^                    line = line.split('\/\/')[0]$/;"	v	class:load.Mode
line	build/lib/canmatrix/sym.py	/^                line = line.replace('  ', ' "" ')$/;"	v	class:load.Mode
line	build/lib/canmatrix/sym.py	/^                line = line.split('\/\/')[0]$/;"	v	class:load.Mode
line	build/lib/canmatrix/sym.py	/^                line = line[4:]$/;"	v	class:load.Mode
line	build/lib/canmatrix/sym.py	/^            line = line.strip()$/;"	v	class:load.Mode
line	build/lib/canmatrix/sym.py	/^        line = line.decode(symImportEncoding).strip()$/;"	v	class:load.Mode
line	src/canmatrix/sym.py	/^                                line=line,$/;"	v	class:.Mode
line	src/canmatrix/sym.py	/^                        line = split[0].strip()$/;"	v	class:.Mode
line	src/canmatrix/sym.py	/^                    line = line.replace('  ', ' "" ')$/;"	v	class:.Mode
line	src/canmatrix/sym.py	/^                    line = line.split('\/\/')[0]$/;"	v	class:.Mode
line	src/canmatrix/sym.py	/^                    line = line[4:]$/;"	v	class:.Mode
line	src/canmatrix/sym.py	/^                    line=line,$/;"	v	class:.Mode
line	src/canmatrix/sym.py	/^                line = line.replace('  ', ' "" ')$/;"	v	class:.Mode
line	src/canmatrix/sym.py	/^                line = line.split('\/\/')[0]$/;"	v	class:.Mode
line	src/canmatrix/sym.py	/^                line = line[4:]$/;"	v	class:.Mode
line	src/canmatrix/sym.py	/^            line = line.strip()$/;"	v	class:.Mode
line	src/canmatrix/sym.py	/^        line = line.decode(symImportEncoding).strip()$/;"	v	class:.Mode
line	src/canmatrix/sym.py	/^    line = attr.ib()$/;"	v	class:ParsingError
line_number	src/canmatrix/sym.py	/^                                line_number=linecount,$/;"	v	class:.Mode
line_number	src/canmatrix/sym.py	/^                    line_number=linecount,$/;"	v	class:.Mode
line_number	src/canmatrix/sym.py	/^    line_number = attr.ib()$/;"	v	class:ParsingError
list_pgn	build/lib/canmatrix/join.py	/^def list_pgn(db):$/;"	f
list_pgn	src/canmatrix/join.py	/^def list_pgn(db):$/;"	f
load	build/lib/canmatrix/arxml.py	/^def load(file, **options):$/;"	f
load	build/lib/canmatrix/cmjson.py	/^def load(f, **options):$/;"	f
load	build/lib/canmatrix/dbc.py	/^def load(f, **options):$/;"	f
load	build/lib/canmatrix/dbf.py	/^def load(f, **options):$/;"	f
load	build/lib/canmatrix/formats.py	/^def load(fileObject, importType, key="", flatImport=None, **options):$/;"	f
load	build/lib/canmatrix/kcd.py	/^def load(f, **options):$/;"	f
load	build/lib/canmatrix/sym.py	/^def load(f, **options):$/;"	f
load	build/lib/canmatrix/xls.py	/^def load(file, **options):$/;"	f
load	build/lib/canmatrix/xlsx.py	/^def load(filename, **options):$/;"	f
load	build/lib/canmatrix/yaml.py	/^def load(f, **options):$/;"	f
load	src/canmatrix/arxml.py	/^def load(file, **options):$/;"	f
load	src/canmatrix/arxml_BACKUP_26060.py	/^def load(file, **options):$/;"	f
load	src/canmatrix/arxml_BASE_26060.py	/^def load(file, **options):$/;"	f
load	src/canmatrix/arxml_LOCAL_26060.py	/^def load(file, **options):$/;"	f
load	src/canmatrix/arxml_REMOTE_26060.py	/^def load(file, **options):$/;"	f
load	src/canmatrix/cmjson.py	/^def load(f, **options):$/;"	f
load	src/canmatrix/dbc.py	/^def load(f, **options):$/;"	f
load	src/canmatrix/dbf.py	/^def load(f, **options):$/;"	f
load	src/canmatrix/formats.py	/^def load(fileObject, importType, key="", flatImport=None, **options):$/;"	f
load	src/canmatrix/kcd.py	/^def load(f, **options):$/;"	f
load	src/canmatrix/sym.py	/^def load(f, **options):$/;"	f
load	src/canmatrix/xls.py	/^def load(file, **options):$/;"	f
load	src/canmatrix/xlsx.py	/^def load(filename, **options):$/;"	f
load	src/canmatrix/yaml.py	/^def load(f, **options):$/;"	f
loadedFormats	build/lib/canmatrix/formats.py	/^loadedFormats = []$/;"	v
loadedFormats	src/canmatrix/formats.py	/^loadedFormats = []$/;"	v
loadp	build/lib/canmatrix/formats.py	/^def loadp(path, importType=None, key="", flatImport=None, **options):$/;"	f
loadp	src/canmatrix/formats.py	/^def loadp(path, importType=None, key="", flatImport=None, **options):$/;"	f
loads	build/lib/canmatrix/formats.py	/^def loads(string, importType=None, key="", flatImport=None, encoding="utf-8",**options):$/;"	f
loads	src/canmatrix/formats.py	/^def loads(string, importType=None, key="", flatImport=None, encoding="utf-8",**options):$/;"	f
logger	build/lib/canmatrix/arxml.py	/^logger = logging.getLogger('root')$/;"	v
logger	build/lib/canmatrix/autosarhelper.py	/^logger = logging.getLogger('root')$/;"	v
logger	build/lib/canmatrix/canmatrix.py	/^logger = logging.getLogger('root')$/;"	v
logger	build/lib/canmatrix/cmcsv.py	/^logger = logging.getLogger('root')$/;"	v
logger	build/lib/canmatrix/compare.py	/^logger = setup_logger('root')$/;"	v
logger	build/lib/canmatrix/convert.py	/^logger = setup_logger('root')$/;"	v
logger	build/lib/canmatrix/dbc.py	/^logger = logging.getLogger('root')$/;"	v
logger	build/lib/canmatrix/dbf.py	/^logger = logging.getLogger('root')$/;"	v
logger	build/lib/canmatrix/formats.py	/^logger = logging.getLogger('root')$/;"	v
logger	build/lib/canmatrix/sym.py	/^logger = logging.getLogger('root')$/;"	v
logger	build/lib/canmatrix/xls.py	/^logger = logging.getLogger('root')$/;"	v
logger	src/canmatrix/arxml.py	/^logger = logging.getLogger('root')$/;"	v
logger	src/canmatrix/arxml_BACKUP_26060.py	/^logger = logging.getLogger('root')$/;"	v
logger	src/canmatrix/arxml_BASE_26060.py	/^logger = logging.getLogger('root')$/;"	v
logger	src/canmatrix/arxml_LOCAL_26060.py	/^logger = logging.getLogger('root')$/;"	v
logger	src/canmatrix/arxml_REMOTE_26060.py	/^logger = logging.getLogger('root')$/;"	v
logger	src/canmatrix/canmatrix.py	/^logger = logging.getLogger('root')$/;"	v
logger	src/canmatrix/cmcsv.py	/^logger = logging.getLogger('root')$/;"	v
logger	src/canmatrix/compare.py	/^logger = setup_logger('root')$/;"	v
logger	src/canmatrix/convert.py	/^logger = setup_logger('root')$/;"	v
logger	src/canmatrix/dbc.py	/^logger = logging.getLogger('root')$/;"	v
logger	src/canmatrix/dbf.py	/^logger = logging.getLogger('root')$/;"	v
logger	src/canmatrix/formats.py	/^logger = logging.getLogger('root')$/;"	v
logger	src/canmatrix/sym.py	/^logger = logging.getLogger('root')$/;"	v
logger	src/canmatrix/xls.py	/^logger = logging.getLogger('root')$/;"	v
logger	test/test.py	/^logger = setup_logger('root')$/;"	v
logging	build/lib/canmatrix/arxml.py	/^import logging$/;"	i
logging	build/lib/canmatrix/autosarhelper.py	/^import logging$/;"	i
logging	build/lib/canmatrix/canmatrix.py	/^import logging$/;"	i
logging	build/lib/canmatrix/cmcsv.py	/^import logging$/;"	i
logging	build/lib/canmatrix/dbc.py	/^import logging$/;"	i
logging	build/lib/canmatrix/dbf.py	/^import logging$/;"	i
logging	build/lib/canmatrix/formats.py	/^import logging$/;"	i
logging	build/lib/canmatrix/log.py	/^import logging$/;"	i
logging	build/lib/canmatrix/sym.py	/^import logging$/;"	i
logging	build/lib/canmatrix/xls.py	/^import logging$/;"	i
logging	src/canmatrix/arxml.py	/^import logging$/;"	i
logging	src/canmatrix/arxml_BACKUP_26060.py	/^import logging$/;"	i
logging	src/canmatrix/arxml_BASE_26060.py	/^import logging$/;"	i
logging	src/canmatrix/arxml_LOCAL_26060.py	/^import logging$/;"	i
logging	src/canmatrix/arxml_REMOTE_26060.py	/^import logging$/;"	i
logging	src/canmatrix/canmatrix.py	/^import logging$/;"	i
logging	src/canmatrix/cmcsv.py	/^import logging$/;"	i
logging	src/canmatrix/dbc.py	/^import logging$/;"	i
logging	src/canmatrix/dbf.py	/^import logging$/;"	i
logging	src/canmatrix/formats.py	/^import logging$/;"	i
logging	src/canmatrix/log.py	/^import logging$/;"	i
logging	src/canmatrix/sym.py	/^import logging$/;"	i
logging	src/canmatrix/xls.py	/^import logging$/;"	i
longName	build/lib/canmatrix/sym.py	/^                            longName = s[1]$/;"	v	class:load.Mode
longName	build/lib/canmatrix/sym.py	/^                longName = None$/;"	v	class:load.Mode
longName	src/canmatrix/sym.py	/^                                longName = s[1]$/;"	v	class:.Mode
longName	src/canmatrix/sym.py	/^                            longName = s[1]$/;"	v	class:.Mode
longName	src/canmatrix/sym.py	/^                    longName = None$/;"	v	class:.Mode
longName	src/canmatrix/sym.py	/^                longName = None$/;"	v	class:.Mode
long_description	setup.py	/^    long_description = "\\n".join(doclines[2:]),$/;"	v
long_name	src/canmatrix/sym.py	/^    long_name = signal.attributes.get('LongName')$/;"	v
longname	build/lib/canmatrix/arxml.py	/^            longname = arGetChild(unit, "LONG-NAME", arDict, ns)$/;"	v
longname	src/canmatrix/arxml_BACKUP_26060.py	/^            longname = arGetChild(unit, "LONG-NAME", xmlRoot, ns)$/;"	v
longname	src/canmatrix/arxml_LOCAL_26060.py	/^            longname = arGetChild(unit, "LONG-NAME", arDict, ns)$/;"	v
main	build/lib/canmatrix/compare.py	/^def main():$/;"	f
main	build/lib/canmatrix/convert.py	/^def main():$/;"	f
main	examples/BusmasterRestbus.py	/^def main():$/;"	f
main	examples/createCMacros.py	/^def main():$/;"	f
main	examples/createccl.py	/^def main():$/;"	f
main	src/canmatrix/compare.py	/^def main():$/;"	f
main	src/canmatrix/convert.py	/^def main():$/;"	f
maintainer	setup.py	/^    maintainer = "Eduard Broecker",$/;"	v
maintainer_email	setup.py	/^    maintainer_email = "eduard at gmx dot de",$/;"	v
make_release_tree	versioneer.py	/^        def make_release_tree(self, base_dir, files):$/;"	m	class:get_cmdclass.cmd_sdist
math	build/lib/canmatrix/arxml.py	/^import math$/;"	i
math	build/lib/canmatrix/canmatrix.py	/^import math$/;"	i
math	build/lib/canmatrix/dbc.py	/^import math$/;"	i
math	build/lib/canmatrix/dbf.py	/^import math$/;"	i
math	build/lib/canmatrix/kcd.py	/^import math$/;"	i
math	build/lib/canmatrix/sym.py	/^import math$/;"	i
math	build/lib/canmatrix/xls.py	/^import math$/;"	i
math	build/lib/canmatrix/xls_common.py	/^import math$/;"	i
math	build/lib/canmatrix/xlsx.py	/^import math$/;"	i
math	examples/BusmasterRestbus.py	/^import math$/;"	i
math	src/canmatrix/arxml_BASE_26060.py	/^import math$/;"	i
math	src/canmatrix/arxml_LOCAL_26060.py	/^import math$/;"	i
math	src/canmatrix/canmatrix.py	/^import math$/;"	i
math	src/canmatrix/dbc.py	/^import math$/;"	i
math	src/canmatrix/kcd.py	/^import math$/;"	i
math	src/canmatrix/xls.py	/^import math$/;"	i
math	src/canmatrix/xls_common.py	/^import math$/;"	i
math	src/canmatrix/xlsx.py	/^import math$/;"	i
max	build/lib/canmatrix/arxml.py	/^                            max=Max,$/;"	v
max	build/lib/canmatrix/dbc.py	/^                                 max=temp.group(10),$/;"	v	class:load.FollowUps
max	build/lib/canmatrix/dbc.py	/^                                 max=temp.group(9),$/;"	v	class:load.FollowUps
max	build/lib/canmatrix/sym.py	/^                                        max=max,$/;"	v	class:load.Mode
max	build/lib/canmatrix/sym.py	/^                                    max=max,$/;"	v	class:load.Mode
max	build/lib/canmatrix/sym.py	/^                            max = s[1]$/;"	v	class:load.Mode
max	build/lib/canmatrix/sym.py	/^                max = None$/;"	v	class:load.Mode
max	src/canmatrix/arxml_LOCAL_26060.py	/^                            max=Max,$/;"	v
max	src/canmatrix/canmatrix.py	/^    max =  attr.ib(converter = float_factory)$/;"	v
max	src/canmatrix/dbc.py	/^                                 max=temp.group(10),$/;"	v	class:.FollowUps
max	src/canmatrix/dbc.py	/^                                 max=temp.group(9),$/;"	v	class:.FollowUps
max	src/canmatrix/dbc.py	/^                        max=temp.group(10),$/;"	v	class:.FollowUps
max	src/canmatrix/dbc.py	/^                        max=temp.group(9),$/;"	v	class:.FollowUps
max	src/canmatrix/dbc.py	/^                max = temp.group(4)$/;"	v	class:.FollowUps
max	src/canmatrix/dbf.py	/^                                                max=Max * factor,$/;"	v
max	src/canmatrix/sym.py	/^                                    max=max,$/;"	v	class:.Mode
max	src/canmatrix/sym.py	/^                                max = s[1]$/;"	v	class:.Mode
max	src/canmatrix/sym.py	/^                            max = s[1]$/;"	v	class:.Mode
max	src/canmatrix/sym.py	/^                    max = None$/;"	v	class:.Mode
max	src/canmatrix/sym.py	/^                max = None$/;"	v	class:.Mode
max	test/createTestMatrix.py	/^                   max=6,$/;"	v
max	test/createTestMatrix.py	/^                  max=500,$/;"	v
maxi	src/canmatrix/xls.py	/^            maxi = float_factory(maxi)$/;"	v
maxi	src/canmatrix/xls.py	/^            maxi = pow(2, signalLength) - 1$/;"	v
message	src/canmatrix/sym.py	/^                    message=str(e),$/;"	v	class:.Mode
message	src/canmatrix/sym.py	/^    message = attr.ib(default=None)$/;"	v	class:ParsingError
message	test/test.py	/^    message = 'difference found'$/;"	v
message	test/test.py	/^    message = 'no difference'$/;"	v
min	build/lib/canmatrix/arxml.py	/^                            min=Min,$/;"	v
min	build/lib/canmatrix/dbc.py	/^                                 min=temp.group(8),$/;"	v	class:load.FollowUps
min	build/lib/canmatrix/dbc.py	/^                                 min=temp.group(9),$/;"	v	class:load.FollowUps
min	build/lib/canmatrix/sym.py	/^                                        min=min,$/;"	v	class:load.Mode
min	build/lib/canmatrix/sym.py	/^                                    min=min,$/;"	v	class:load.Mode
min	build/lib/canmatrix/sym.py	/^                            min = s[1]$/;"	v	class:load.Mode
min	build/lib/canmatrix/sym.py	/^                min = None$/;"	v	class:load.Mode
min	src/canmatrix/arxml_LOCAL_26060.py	/^                            min=Min,$/;"	v
min	src/canmatrix/canmatrix.py	/^    min  = attr.ib(converter=float_factory)$/;"	v
min	src/canmatrix/dbc.py	/^                                 min=temp.group(8),$/;"	v	class:.FollowUps
min	src/canmatrix/dbc.py	/^                                 min=temp.group(9),$/;"	v	class:.FollowUps
min	src/canmatrix/dbc.py	/^                        min=temp.group(8),$/;"	v	class:.FollowUps
min	src/canmatrix/dbc.py	/^                        min=temp.group(9),$/;"	v	class:.FollowUps
min	src/canmatrix/dbc.py	/^                min = temp.group(3)$/;"	v	class:.FollowUps
min	src/canmatrix/dbf.py	/^                                                min=Min * factor,$/;"	v
min	src/canmatrix/sym.py	/^                                    min=min,$/;"	v	class:.Mode
min	src/canmatrix/sym.py	/^                                min = s[1]$/;"	v	class:.Mode
min	src/canmatrix/sym.py	/^                            min = s[1]$/;"	v	class:.Mode
min	src/canmatrix/sym.py	/^                    min = None$/;"	v	class:.Mode
min	src/canmatrix/sym.py	/^                min = None$/;"	v	class:.Mode
min	test/createTestMatrix.py	/^                   min=0,$/;"	v
min	test/createTestMatrix.py	/^                  min=0,$/;"	v
mini	src/canmatrix/xls.py	/^            mini = float_factory(mini)$/;"	v
minimumDelay	build/lib/canmatrix/arxml.py	/^    minimumDelay = arGetChild(timingSpec, "MINIMUM-DELAY", arDict, ns)$/;"	v
minimumDelay	src/canmatrix/arxml_BACKUP_26060.py	/^    minimumDelay = arGetChild(timingSpec, "MINIMUM-DELAY", xmlRoot, ns)$/;"	v
minimumDelay	src/canmatrix/arxml_LOCAL_26060.py	/^    minimumDelay = arGetChild(timingSpec, "MINIMUM-DELAY", arDict, ns)$/;"	v
mode	build/lib/canmatrix/sym.py	/^            mode = Mode.enums$/;"	v	class:load.Mode
mode	build/lib/canmatrix/sym.py	/^            mode = Mode.receive$/;"	v	class:load.Mode
mode	build/lib/canmatrix/sym.py	/^            mode = Mode.send$/;"	v	class:load.Mode
mode	build/lib/canmatrix/sym.py	/^            mode = Mode.sendReceive$/;"	v	class:load.Mode
mode	src/canmatrix/sym.py	/^            mode = Mode.enums$/;"	v	class:.Mode
mode	src/canmatrix/sym.py	/^            mode = Mode.receive$/;"	v	class:.Mode
mode	src/canmatrix/sym.py	/^            mode = Mode.send$/;"	v	class:.Mode
mode	src/canmatrix/sym.py	/^            mode = Mode.sendReceive$/;"	v	class:.Mode
mode	src/canmatrix/sym.py	/^    mode = Mode.glob$/;"	v
moduleInstance	build/lib/canmatrix/formats.py	/^    moduleInstance = sys.modules["canmatrix." + loadedModule]$/;"	v
moduleInstance	src/canmatrix/formats.py	/^    moduleInstance = sys.modules["canmatrix." + loadedModule]$/;"	v
moduleList	build/lib/canmatrix/formats.py	/^moduleList = ["arxml", "cmcsv", "dbc", "dbf", "cmjson",$/;"	v
moduleList	src/canmatrix/formats.py	/^moduleList = ["arxml", "cmcsv", "dbc", "dbf", "cmjson",$/;"	v
modules	build/lib/canmatrix/xlsx.py	/^    from sys import modules$/;"	i
modules	src/canmatrix/xlsx.py	/^    from sys import modules$/;"	i
multiplex	build/lib/canmatrix/arxml.py	/^                            multiplex=multiplexId,$/;"	v
multiplex	build/lib/canmatrix/canmatrix.py	/^        def multiplex(value):$/;"	f	function:Signal.__init__
multiplex	build/lib/canmatrix/dbc.py	/^                                 multiplex=multiplex)$/;"	v	class:load.FollowUps
multiplex	build/lib/canmatrix/dbc.py	/^                    multiplex = 'Multiplexor'$/;"	v	class:load.FollowUps
multiplex	build/lib/canmatrix/dbc.py	/^                    multiplex = int(multiplex[1:])$/;"	v	class:load.FollowUps
multiplex	build/lib/canmatrix/dbc.py	/^                multiplex = temp.group(2)$/;"	v	class:load.FollowUps
multiplex	build/lib/canmatrix/dbf.py	/^                    multiplex = 'M'$/;"	v
multiplex	build/lib/canmatrix/dbf.py	/^                    multiplex = 'm' + str(signal.multiplex)$/;"	v
multiplex	build/lib/canmatrix/dbf.py	/^            multiplex = ""$/;"	v
multiplex	build/lib/canmatrix/sym.py	/^                                        multiplex='Multiplexor',$/;"	v	class:load.Mode
multiplex	build/lib/canmatrix/sym.py	/^                                    multiplex=multiplexor,$/;"	v	class:load.Mode
multiplex	src/canmatrix/arxml_BACKUP_26060.py	/^                            multiplex=multiplexId,$/;"	v
multiplex	src/canmatrix/arxml_LOCAL_26060.py	/^                            multiplex=multiplexId,$/;"	v
multiplex	src/canmatrix/canmatrix.py	/^    multiplex  = attr.ib(default = None)$/;"	v
multiplex	src/canmatrix/dbc.py	/^                                 multiplex=multiplex)$/;"	v	class:.FollowUps
multiplex	src/canmatrix/dbc.py	/^                            multiplex = int(multiplex[1:])$/;"	v	class:.FollowUps
multiplex	src/canmatrix/dbc.py	/^                        multiplex = 'Multiplexor'$/;"	v	class:.FollowUps
multiplex	src/canmatrix/dbc.py	/^                        multiplex = multiplex[:-1]$/;"	v	class:.FollowUps
multiplex	src/canmatrix/dbc.py	/^                        multiplex=multiplex,$/;"	v	class:.FollowUps
multiplex	src/canmatrix/dbc.py	/^                    multiplex = 'Multiplexor'$/;"	v	class:.FollowUps
multiplex	src/canmatrix/dbc.py	/^                    multiplex = int(multiplex[1:])$/;"	v	class:.FollowUps
multiplex	src/canmatrix/dbc.py	/^                    multiplex = temp.group(2)$/;"	v	class:.FollowUps
multiplex	src/canmatrix/dbc.py	/^                multiplex = temp.group(2)$/;"	v	class:.FollowUps
multiplex	src/canmatrix/dbf.py	/^                                                multiplex=multiplex))$/;"	v
multiplex	src/canmatrix/dbf.py	/^                    multiplex = 'M'$/;"	v
multiplex	src/canmatrix/dbf.py	/^                    multiplex = 'Multiplexor'$/;"	v
multiplex	src/canmatrix/dbf.py	/^                    multiplex = 'm' + str(signal.multiplex)$/;"	v
multiplex	src/canmatrix/dbf.py	/^                    multiplex = None$/;"	v
multiplex	src/canmatrix/dbf.py	/^                    multiplex = int(multiplex[1:])$/;"	v
multiplex	src/canmatrix/dbf.py	/^            multiplex = ""$/;"	v
multiplex	src/canmatrix/sym.py	/^                                            multiplex='Multiplexor',$/;"	v	class:.Mode
multiplex	src/canmatrix/sym.py	/^                                        multiplex='Multiplexor',$/;"	v	class:.Mode
multiplex	src/canmatrix/sym.py	/^                                        multiplex=multiplexor,$/;"	v	class:.Mode
multiplex	src/canmatrix/sym.py	/^                                    multiplex=multiplexor,$/;"	v	class:.Mode
multiplex	src/canmatrix/xls.py	/^                                multiplex=multiplex)$/;"	v
multiplex	src/canmatrix/xls.py	/^                multiplex = 'Multiplexor'$/;"	v
multiplex	src/canmatrix/xls.py	/^                multiplex = int(mux.strip())$/;"	v
multiplex	src/canmatrix/xls.py	/^            multiplex = None$/;"	v
multiplexSetter	src/canmatrix/canmatrix.py	/^    def multiplexSetter(self, value):$/;"	f
multiplex_written	src/canmatrix/dbc.py	/^                multiplex_written = True$/;"	v
multiplex_written	src/canmatrix/dbc.py	/^            multiplex_written = True$/;"	v
multiplex_written	src/canmatrix/dbc.py	/^        multiplex_written = False$/;"	v
multiplexor	build/lib/canmatrix/arxml.py	/^        multiplexor = Signal("Multiplexor",startBit=selectorStart.text,signalSize=selectorLen.text,$/;"	v
multiplexor	build/lib/canmatrix/sym.py	/^                        multiplexor = int(multiplexor)$/;"	v	class:load.Mode
multiplexor	build/lib/canmatrix/sym.py	/^                        multiplexor = int(multiplexor[:-1], 16)$/;"	v	class:load.Mode
multiplexor	build/lib/canmatrix/sym.py	/^                    multiplexor = tempArray[2]$/;"	v	class:load.Mode
multiplexor	build/lib/canmatrix/sym.py	/^                multiplexor = None$/;"	v	class:load.Mode
multiplexor	src/canmatrix/arxml_BACKUP_26060.py	/^        multiplexor = Signal("Multiplexor",startBit=selectorStart.text,size=int(selectorLen.text),$/;"	v
multiplexor	src/canmatrix/arxml_LOCAL_26060.py	/^        multiplexor = Signal("Multiplexor",startBit=selectorStart.text,signalSize=selectorLen.text,$/;"	v
multiplexor	src/canmatrix/kcd.py	/^                    multiplexor = etree.Element('Multiplex', name=signal.name, offset=str($/;"	v
multiplexor	src/canmatrix/kcd.py	/^            multiplexor = None$/;"	v
multiplexor	src/canmatrix/sym.py	/^                            multiplexor = int(multiplexor)$/;"	v	class:.Mode
multiplexor	src/canmatrix/sym.py	/^                            multiplexor = int(multiplexor[:-1], 16)$/;"	v	class:.Mode
multiplexor	src/canmatrix/sym.py	/^                        multiplexor = int(multiplexor)$/;"	v	class:.Mode
multiplexor	src/canmatrix/sym.py	/^                        multiplexor = int(multiplexor[:-1], 16)$/;"	v	class:.Mode
multiplexor	src/canmatrix/sym.py	/^                        multiplexor = tempArray[2]$/;"	v	class:.Mode
multiplexor	src/canmatrix/sym.py	/^                    multiplexor = None$/;"	v	class:.Mode
multiplexor	src/canmatrix/sym.py	/^                    multiplexor = tempArray[2]$/;"	v	class:.Mode
multiplexor	src/canmatrix/sym.py	/^                multiplexor = None$/;"	v	class:.Mode
muxValMax	src/canmatrix/canmatrix.py	/^    muxValMax = attr.ib(default = 0)$/;"	v
muxValMax	src/canmatrix/dbc.py	/^                    muxValMax = int(temp.group(4))$/;"	v	class:.FollowUps
muxValMin	src/canmatrix/canmatrix.py	/^    muxValMin = attr.ib(default = 0)$/;"	v
muxValMin	src/canmatrix/dbc.py	/^                    muxValMin = int(temp.group(4))$/;"	v	class:.FollowUps
mux_value	src/canmatrix/canmatrix.py	/^    mux_value = attr.ib(default = None)$/;"	v
muxerForSignal	src/canmatrix/canmatrix.py	/^    muxerForSignal= attr.ib(type=str, default = None)$/;"	v
muxerForSignal	src/canmatrix/dbc.py	/^                    muxerForSignal = temp.group(3)$/;"	v	class:.FollowUps
muxgroup	src/canmatrix/kcd.py	/^                    muxgroup = etree.Element('MuxGroup', count=str(i))$/;"	v
myFrame	test/createTestMatrix.py	/^myFrame = Frame("testFrame1", Id=0x123, dlc=8, transmitter="testBU")$/;"	v
myFrame1	test/createTestFdMatrix.py	/^myFrame1 = canmatrix.Frame("canFdStandard1",Id=1,  dlc=24, is_fd = True, transmitter=["testBU"])$/;"	v
myFrame2	test/createTestFdMatrix.py	/^myFrame2 = canmatrix.Frame("CanFdExtended2",Id=2,  dlc=16, extended = True, is_fd = True, transmitter=["testBU"])$/;"	v
myFrame2	test/createTestMatrix.py	/^myFrame2 = Frame("extendedFrame", Id=0x12,  dlc=8, transmitter="testBU")$/;"	v
myFrame3	test/createTestFdMatrix.py	/^myFrame3 = canmatrix.Frame("CanExtended3", Id=3, dlc=8, extended = True, transmitter=["testBU"])$/;"	v
myFrame4	test/createTestFdMatrix.py	/^myFrame4 = canmatrix.Frame("CanStandard4", Id=4,  dlc=8)$/;"	v
mySignal	test/createTestMatrix.py	/^mySignal = Signal("someTestSignal",$/;"	v
mySignal1	test/createTestFdMatrix.py	/^mySignal1 = canmatrix.Signal("signal1", signalSize=64, startBit=0, is_little_endian=True, min=0, max=0, is_signed=True, receiver=["recBU"])$/;"	v
mySignal2	test/createTestFdMatrix.py	/^mySignal2 = canmatrix.Signal("signal2", signalSize=64, startBit=64, is_little_endian=True, min=0, max=0, is_signed=True, receiver=["recBU"])$/;"	v
mySignal2	test/createTestMatrix.py	/^mySignal2 = Signal("Signal",$/;"	v
mySignal3	test/createTestFdMatrix.py	/^mySignal3 = canmatrix.Signal("signal3", signalSize=64, startBit=128, is_little_endian=True, min=0, max=0, is_signed=True)$/;"	v
myTempListe	build/lib/canmatrix/dbc.py	/^                myTempListe = temp.group(1).split(' ')$/;"	v	class:load.FollowUps
myTempListe	src/canmatrix/dbc.py	/^                    myTempListe = temp.group(1).split(' ')$/;"	v	class:.FollowUps
myTempListe	src/canmatrix/dbc.py	/^                myTempListe = temp.group(1).split(' ')$/;"	v	class:.FollowUps
name	setup.py	/^    name = "canmatrix",$/;"	v
name	src/canmatrix/canmatrix.py	/^    name = attr.ib(default = "")$/;"	v
name	src/canmatrix/canmatrix.py	/^    name = attr.ib(type=str)$/;"	v
name	src/canmatrix/dbc.py	/^                name = name.replace("-", whitespaceReplacement)$/;"	v
name	src/canmatrix/dbc.py	/^                name = output_names[frame][signal]$/;"	v
name	src/canmatrix/dbc.py	/^            name = normalized_names[signal]$/;"	v
name	src/canmatrix/dbf.py	/^                    name = temp.group(1)$/;"	v
networkrep	build/lib/canmatrix/arxml.py	/^            networkrep = arGetChild(isignal, "NETWORK-REPRESENTATION-PROPS", arDict, ns)$/;"	v
networkrep	src/canmatrix/arxml_BACKUP_26060.py	/^            networkrep = arGetChild(isignal, "NETWORK-REPRESENTATION-PROPS", arDict, ns)$/;"	v
networkrep	src/canmatrix/arxml_BACKUP_26060.py	/^            networkrep = arGetChild(isignal, "NETWORK-REPRESENTATION-PROPS", xmlRoot, ns)$/;"	v
networkrep	src/canmatrix/arxml_LOCAL_26060.py	/^            networkrep = arGetChild(isignal, "NETWORK-REPRESENTATION-PROPS", arDict, ns)$/;"	v
new	build/lib/canmatrix/arxml.py	/^    def new(self, name, child):$/;"	m	class:arTree
new	build/lib/canmatrix/autosarhelper.py	/^    def new(self, name, child):$/;"	m	class:arTree
new	src/canmatrix/arxml.py	/^    def new(self, name, child):$/;"	m	class:arTree
new	src/canmatrix/arxml_BACKUP_26060.py	/^    def new(self, name, child):$/;"	f
new	src/canmatrix/arxml_BASE_26060.py	/^    def new(self, name, child):$/;"	m	class:arTree
new	src/canmatrix/arxml_LOCAL_26060.py	/^    def new(self, name, child):$/;"	m	class:arTree
new	src/canmatrix/arxml_REMOTE_26060.py	/^    def new(self, name, child):$/;"	m	class:arTree
new	src/canmatrix/sym.py	/^                                new=sigName,$/;"	v	class:.Mode
new	src/canmatrix/sym.py	/^    new = attr.ib(default=None)$/;"	v	class:DuplicateMuxIdError
newBo	src/canmatrix/xls.py	/^                newBo = Frame(frameName, id=int(frameId[:-1], 16), size=dlc)$/;"	v
newBo	src/canmatrix/xls.py	/^                newBo = Frame(frameName, id=int(frameId[:-2], 16), size=dlc, extended = True)$/;"	v
newBo	src/canmatrix/xls.py	/^            newBo = Frame(frameName, id=int(frameId[:-1], 16), dlc=dlc)$/;"	v
newFrame	build/lib/canmatrix/arxml.py	/^        newFrame = Frame(arGetName(frameR, ns), Id=idNum, dlc=int(dlc.text))$/;"	v
newFrame	build/lib/canmatrix/arxml.py	/^        newFrame = Frame(arGetName(frameR, ns),$/;"	v
newFrame	build/lib/canmatrix/arxml.py	/^        newFrame = Frame(sn.text,Id=idNum,dlc=int(dlc.text) \/ 8)$/;"	v
newFrame	src/canmatrix/arxml_BACKUP_26060.py	/^        newFrame = Frame(arGetName(frameR, ns), Id=idNum, dlc=int(dlc.text))$/;"	v
newFrame	src/canmatrix/arxml_BACKUP_26060.py	/^        newFrame = Frame(arGetName(frameR, ns), id=idNum, size=int(dlc.text))$/;"	v
newFrame	src/canmatrix/arxml_BACKUP_26060.py	/^        newFrame = Frame(arGetName(frameR, ns),$/;"	v
newFrame	src/canmatrix/arxml_BACKUP_26060.py	/^        newFrame = Frame(sn.text,id=idNum,dlc=int(dlc.text) \/ 8)$/;"	v
newFrame	src/canmatrix/arxml_LOCAL_26060.py	/^        newFrame = Frame(arGetName(frameR, ns), Id=idNum, dlc=int(dlc.text))$/;"	v
newFrame	src/canmatrix/arxml_LOCAL_26060.py	/^        newFrame = Frame(arGetName(frameR, ns),$/;"	v
newFrame	src/canmatrix/arxml_LOCAL_26060.py	/^        newFrame = Frame(sn.text,Id=idNum,dlc=int(dlc.text) \/ 8)$/;"	v
newSig	build/lib/canmatrix/arxml.py	/^            newSig = Signal(name.text,$/;"	v
newSig	src/canmatrix/arxml_BACKUP_26060.py	/^            newSig = Signal(name.text,$/;"	v
newSig	src/canmatrix/arxml_LOCAL_26060.py	/^            newSig = Signal(name.text,$/;"	v
newSig	src/canmatrix/dbf.py	/^                newSig = newBo.addSignal(Signal(name,$/;"	v
newSig	src/canmatrix/xls.py	/^                newSig = Signal(signalName,$/;"	v
newsignal	src/canmatrix/cmjson.py	/^                newsignal = Signal(signal["name"],$/;"	v
nodeList	src/canmatrix/dbc.py	/^    nodeList = {}$/;"	v
noderef	src/canmatrix/kcd.py	/^                    noderef = etree.Element($/;"	v
nodes	build/lib/canmatrix/arxml.py	/^        nodes = root.findall('.\/\/' + ns + 'ECU-INSTANCE')$/;"	v
nodes	src/canmatrix/arxml_BACKUP_26060.py	/^        nodes = root.findall('.\/\/' + ns + 'ECU-INSTANCE')$/;"	v
nodes	src/canmatrix/arxml_LOCAL_26060.py	/^        nodes = root.findall('.\/\/' + ns + 'ECU-INSTANCE')$/;"	v
normalizeName	build/lib/canmatrix/dbc.py	/^def normalizeName(name, whitespaceReplacement):$/;"	f
normalizeName	src/canmatrix/dbc.py	/^def normalizeName(name, whitespaceReplacement):$/;"	f
normalizeValueTable	build/lib/canmatrix/canmatrix.py	/^def normalizeValueTable(table):$/;"	f
normalized_names	src/canmatrix/dbc.py	/^        normalized_names = collections.OrderedDict(($/;"	v
ns_can	build/lib/canmatrix/fibex.py	/^ns_can = "{%s}" % can$/;"	v
ns_can	src/canmatrix/fibex.py	/^ns_can = "{%s}" % can$/;"	v
ns_fx	build/lib/canmatrix/fibex.py	/^ns_fx = "{%s}" % fx$/;"	v
ns_fx	src/canmatrix/fibex.py	/^ns_fx = "{%s}" % fx$/;"	v
ns_ho	build/lib/canmatrix/fibex.py	/^ns_ho = "{%s}" % ho$/;"	v
ns_ho	src/canmatrix/fibex.py	/^ns_ho = "{%s}" % ho$/;"	v
ns_xsi	build/lib/canmatrix/fibex.py	/^ns_xsi = "{%s}" % xsi$/;"	v
ns_xsi	src/canmatrix/fibex.py	/^ns_xsi = "{%s}" % xsi$/;"	v
numbered_names	src/canmatrix/dbc.py	/^        numbered_names = collections.OrderedDict()$/;"	v
offset	build/lib/canmatrix/arxml.py	/^                            offset=offset,$/;"	v
offset	build/lib/canmatrix/dbc.py	/^                                 offset=temp.group(7),$/;"	v	class:load.FollowUps
offset	build/lib/canmatrix/dbc.py	/^                                 offset=temp.group(8),$/;"	v	class:load.FollowUps
offset	build/lib/canmatrix/sym.py	/^                                        offset=offset,$/;"	v	class:load.Mode
offset	build/lib/canmatrix/sym.py	/^                                    offset=offset,$/;"	v	class:load.Mode
offset	build/lib/canmatrix/sym.py	/^                            offset = s[1]$/;"	v	class:load.Mode
offset	build/lib/canmatrix/sym.py	/^                offset = 0$/;"	v	class:load.Mode
offset	src/canmatrix/arxml_BACKUP_26060.py	/^                            offset=offset,$/;"	v
offset	src/canmatrix/arxml_LOCAL_26060.py	/^                            offset=offset,$/;"	v
offset	src/canmatrix/canmatrix.py	/^    offset = attr.ib(converter = float_factory, default = float_factory(0.0))$/;"	v
offset	src/canmatrix/cmjson.py	/^                                   offset=signal["offset"])$/;"	v
offset	src/canmatrix/dbc.py	/^                                 offset=temp.group(7),$/;"	v	class:.FollowUps
offset	src/canmatrix/dbc.py	/^                                 offset=temp.group(8),$/;"	v	class:.FollowUps
offset	src/canmatrix/dbc.py	/^                        offset=temp.group(7),$/;"	v	class:.FollowUps
offset	src/canmatrix/dbc.py	/^                        offset=temp.group(8),$/;"	v	class:.FollowUps
offset	src/canmatrix/dbf.py	/^                                                offset=offset,$/;"	v
offset	src/canmatrix/sym.py	/^                                            offset=offset,$/;"	v	class:.Mode
offset	src/canmatrix/sym.py	/^                                        offset=offset,$/;"	v	class:.Mode
offset	src/canmatrix/sym.py	/^                                    offset=offset,$/;"	v	class:.Mode
offset	src/canmatrix/sym.py	/^                                offset = s[1]$/;"	v	class:.Mode
offset	src/canmatrix/sym.py	/^                            offset = s[1]$/;"	v	class:.Mode
offset	src/canmatrix/sym.py	/^                    offset = 0$/;"	v	class:.Mode
offset	src/canmatrix/sym.py	/^                offset = 0$/;"	v	class:.Mode
offset	test/createTestMatrix.py	/^                   offset=0.0,$/;"	v
offset	test/createTestMatrix.py	/^                  offset=1.0,$/;"	v
ofset	src/canmatrix/dbf.py	/^                ofset = float_factory(offset)$/;"	v
old	src/canmatrix/sym.py	/^                                old=frame.mux_names[multiplexor],$/;"	v	class:.Mode
old	src/canmatrix/sym.py	/^    old = attr.ib(default=None)$/;"	v	class:DuplicateMuxIdError
original	src/canmatrix/sym.py	/^                    original=e,$/;"	v	class:.Mode
original	src/canmatrix/sym.py	/^    original = attr.ib(default=None)$/;"	v	class:ParsingError
os	build/lib/canmatrix/arxml.py	/^import os$/;"	i
os	build/lib/canmatrix/convert.py	/^import os$/;"	i
os	build/lib/canmatrix/fibex.py	/^import os.path$/;"	i
os	build/lib/canmatrix/formats.py	/^import os$/;"	i
os	build/lib/canmatrix/kcd.py	/^import os$/;"	i
os	build/lib/canmatrix/xls.py	/^import os.path$/;"	i
os	build/lib/canmatrix/xlsx.py	/^import os.path$/;"	i
os	examples/BusmasterRestbus.py	/^import os$/;"	i
os	src/canmatrix/_version.py	/^import os$/;"	i
os	src/canmatrix/arxml_BASE_26060.py	/^import os$/;"	i
os	src/canmatrix/arxml_LOCAL_26060.py	/^import os$/;"	i
os	src/canmatrix/convert.py	/^import os$/;"	i
os	src/canmatrix/fibex.py	/^import os.path$/;"	i
os	src/canmatrix/formats.py	/^import os$/;"	i
os	src/canmatrix/kcd.py	/^import os$/;"	i
os	src/canmatrix/xls.py	/^import os.path$/;"	i
os	src/canmatrix/xlsx.py	/^import os.path$/;"	i
os	test/test.py	/^import os$/;"	i
os	test/test_codec.py	/^import os$/;"	i
os	versioneer.py	/^import os$/;"	i
out_file	test/test.py	/^            out_file = os.path.basename(test_file_base)$/;"	v
out_file	test/test.py	/^            out_file = os.path.join(directory, out_file)$/;"	v
output	build/lib/canmatrix/sym.py	/^    output = '\\n'$/;"	v
output	src/canmatrix/sym.py	/^    output = '\\n'$/;"	v
output	src/canmatrix/sym.py	/^    output = output.rstrip()$/;"	v
output_names	src/canmatrix/dbc.py	/^    output_names = collections.defaultdict(dict)$/;"	v
package_dir	setup.py	/^    package_dir = {"": "src"},$/;"	v
packages	setup.py	/^    packages = find_packages("src"),$/;"	v
parseSignal	build/lib/canmatrix/kcd.py	/^def parseSignal(signal, mux, namespace, nodelist):$/;"	f
parseSignal	src/canmatrix/kcd.py	/^def parseSignal(signal, mux, namespace, nodelist, float_factory):$/;"	f
path	build/lib/canmatrix/fibex.py	/^import os.path$/;"	i
path	build/lib/canmatrix/xls.py	/^import os.path$/;"	i
path	build/lib/canmatrix/xlsx.py	/^import os.path$/;"	i
path	src/canmatrix/fibex.py	/^import os.path$/;"	i
path	src/canmatrix/xls.py	/^import os.path$/;"	i
path	src/canmatrix/xlsx.py	/^import os.path$/;"	i
pattern	build/lib/canmatrix/dbc.py	/^                pattern = "^CM\\_ BO\\_ *(\\w+) *\\"(.*)"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^                pattern = "^CM\\_ BU\\_ *(\\w+) *\\"(.*)"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^                pattern = "^CM\\_ SG\\_ *(\\w+) *(\\w+) *\\"(.*)"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^                pattern = "^SG\\_ (\\w+) (\\w+) *: (\\d+)\\|(\\d+)@(\\d+)([\\+|\\-]) \\(([0-9.+\\-eE]+),([0-9.+\\-eE]+)\\) \\[([0-9.+\\-eE]+)\\|([0-9.+\\-eE]+)\\] \\"(.*)\\" (.*)"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^            pattern = "^BA\\_DEF\\_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+);"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^            pattern = "^BA\\_DEF\\_ BO\\_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+);"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^            pattern = "^BA\\_DEF\\_ BU\\_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+);"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^            pattern = "^BA\\_DEF\\_ SG\\_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+);"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^            pattern = "^BA\\_DEF\\_DEF\\_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+)\\;"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^            pattern = "^BU\\_\\:(.*)"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^            pattern = "^CM\\_ BO\\_ *(\\w+) *\\"(.*)\\";"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^            pattern = "^CM\\_ BU\\_ *(\\w+) *\\"(.*)\\";"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^            pattern = "^CM\\_ SG\\_ *(\\w+) *(\\w+) *\\"(.*)\\";"$/;"	v	class:load.FollowUps
pattern	build/lib/canmatrix/dbc.py	/^            pattern = "^SG\\_ (\\w+) : (\\d+)\\|(\\d+)@(\\d+)([\\+|\\-]) \\(([0-9.+\\-eE]+),([0-9.+\\-eE]+)\\) \\[([0-9.+\\-eE]+)\\|([0-9.+\\-eE]+)\\] \\"(.*)\\" (.*)"$/;"	v	class:load.FollowUps
pattern	src/canmatrix/dbc.py	/^                    pattern = r"^CM_ +BO_ +(\\w+) +\\"(.*)"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                    pattern = r"^CM_ +BU_ +(\\w+) +\\"(.*)"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                    pattern = r"^CM_ +SG_ +(\\w+) +(\\w+) +\\"(.*)"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                    pattern = r"^SG_ +(\\w+) +(\\w+) *: *(\\d+)\\|(\\d+)@(\\d+)([\\+|\\-]) +\\(([0-9.+\\-eE]+),([0-9.+\\-eE]+)\\) +\\[([0-9.+\\-eE]+)\\|([0-9.+\\-eE]+)\\] +\\"(.*)\\" +(.*)"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = "^CM\\_ BO\\_ *(\\w+) *\\"(.*)"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = "^CM\\_ BU\\_ *(\\w+) *\\"(.*)"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = "^CM\\_ SG\\_ *(\\w+) *(\\w+) *\\"(.*)"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = "^SG\\_ (\\w+) (\\w+) *: (\\d+)\\|(\\d+)@(\\d+)([\\+|\\-]) \\(([0-9.+\\-eE]+),([0-9.+\\-eE]+)\\) \\[([0-9.+\\-eE]+)\\|([0-9.+\\-eE]+)\\] \\"(.*)\\" (.*)"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = r"^BA_DEF_ +BO_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+);"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = r"^BA_DEF_ +BU_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+);"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = r"^BA_DEF_ +SG_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+);"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = r"^BA_DEF_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+);"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = r"^BA_DEF_DEF_ +\\"([A-Za-z0-9\\-_\\.]+)\\" +(.+)\\;"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = r"^BU_\\:(.*)"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = r"^CM_ +BO_ +(\\w+) +\\"(.*)\\";"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = r"^CM_ +BU_ +(\\w+) +\\"(.*)\\";"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = r"^CM_ +SG_ +(\\w+) +(\\w+) +\\"(.*)\\";"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = r"^EV_ +([A-Za-z0-9\\-_]+) *\\: +([0-9]+) +\\[([0-9.+\\-eE]+)\\|([0-9.+\\-eE]+)\\] +\\"(\\w*)\\" +([0-9.+\\-eE]+) +([0-9.+\\-eE]+) +([A-Za-z0-9\\-_]+) +(.*);"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = r"^SG_ +(\\w+) *: *(\\d+)\\|(\\d+)@(\\d+)([\\+|\\-]) +\\(([0-9.+\\-eE]+),([0-9.+\\-eE]+)\\) +\\[([0-9.+\\-eE]+)\\|([0-9.+\\-eE]+)\\] +\\"(.*)\\" +(.*)"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^                pattern = r"^SG_MUL_VAL_ +([0-9]+) +([A-Za-z0-9\\-_]+) +([A-Za-z0-9\\-_]+) +([0-9]+)\\-([0-9]+) *;"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^            pattern = "^BA\\_DEF\\_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+);"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^            pattern = "^BA\\_DEF\\_ BO\\_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+);"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^            pattern = "^BA\\_DEF\\_ BU\\_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+);"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^            pattern = "^BA\\_DEF\\_ SG\\_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+);"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^            pattern = "^BA\\_DEF\\_DEF\\_ +\\"([A-Za-z0-9\\-_]+)\\" +(.+)\\;"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^            pattern = "^BU\\_\\:(.*)"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^            pattern = "^CM\\_ BO\\_ *(\\w+) *\\"(.*)\\";"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^            pattern = "^CM\\_ BU\\_ *(\\w+) *\\"(.*)\\";"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^            pattern = "^CM\\_ SG\\_ *(\\w+) *(\\w+) *\\"(.*)\\";"$/;"	v	class:.FollowUps
pattern	src/canmatrix/dbc.py	/^            pattern = "^SG\\_ (\\w+) : (\\d+)\\|(\\d+)@(\\d+)([\\+|\\-]) \\(([0-9.+\\-eE]+),([0-9.+\\-eE]+)\\) \\[([0-9.+\\-eE]+)\\|([0-9.+\\-eE]+)\\] \\"(.*)\\" (.*)"$/;"	v	class:.FollowUps
pdu	build/lib/canmatrix/arxml.py	/^            pdu = arGetChild(ipduTriggering, "I-SIGNAL-I-PDU", arDict, ns) ## AR4.2$/;"	v
pdu	build/lib/canmatrix/arxml.py	/^        pdu = arGetChild(ipduTriggering, "I-PDU", arDict, ns) $/;"	v
pdu	build/lib/canmatrix/arxml.py	/^        pdu = arGetChild(ipduTriggering, "I-PDU", arDict, ns)$/;"	v
pdu	src/canmatrix/arxml_BACKUP_26060.py	/^            pdu = arGetChild(ipduTriggering, "I-SIGNAL-I-PDU", xmlRoot, ns) ## AR4.2$/;"	v
pdu	src/canmatrix/arxml_BACKUP_26060.py	/^        pdu = arGetChild(ipduTriggering, "I-PDU", arDict, ns) $/;"	v
pdu	src/canmatrix/arxml_BACKUP_26060.py	/^        pdu = arGetChild(ipduTriggering, "I-PDU", arDict, ns)$/;"	v
pdu	src/canmatrix/arxml_BACKUP_26060.py	/^        pdu = arGetChild(ipduTriggering, "I-PDU", xmlRoot, ns)$/;"	v
pdu	src/canmatrix/arxml_LOCAL_26060.py	/^            pdu = arGetChild(ipduTriggering, "I-SIGNAL-I-PDU", arDict, ns) ## AR4.2$/;"	v
pdu	src/canmatrix/arxml_LOCAL_26060.py	/^        pdu = arGetChild(ipduTriggering, "I-PDU", arDict, ns) $/;"	v
pdu	src/canmatrix/arxml_LOCAL_26060.py	/^        pdu = arGetChild(ipduTriggering, "I-PDU", arDict, ns)$/;"	v
pduFrameMapping	build/lib/canmatrix/arxml.py	/^pduFrameMapping = {}$/;"	v
pduFrameMapping	src/canmatrix/arxml.py	/^pduFrameMapping = {}$/;"	v
pduFrameMapping	src/canmatrix/arxml_BACKUP_26060.py	/^pduFrameMapping = {}$/;"	v
pduFrameMapping	src/canmatrix/arxml_BASE_26060.py	/^pduFrameMapping = {}$/;"	v
pduFrameMapping	src/canmatrix/arxml_LOCAL_26060.py	/^pduFrameMapping = {}$/;"	v
pduFrameMapping	src/canmatrix/arxml_REMOTE_26060.py	/^pduFrameMapping = {}$/;"	v
pdusigmapping	build/lib/canmatrix/arxml.py	/^                pdusigmapping = arGetChildren(pdusigmappings, "I-SIGNAL-TO-I-PDU-MAPPING", arDict, ns)$/;"	v
pdusigmapping	build/lib/canmatrix/arxml.py	/^            pdusigmapping = arGetChildren(pdusigmappings, "I-SIGNAL-TO-I-PDU-MAPPING", arDict, ns)$/;"	v
pdusigmapping	build/lib/canmatrix/arxml.py	/^    pdusigmapping = arGetChildren(pdu, "I-SIGNAL-TO-I-PDU-MAPPING", arDict, ns)$/;"	v
pdusigmapping	src/canmatrix/arxml_BACKUP_26060.py	/^                pdusigmapping = arGetChildren(pdusigmappings, "I-SIGNAL-TO-I-PDU-MAPPING", xmlRoot, ns)$/;"	v
pdusigmapping	src/canmatrix/arxml_BACKUP_26060.py	/^            pdusigmapping = arGetChildren(pdusigmappings, "I-SIGNAL-TO-I-PDU-MAPPING", xmlRoot, ns)$/;"	v
pdusigmapping	src/canmatrix/arxml_BACKUP_26060.py	/^    pdusigmapping = arGetChildren(pdu, "I-SIGNAL-TO-I-PDU-MAPPING", xmlRoot, ns)$/;"	v
pdusigmapping	src/canmatrix/arxml_LOCAL_26060.py	/^                pdusigmapping = arGetChildren(pdusigmappings, "I-SIGNAL-TO-I-PDU-MAPPING", arDict, ns)$/;"	v
pdusigmapping	src/canmatrix/arxml_LOCAL_26060.py	/^            pdusigmapping = arGetChildren(pdusigmappings, "I-SIGNAL-TO-I-PDU-MAPPING", arDict, ns)$/;"	v
pdusigmapping	src/canmatrix/arxml_LOCAL_26060.py	/^    pdusigmapping = arGetChildren(pdu, "I-SIGNAL-TO-I-PDU-MAPPING", arDict, ns)$/;"	v
pdusigmappings	build/lib/canmatrix/arxml.py	/^                pdusigmappings = arGetChild(ipdu, "SIGNAL-TO-PDU-MAPPINGS", arDict, ns)$/;"	v
pdusigmappings	build/lib/canmatrix/arxml.py	/^            pdusigmappings = arGetChild(ipdu, "SIGNAL-TO-PDU-MAPPINGS", arDict, ns)$/;"	v
pdusigmappings	src/canmatrix/arxml_BACKUP_26060.py	/^                pdusigmappings = arGetChild(ipdu, "SIGNAL-TO-PDU-MAPPINGS", xmlRoot, ns)$/;"	v
pdusigmappings	src/canmatrix/arxml_BACKUP_26060.py	/^            pdusigmappings = arGetChild(ipdu, "SIGNAL-TO-PDU-MAPPINGS", xmlRoot, ns)$/;"	v
pdusigmappings	src/canmatrix/arxml_LOCAL_26060.py	/^                pdusigmappings = arGetChild(ipdu, "SIGNAL-TO-PDU-MAPPINGS", arDict, ns)$/;"	v
pdusigmappings	src/canmatrix/arxml_LOCAL_26060.py	/^            pdusigmappings = arGetChild(ipdu, "SIGNAL-TO-PDU-MAPPINGS", arDict, ns)$/;"	v
pdutrigs	build/lib/canmatrix/arxml.py	/^        pdutrigs = arGetChildren(frameTriggering, "PDU-TRIGGERINGS", arDict, ns)$/;"	v
pdutrigs	src/canmatrix/arxml_BACKUP_26060.py	/^        pdutrigs = arGetChildren(frameTriggering, "PDU-TRIGGERINGS", xmlRoot, ns)$/;"	v
pdutrigs	src/canmatrix/arxml_LOCAL_26060.py	/^        pdutrigs = arGetChildren(frameTriggering, "PDU-TRIGGERINGS", arDict, ns)$/;"	v
pgn	build/lib/canmatrix/canmatrix.py	/^    pgn = None  # PGN$/;"	v	class:CanId
phys2raw	build/lib/canmatrix/canmatrix.py	/^    def phys2raw(self, value=None):$/;"	f
phys2raw	src/canmatrix/canmatrix.py	/^    def phys2raw(self, value=None):$/;"	f
pip	build/lib/canmatrix/canmatrix.py	/^            logger.error("message decoding not supported due bitstruct import error \/\/ try pip install bitstruct")$/;"	i
platforms	setup.py	/^    platforms = ["any"],$/;"	v
plus_or_dot	src/canmatrix/_version.py	/^def plus_or_dot(pieces):$/;"	f
plus_or_dot	versioneer.py	/^def plus_or_dot(pieces):$/;"	f
portRef	build/lib/canmatrix/arxml.py	/^                portRef = arGetChildren(sigTrig, "I-SIGNAL-PORT", arDict, ns)$/;"	v
portRef	src/canmatrix/arxml_BACKUP_26060.py	/^                portRef = arGetChildren(sigTrig, "I-SIGNAL-PORT", searchPoint, ns)$/;"	v
portRef	src/canmatrix/arxml_LOCAL_26060.py	/^                portRef = arGetChildren(sigTrig, "I-SIGNAL-PORT", arDict, ns)$/;"	v
print_function	build/lib/canmatrix/arxml.py	/^from __future__ import print_function$/;"	i
print_function	build/lib/canmatrix/compare.py	/^from __future__ import print_function$/;"	i
print_function	build/lib/canmatrix/convert.py	/^from __future__ import print_function$/;"	i
print_function	build/lib/canmatrix/dbc.py	/^from __future__ import print_function$/;"	i
print_function	build/lib/canmatrix/dbf.py	/^from __future__ import print_function$/;"	i
print_function	build/lib/canmatrix/xls.py	/^from __future__ import print_function$/;"	i
print_function	src/canmatrix/arxml.py	/^from __future__ import print_function$/;"	i
print_function	src/canmatrix/arxml_BACKUP_26060.py	/^from __future__ import print_function$/;"	i
print_function	src/canmatrix/arxml_BASE_26060.py	/^from __future__ import print_function$/;"	i
print_function	src/canmatrix/arxml_LOCAL_26060.py	/^from __future__ import print_function$/;"	i
print_function	src/canmatrix/arxml_REMOTE_26060.py	/^from __future__ import print_function$/;"	i
print_function	src/canmatrix/compare.py	/^from __future__ import print_function$/;"	i
print_function	src/canmatrix/convert.py	/^from __future__ import print_function$/;"	i
print_function	src/canmatrix/dbc.py	/^from __future__ import print_function$/;"	i
print_function	src/canmatrix/dbf.py	/^from __future__ import print_function$/;"	i
print_function	src/canmatrix/xls.py	/^from __future__ import print_function$/;"	i
print_function	test/test.py	/^from __future__ import print_function$/;"	i
print_function	versioneer.py	/^from __future__ import print_function$/;"	i
processEcu	build/lib/canmatrix/arxml.py	/^def processEcu(ecu, db, arDict, multiplexTranslation, ns):$/;"	f
processEcu	src/canmatrix/arxml.py	/^def processEcu(ecu, db, arDict, multiplexTranslation, ns):$/;"	f
processEcu	src/canmatrix/arxml_BACKUP_26060.py	/^def processEcu(ecu, db, arDict, multiplexTranslation, ns):$/;"	f
processEcu	src/canmatrix/arxml_BASE_26060.py	/^def processEcu(ecu, db, arDict, multiplexTranslation, ns):$/;"	f
processEcu	src/canmatrix/arxml_LOCAL_26060.py	/^def processEcu(ecu, db, arDict, multiplexTranslation, ns):$/;"	f
processEcu	src/canmatrix/arxml_REMOTE_26060.py	/^def processEcu(ecu, db, arDict, multiplexTranslation, ns):$/;"	f
producer	src/canmatrix/kcd.py	/^            producer = etree.Element('Producer')$/;"	v
propagateChanges	build/lib/canmatrix/compare.py	/^def propagateChanges(res):$/;"	f
propagateChanges	src/canmatrix/compare.py	/^def propagateChanges(res):$/;"	f
py2	versioneer.py	/^            from py2exe.build_exe import py2exe as _py2exe  # py2$/;"	i
py3	versioneer.py	/^            from py2exe.distutils_buildexe import py2exe as _py2exe  # py3$/;"	i
pytest	src/canmatrix/tests/test_canmatrix.py	/^import pytest$/;"	i
pytest	src/canmatrix/tests/test_cmjson.py	/^import pytest$/;"	i
python	.idea/coverage.bat	/^set python=%1\\python.exe$/;"	v
raw2phys	build/lib/canmatrix/canmatrix.py	/^    def raw2phys(self, value, decodeToStr=False):$/;"	f
raw2phys	src/canmatrix/canmatrix.py	/^    def raw2phys(self, value, decodeToStr=False):$/;"	f
re	build/lib/canmatrix/dbc.py	/^import re$/;"	i
re	build/lib/canmatrix/dbf.py	/^import re$/;"	i
re	build/lib/canmatrix/kcd.py	/^import re$/;"	i
re	build/lib/canmatrix/sym.py	/^import re$/;"	i
re	src/canmatrix/_version.py	/^import re$/;"	i
re	src/canmatrix/dbc.py	/^import re$/;"	i
re	src/canmatrix/dbf.py	/^import re$/;"	i
re	src/canmatrix/kcd.py	/^import re$/;"	i
re	test/test.py	/^import re$/;"	i
re	versioneer.py	/^import re$/;"	i
readXlsx	build/lib/canmatrix/xlsx.py	/^def readXlsx(file, **args):$/;"	f
readXlsx	src/canmatrix/xlsx.py	/^def readXlsx(file, **args):$/;"	f
recalcDLC	build/lib/canmatrix/canmatrix.py	/^    def recalcDLC(self, strategy):$/;"	f
receiver	build/lib/canmatrix/arxml.py	/^                            receiver=receiver,$/;"	v
receiver	build/lib/canmatrix/dbc.py	/^                                 receiver=receiver)$/;"	v	class:load.FollowUps
receiver	build/lib/canmatrix/dbc.py	/^                                 receiver=receiver,$/;"	v	class:load.FollowUps
receiver	build/lib/canmatrix/dbc.py	/^                receiver = list(map(str.strip, temp.group(11).split(',')))$/;"	v	class:load.FollowUps
receiver	build/lib/canmatrix/dbc.py	/^                receiver = list(map(str.strip, temp.group(12).split(',')))$/;"	v	class:load.FollowUps
receiver	src/canmatrix/arxml_BACKUP_26060.py	/^                            receiver=receiver,$/;"	v
receiver	src/canmatrix/arxml_LOCAL_26060.py	/^                            receiver=receiver,$/;"	v
receiver	src/canmatrix/canmatrix.py	/^    receiver = attr.ib(default = attr.Factory(list))$/;"	v
receiver	src/canmatrix/dbc.py	/^                                 receiver=receiver)$/;"	v	class:.FollowUps
receiver	src/canmatrix/dbc.py	/^                                 receiver=receiver,$/;"	v	class:.FollowUps
receiver	src/canmatrix/dbc.py	/^                        receiver=receiver,$/;"	v	class:.FollowUps
receiver	src/canmatrix/dbc.py	/^                    receiver = [b.strip() for b in temp.group(11).split(',')]$/;"	v	class:.FollowUps
receiver	src/canmatrix/dbc.py	/^                    receiver = [b.strip() for b in temp.group(12).split(',')]$/;"	v	class:.FollowUps
receiver	src/canmatrix/dbc.py	/^                receiver = list(map(str.strip, temp.group(11).split(',')))$/;"	v	class:.FollowUps
receiver	src/canmatrix/dbc.py	/^                receiver = list(map(str.strip, temp.group(12).split(',')))$/;"	v	class:.FollowUps
receiver	src/canmatrix/dbf.py	/^                                                receiver=receiver,$/;"	v
receiver	src/canmatrix/dbf.py	/^                    receiver = []$/;"	v
receiver	src/canmatrix/dbf.py	/^                    receiver = temparray[12].split(',')$/;"	v
receiver	src/canmatrix/xls.py	/^                                receiver=receiver,$/;"	v
receiver	src/canmatrix/xls.py	/^            receiver = []$/;"	v
receiver	test/createTestMatrix.py	/^                   receiver=["recBU"])$/;"	v
receiver	test/createTestMatrix.py	/^                  receiver=["recBU"])$/;"	v
regexp	build/lib/canmatrix/dbc.py	/^                regexp = re.compile("^BA\\_ \\"(.*)\\" BO\\_ (\\w+) (.+);")$/;"	v	class:load.FollowUps
regexp	build/lib/canmatrix/dbc.py	/^                regexp = re.compile("^BA\\_ \\"(.*)\\" BU\\_ (\\w+) (.+);")$/;"	v	class:load.FollowUps
regexp	build/lib/canmatrix/dbc.py	/^                regexp = re.compile("^BA\\_ \\"(.*)\\" SG\\_ (\\w+) (\\w+) (.+);")$/;"	v	class:load.FollowUps
regexp	build/lib/canmatrix/dbc.py	/^                regexp = re.compile($/;"	v	class:load.FollowUps
regexp	build/lib/canmatrix/dbc.py	/^                regexp = re.compile(pattern)$/;"	v	class:load.FollowUps
regexp	build/lib/canmatrix/dbc.py	/^            regexp = re.compile("^BA\\_ +\\"[A-Za-z0-9[\\-_ .]+\\" +(.+)")$/;"	v	class:load.FollowUps
regexp	build/lib/canmatrix/dbc.py	/^            regexp = re.compile("^BO\\_ (\\w+) (\\w+) *: (\\w+) (\\w+)")$/;"	v	class:load.FollowUps
regexp	build/lib/canmatrix/dbc.py	/^            regexp = re.compile("^BO_TX_BU_ ([0-9]+) *: *(.+);")$/;"	v	class:load.FollowUps
regexp	build/lib/canmatrix/dbc.py	/^            regexp = re.compile("^SIG\\_GROUP\\_ +(\\w+) +(\\w+) +(\\w+) +\\:(.*);")$/;"	v	class:load.FollowUps
regexp	build/lib/canmatrix/dbc.py	/^            regexp = re.compile("^SIG\\_VALTYPE\\_ +(\\w+) +(\\w+) +\\:(.*);")$/;"	v	class:load.FollowUps
regexp	build/lib/canmatrix/dbc.py	/^            regexp = re.compile("^VAL\\_ (\\w+) (\\w+) (.*);")$/;"	v	class:load.FollowUps
regexp	build/lib/canmatrix/dbc.py	/^            regexp = re.compile("^VAL\\_TABLE\\_ (\\w+) (.*);")$/;"	v	class:load.FollowUps
regexp	build/lib/canmatrix/dbc.py	/^            regexp = re.compile(pattern)$/;"	v	class:load.FollowUps
regexp	src/canmatrix/dbc.py	/^                    regexp = re.compile($/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                    regexp = re.compile(pattern)$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                    regexp = re.compile(r"^BA_ +\\"(.*)\\" +BO_ +(\\w+) +(.+);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                    regexp = re.compile(r"^BA_ +\\"(.*)\\" +BU_ +(\\w+) +(.+);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                    regexp = re.compile(r"^BA_ +\\"(.*)\\" +SG_ +(\\w+) +(\\w+) +(.+);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                regexp = re.compile("^BA\\_ \\"(.*)\\" BO\\_ (\\w+) (.+);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                regexp = re.compile("^BA\\_ \\"(.*)\\" BU\\_ (\\w+) (.+);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                regexp = re.compile("^BA\\_ \\"(.*)\\" SG\\_ (\\w+) (\\w+) (.+);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                regexp = re.compile($/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                regexp = re.compile(pattern)$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                regexp = re.compile(r"^BA_ +\\"[A-Za-z0-9[\\-_ .]+\\" +(.+)")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                regexp = re.compile(r"^BO_ ([^\\ ]+) ([^\\ ]+) *: ([^\\ ]+) ([^\\ ]+)")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                regexp = re.compile(r"^BO_TX_BU_ ([0-9]+) *: *(.+);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                regexp = re.compile(r"^SIG_GROUP_ +(\\w+) +(\\w+) +(\\w+) +\\:(.*);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                regexp = re.compile(r"^SIG_VALTYPE_ +(\\w+) +(\\w+)\\s*\\:(.*);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                regexp = re.compile(r"^VAL_ +(\\w+) +(\\w+) +(.*);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^                regexp = re.compile(r"^VAL_TABLE_ +(\\w+) +(.*);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^            regexp = re.compile("^BA\\_ +\\"[A-Za-z0-9[\\-_ .]+\\" +(.+)")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^            regexp = re.compile("^BO\\_ (\\w+) (\\w+) *: (\\w+) (\\w+)")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^            regexp = re.compile("^BO_TX_BU_ ([0-9]+) *: *(.+);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^            regexp = re.compile("^SIG\\_GROUP\\_ +(\\w+) +(\\w+) +(\\w+) +\\:(.*);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^            regexp = re.compile("^SIG\\_VALTYPE\\_ +(\\w+) +(\\w+) +\\:(.*);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^            regexp = re.compile("^VAL\\_ (\\w+) (\\w+) (.*);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^            regexp = re.compile("^VAL\\_TABLE\\_ (\\w+) (.*);")$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbc.py	/^            regexp = re.compile(pattern)$/;"	v	class:.FollowUps
regexp	src/canmatrix/dbf.py	/^                regexp = re.compile("\\"(.+)\\" *, *(.+)")$/;"	v
regexp_raw	build/lib/canmatrix/dbc.py	/^                regexp_raw = re.compile(pattern.encode(dbcImportEncoding))$/;"	v	class:load.FollowUps
regexp_raw	build/lib/canmatrix/dbc.py	/^            regexp_raw = re.compile(pattern.encode(dbcImportEncoding))$/;"	v	class:load.FollowUps
regexp_raw	src/canmatrix/dbc.py	/^                    regexp_raw = re.compile(pattern.encode(dbcImportEncoding))$/;"	v	class:.FollowUps
regexp_raw	src/canmatrix/dbc.py	/^                regexp_raw = re.compile(pattern.encode(dbcImportEncoding))$/;"	v	class:.FollowUps
regexp_raw	src/canmatrix/dbc.py	/^            regexp_raw = re.compile(pattern.encode(dbcImportEncoding))$/;"	v	class:.FollowUps
register_vcs_handler	src/canmatrix/_version.py	/^def register_vcs_handler(vcs, method):  # decorator$/;"	f
register_vcs_handler	versioneer.py	/^def register_vcs_handler(vcs, method):  # decorator$/;"	f
remove	build/lib/canmatrix/canmatrix.py	/^    def remove(self, BU):$/;"	f
remove	build/lib/canmatrix/canmatrix.py	/^    def remove(self, frame):$/;"	f
remove	src/canmatrix/canmatrix.py	/^    def remove(self, BU):$/;"	f
remove	src/canmatrix/canmatrix.py	/^    def remove(self, frame):$/;"	f
renameEcu	build/lib/canmatrix/canmatrix.py	/^    def renameEcu(self, old, newName):$/;"	f
renameFrame	build/lib/canmatrix/canmatrix.py	/^    def renameFrame(self, old, newName):$/;"	f
renameFrameWithID	build/lib/canmatrix/join.py	/^def renameFrameWithID(sourceDb):$/;"	f
renameFrameWithID	src/canmatrix/join.py	/^def renameFrameWithID(sourceDb):$/;"	f
renameFrameWithSAEacronyme	build/lib/canmatrix/join.py	/^def renameFrameWithSAEacronyme(sourceDb, targetDb):$/;"	f
renameFrameWithSAEacronyme	src/canmatrix/join.py	/^def renameFrameWithSAEacronyme(sourceDb, targetDb):$/;"	f
renameSignal	build/lib/canmatrix/canmatrix.py	/^    def renameSignal(self, old, newName):$/;"	f
render	src/canmatrix/_version.py	/^def render(pieces, style):$/;"	f
render	versioneer.py	/^def render(pieces, style):$/;"	f
render_git_describe	src/canmatrix/_version.py	/^def render_git_describe(pieces):$/;"	f
render_git_describe	versioneer.py	/^def render_git_describe(pieces):$/;"	f
render_git_describe_long	src/canmatrix/_version.py	/^def render_git_describe_long(pieces):$/;"	f
render_git_describe_long	versioneer.py	/^def render_git_describe_long(pieces):$/;"	f
render_pep440	src/canmatrix/_version.py	/^def render_pep440(pieces):$/;"	f
render_pep440	versioneer.py	/^def render_pep440(pieces):$/;"	f
render_pep440_old	src/canmatrix/_version.py	/^def render_pep440_old(pieces):$/;"	f
render_pep440_old	versioneer.py	/^def render_pep440_old(pieces):$/;"	f
render_pep440_post	src/canmatrix/_version.py	/^def render_pep440_post(pieces):$/;"	f
render_pep440_post	versioneer.py	/^def render_pep440_post(pieces):$/;"	f
render_pep440_pre	src/canmatrix/_version.py	/^def render_pep440_pre(pieces):$/;"	f
render_pep440_pre	versioneer.py	/^def render_pep440_pre(pieces):$/;"	f
repeatingTime	build/lib/canmatrix/arxml.py	/^    repeatingTime = arGetChild(cyclicTiming, "REPEATING-TIME", arDict, ns)$/;"	v
repeatingTime	src/canmatrix/arxml_BACKUP_26060.py	/^    repeatingTime = arGetChild(cyclicTiming, "REPEATING-TIME", xmlRoot, ns)$/;"	v
repeatingTime	src/canmatrix/arxml_LOCAL_26060.py	/^    repeatingTime = arGetChild(cyclicTiming, "REPEATING-TIME", arDict, ns)$/;"	v
repeats	build/lib/canmatrix/arxml.py	/^    repeats = arGetChild(eventTiming, "NUMBER-OF-REPEATS", arDict, ns)$/;"	v
repeats	src/canmatrix/arxml_BACKUP_26060.py	/^    repeats = arGetChild(eventTiming, "NUMBER-OF-REPEATS", xmlRoot, ns)$/;"	v
repeats	src/canmatrix/arxml_LOCAL_26060.py	/^    repeats = arGetChild(eventTiming, "NUMBER-OF-REPEATS", arDict, ns)$/;"	v
representers	build/lib/canmatrix/yaml.py	/^    representers = False$/;"	v
representers	build/lib/canmatrix/yaml.py	/^    representers = True$/;"	v
representers	build/lib/canmatrix/yaml.py	/^representers = False$/;"	v
representers	src/canmatrix/yaml.py	/^    representers = False$/;"	v
representers	src/canmatrix/yaml.py	/^    representers = True$/;"	v
representers	src/canmatrix/yaml.py	/^representers = False$/;"	v
rowArray	src/canmatrix/xls.py	/^            rowArray = []$/;"	v
rowArray	src/canmatrix/xls.py	/^        rowArray = []$/;"	v
run	versioneer.py	/^            def run(self):$/;"	m	class:get_cmdclass.cmd_build_py.cmd_build_exe
run	versioneer.py	/^            def run(self):$/;"	m	class:get_cmdclass.cmd_build_py.cmd_py2exe
run	versioneer.py	/^        def run(self):$/;"	m	class:get_cmdclass.cmd_build_py
run	versioneer.py	/^        def run(self):$/;"	m	class:get_cmdclass.cmd_sdist
run	versioneer.py	/^        def run(self):$/;"	m	class:get_cmdclass.cmd_version
run_command	src/canmatrix/_version.py	/^def run_command(commands, args, cwd=None, verbose=False, hide_stderr=False,$/;"	f
run_command	versioneer.py	/^def run_command(commands, args, cwd=None, verbose=False, hide_stderr=False,$/;"	f
rxMailboxStruct	examples/createccl.py	/^rxMailboxStruct = "Mailbox_t RxCanMailboxes[COUNTRXMAILBOXES];"$/;"	v
s	build/lib/canmatrix/sym.py	/^                        s = switch[1:].split(':')$/;"	v	class:load.Mode
s	src/canmatrix/sym.py	/^                            s = switch[1:].split(':')$/;"	v	class:.Mode
s	src/canmatrix/sym.py	/^                        s = switch[1:].split(':')$/;"	v	class:.Mode
scan_setup_py	versioneer.py	/^def scan_setup_py():$/;"	f
sections	build/lib/canmatrix/sym.py	/^    sections = collections.OrderedDict(($/;"	v
sections	src/canmatrix/sym.py	/^    sections = collections.OrderedDict(($/;"	v
selectorByteOrder	build/lib/canmatrix/arxml.py	/^        selectorByteOrder = arGetChild(pdu, "SELECTOR-FIELD-BYTE-ORDER", arDict, ns)$/;"	v
selectorByteOrder	src/canmatrix/arxml_BACKUP_26060.py	/^        selectorByteOrder = arGetChild(pdu, "SELECTOR-FIELD-BYTE-ORDER", xmlRoot, ns)$/;"	v
selectorByteOrder	src/canmatrix/arxml_LOCAL_26060.py	/^        selectorByteOrder = arGetChild(pdu, "SELECTOR-FIELD-BYTE-ORDER", arDict, ns)$/;"	v
selectorId	build/lib/canmatrix/arxml.py	/^            selectorId = arGetChild(alternative, "SELECTOR-FIELD-CODE", arDict, ns)$/;"	v
selectorId	src/canmatrix/arxml_BACKUP_26060.py	/^            selectorId = arGetChild(alternative, "SELECTOR-FIELD-CODE", xmlRoot, ns)$/;"	v
selectorId	src/canmatrix/arxml_LOCAL_26060.py	/^            selectorId = arGetChild(alternative, "SELECTOR-FIELD-CODE", arDict, ns)$/;"	v
selectorLen	build/lib/canmatrix/arxml.py	/^        selectorLen = arGetChild(pdu, "SELECTOR-FIELD-LENGTH", arDict, ns)$/;"	v
selectorLen	src/canmatrix/arxml_BACKUP_26060.py	/^        selectorLen = arGetChild(pdu, "SELECTOR-FIELD-LENGTH", xmlRoot, ns)$/;"	v
selectorLen	src/canmatrix/arxml_LOCAL_26060.py	/^        selectorLen = arGetChild(pdu, "SELECTOR-FIELD-LENGTH", arDict, ns)$/;"	v
selectorStart	build/lib/canmatrix/arxml.py	/^        selectorStart = arGetChild(pdu, "SELECTOR-FIELD-START-POSITION", arDict, ns)$/;"	v
selectorStart	src/canmatrix/arxml_BACKUP_26060.py	/^        selectorStart = arGetChild(pdu, "SELECTOR-FIELD-START-POSITION", xmlRoot, ns)$/;"	v
selectorStart	src/canmatrix/arxml_LOCAL_26060.py	/^        selectorStart = arGetChild(pdu, "SELECTOR-FIELD-START-POSITION", arDict, ns)$/;"	v
sendreceive	build/lib/canmatrix/sym.py	/^    def sendreceive(f):$/;"	f
sendreceive	src/canmatrix/sym.py	/^    def sendreceive(f):$/;"	f
setDefaultMax	src/canmatrix/canmatrix.py	/^    def setDefaultMax(self):$/;"	f
setDefaultMin	src/canmatrix/canmatrix.py	/^    def setDefaultMin(self):$/;"	f
setFdType	build/lib/canmatrix/canmatrix.py	/^    def setFdType(self):$/;"	f
setMax	build/lib/canmatrix/canmatrix.py	/^    def setMax(self, max=None):$/;"	f
setMax	src/canmatrix/canmatrix.py	/^    def setMax(self, max=None):$/;"	f
setMin	build/lib/canmatrix/canmatrix.py	/^    def setMin(self, min=None):$/;"	f
setMin	src/canmatrix/canmatrix.py	/^    def setMin(self, min=None):$/;"	f
setStartbit	build/lib/canmatrix/canmatrix.py	/^    def setStartbit(self, startBit, bitNumbering=None, startLittle=None):$/;"	f
setStartbit	src/canmatrix/canmatrix.py	/^    def setStartbit(self, startBit, bitNumbering=None, startLittle=None):$/;"	f
setUp	test/test_codec.py	/^    def setUp(self):$/;"	m	class:TestCanmatrixCodec
set_log_level	build/lib/canmatrix/compare.py	/^from .log import setup_logger, set_log_level$/;"	i
set_log_level	build/lib/canmatrix/convert.py	/^from canmatrix.log import setup_logger, set_log_level$/;"	i
set_log_level	build/lib/canmatrix/log.py	/^def set_log_level(logger, level):$/;"	f
set_log_level	src/canmatrix/compare.py	/^from .log import setup_logger, set_log_level$/;"	i
set_log_level	src/canmatrix/convert.py	/^from canmatrix.log import setup_logger, set_log_level$/;"	i
set_log_level	src/canmatrix/log.py	/^def set_log_level(logger, level):$/;"	f
set_log_level	test/test.py	/^from canmatrix.log import setup_logger, set_log_level$/;"	i
setup	setup.py	/^from setuptools import setup, find_packages$/;"	i
setup_logger	build/lib/canmatrix/compare.py	/^from .log import setup_logger, set_log_level$/;"	i
setup_logger	build/lib/canmatrix/convert.py	/^from canmatrix.log import setup_logger, set_log_level$/;"	i
setup_logger	build/lib/canmatrix/log.py	/^def setup_logger(name):$/;"	f
setup_logger	src/canmatrix/compare.py	/^from .log import setup_logger, set_log_level$/;"	i
setup_logger	src/canmatrix/convert.py	/^from canmatrix.log import setup_logger, set_log_level$/;"	i
setup_logger	src/canmatrix/log.py	/^def setup_logger(name):$/;"	f
setup_logger	test/test.py	/^from canmatrix.log import setup_logger, set_log_level$/;"	i
sg	build/lib/canmatrix/dbc.py	/^                        sg = bo.signalByName(signal)$/;"	v	class:load.FollowUps
sg	src/canmatrix/dbc.py	/^                            sg = bo.signalByName(signal)$/;"	v	class:.FollowUps
sg	src/canmatrix/dbc.py	/^                        sg = bo.signalByName(signal)$/;"	v	class:.FollowUps
sg2	src/canmatrix/compare.py	/^        sg2 = f2.signalGroupByName(sg1.name)$/;"	v
sg2	src/canmatrix/compare.py	/^        sg2 = f2.signalGroupbyName(sg1.name)$/;"	v
shlex	build/lib/canmatrix/sym.py	/^import shlex$/;"	i
shlex	src/canmatrix/sym.py	/^import shlex$/;"	i
shutil	test/test.py	/^import shutil$/;"	i
sig	examples/createJ1939Dbc.py	/^    sig = canmatrix.Signal("ch%d" % i, size = 32, is_float = True, is_little_endian = False, startBit = (i-1)*32)$/;"	v
sig	examples/createJ1939Dbc.py	/^sig = canmatrix.Signal("ch1", size=32, is_float=True, is_little_endian=False, startBit=0)$/;"	v
sig	src/canmatrix/kcd.py	/^                            sig = createSignal($/;"	v
sig	src/canmatrix/kcd.py	/^                    sig = createSignal(signal, nodeList, signalTypeEnums)$/;"	v
sig	src/canmatrix/xls.py	/^            sig = sigHash[sig_idx]$/;"	v
sig2	examples/createJ1939Dbc.py	/^sig2 = canmatrix.Signal("ch2", size=32, is_float=True, is_little_endian=False, startBit=32)$/;"	v
sigName	build/lib/canmatrix/sym.py	/^                sigName = tempArray[0]$/;"	v	class:load.Mode
sigName	src/canmatrix/sym.py	/^                    sigName = tempArray[0]$/;"	v	class:.Mode
sigName	src/canmatrix/sym.py	/^                sigName = tempArray[0]$/;"	v	class:.Mode
sigTrig_text	build/lib/canmatrix/arxml.py	/^                    sigTrig_text = arGetName(sigTrig, ns) if sigTrig is not None else "None"$/;"	v
sigTrig_text	src/canmatrix/arxml_BACKUP_26060.py	/^                    sigTrig_text = arGetName(sigTrig, ns) if sigTrig is not None else "None"$/;"	v
sigTrig_text	src/canmatrix/arxml_LOCAL_26060.py	/^                    sigTrig_text = arGetName(sigTrig, ns) if sigTrig is not None else "None"$/;"	v
sign	build/lib/canmatrix/dbf.py	/^                    sign = 'D'$/;"	v
sign	build/lib/canmatrix/dbf.py	/^                    sign = 'F'$/;"	v
sign	build/lib/canmatrix/dbf.py	/^                sign = 'U'$/;"	v
sign	build/lib/canmatrix/dbf.py	/^            sign = 'S'$/;"	v
sign	src/canmatrix/dbc.py	/^                sign = '+'$/;"	v
sign	src/canmatrix/dbc.py	/^                sign = '-'$/;"	v
sign	src/canmatrix/dbf.py	/^                    sign = 'D'$/;"	v
sign	src/canmatrix/dbf.py	/^                    sign = 'F'$/;"	v
sign	src/canmatrix/dbf.py	/^                sign = 'U'$/;"	v
sign	src/canmatrix/dbf.py	/^            sign = 'I'$/;"	v
signal	build/lib/canmatrix/dbc.py	/^                    signal = botschaft.signalByName(temp.group(2))$/;"	v	class:load.FollowUps
signal	build/lib/canmatrix/dbc.py	/^                signal = botschaft.signalByName(temp.group(2))$/;"	v	class:load.FollowUps
signal	build/lib/canmatrix/dbc.py	/^                signal = frame.signalByName(temp.group(2))$/;"	v	class:load.FollowUps
signal	build/lib/canmatrix/dbc.py	/^                signal = temp.group(2)$/;"	v	class:load.FollowUps
signal	build/lib/canmatrix/sym.py	/^                        signal = Signal(frameName + "_MUX",$/;"	v	class:load.Mode
signal	build/lib/canmatrix/sym.py	/^                    signal = Signal(sigName,$/;"	v	class:load.Mode
signal	build/lib/canmatrix/sym.py	/^                    signal = frame.signalByName(frameName + "_MUX")$/;"	v	class:load.Mode
signal	src/canmatrix/dbc.py	/^                        signal = botschaft.signalByName(temp.group(2))$/;"	v	class:.FollowUps
signal	src/canmatrix/dbc.py	/^                        signal = frame.signalByName(signalName)$/;"	v	class:.FollowUps
signal	src/canmatrix/dbc.py	/^                    signal = botschaft.signalByName(temp.group(2))$/;"	v	class:.FollowUps
signal	src/canmatrix/dbc.py	/^                    signal = frame.signalByName(temp.group(2))$/;"	v	class:.FollowUps
signal	src/canmatrix/dbc.py	/^                    signal = temp.group(2)$/;"	v	class:.FollowUps
signal	src/canmatrix/dbc.py	/^                signal = botschaft.signalByName(temp.group(2))$/;"	v	class:.FollowUps
signal	src/canmatrix/dbc.py	/^                signal = frame.signalByName(temp.group(2))$/;"	v	class:.FollowUps
signal	src/canmatrix/dbc.py	/^                signal = temp.group(2)$/;"	v	class:.FollowUps
signal	src/canmatrix/dbc.py	/^    signal = None$/;"	v
signal	src/canmatrix/sym.py	/^                            signal = Signal(frameName + "_MUX",$/;"	v	class:.Mode
signal	src/canmatrix/sym.py	/^                        signal = Signal(frameName + "_MUX",$/;"	v	class:.Mode
signal	src/canmatrix/sym.py	/^                        signal = Signal(sigName,$/;"	v	class:.Mode
signal	src/canmatrix/sym.py	/^                        signal = frame.signalByName(frameName + "_MUX")$/;"	v	class:.Mode
signal	src/canmatrix/sym.py	/^                    signal = Signal(sigName,$/;"	v	class:.Mode
signal	src/canmatrix/sym.py	/^                    signal = frame.signalByName(frameName + "_MUX")$/;"	v	class:.Mode
signalArray	build/lib/canmatrix/dbc.py	/^                signalArray = temp.group(4).split(' ')$/;"	v	class:load.FollowUps
signalArray	src/canmatrix/dbc.py	/^                    signalArray = temp.group(4).split(' ')$/;"	v	class:.FollowUps
signalArray	src/canmatrix/dbc.py	/^                signalArray = temp.group(4).split(' ')$/;"	v	class:.FollowUps
signalByName	build/lib/canmatrix/canmatrix.py	/^    def signalByName(self, name):$/;"	f
signalByteorder	src/canmatrix/xls.py	/^                signalByteorder = sh.cell(rownum, index['byteorder']).value$/;"	v
signalComment	src/canmatrix/xls.py	/^                signalComment = signalComment[12:]$/;"	v
signalComment	src/canmatrix/xls.py	/^            signalComment = sh.cell($/;"	v
signalDefault	src/canmatrix/xls.py	/^            signalDefault = sh.cell(rownum, index['signalDefault']).value$/;"	v
signalGroupbyName	build/lib/canmatrix/canmatrix.py	/^    def signalGroupbyName(self, name):$/;"	m	class:Frame
signalLength	build/lib/canmatrix/sym.py	/^                signalLength = int(tempArray[indexOffset + 1].split(',')[1])$/;"	v	class:load.Mode
signalLength	src/canmatrix/sym.py	/^                    signalLength = int(tempArray[indexOffset + 1].split(',')[1])$/;"	v	class:.Mode
signalLength	src/canmatrix/sym.py	/^                signalLength = int(tempArray[indexOffset + 1].split(',')[1])$/;"	v	class:.Mode
signalLength	src/canmatrix/xls.py	/^            signalLength = int(sh.cell(rownum, index['signalLength']).value)$/;"	v
signalName	src/canmatrix/dbc.py	/^                    signalName = temp.group(2)$/;"	v	class:.FollowUps
signalName	src/canmatrix/xls.py	/^            signalName = sh.cell(rownum, index['signalName']).value$/;"	v
signalRxs	build/lib/canmatrix/arxml.py	/^signalRxs = {}$/;"	v
signalRxs	src/canmatrix/arxml.py	/^signalRxs = {}$/;"	v
signalRxs	src/canmatrix/arxml_BACKUP_26060.py	/^signalRxs = {}$/;"	v
signalRxs	src/canmatrix/arxml_BASE_26060.py	/^signalRxs = {}$/;"	v
signalRxs	src/canmatrix/arxml_LOCAL_26060.py	/^signalRxs = {}$/;"	v
signalRxs	src/canmatrix/arxml_REMOTE_26060.py	/^signalRxs = {}$/;"	v
signalSNA	src/canmatrix/xls.py	/^            signalSNA = sh.cell(rownum, index['signalSNA']).value$/;"	v
signalSize	build/lib/canmatrix/arxml.py	/^                            signalSize=length.text,$/;"	v
signalSize	build/lib/canmatrix/dbc.py	/^                                 signalSize=temp.group(3),$/;"	v	class:load.FollowUps
signalSize	build/lib/canmatrix/dbc.py	/^                                 signalSize=temp.group(4),$/;"	v	class:load.FollowUps
signalSize	build/lib/canmatrix/sym.py	/^                                        signalSize=signalLength,$/;"	v	class:load.Mode
signalSize	build/lib/canmatrix/sym.py	/^                                    signalSize=signalLength,$/;"	v	class:load.Mode
signalSize	src/canmatrix/arxml_LOCAL_26060.py	/^                            signalSize=length.text,$/;"	v
signalSize	src/canmatrix/dbc.py	/^                                 signalSize=temp.group(3),$/;"	v	class:.FollowUps
signalSize	src/canmatrix/dbc.py	/^                                 signalSize=temp.group(4),$/;"	v	class:.FollowUps
signalSize	src/canmatrix/sym.py	/^                                        signalSize=signalLength,$/;"	v	class:.Mode
signalSize	src/canmatrix/sym.py	/^                                    signalSize=signalLength,$/;"	v	class:.Mode
signalSize	test/createTestMatrix.py	/^                   signalSize=3,$/;"	v
signalSize	test/createTestMatrix.py	/^                  signalSize=11,$/;"	v
signal_constructor	build/lib/canmatrix/yaml.py	/^def signal_constructor(loader, node):$/;"	f
signal_constructor	src/canmatrix/yaml.py	/^def signal_constructor(loader, node):$/;"	f
signals	build/lib/canmatrix/cancluster.py	/^    def signals(self):$/;"	m	class:canCluster
signals	build/lib/canmatrix/canmatrix.py	/^    def signals(self):$/;"	f
signals	src/canmatrix/cancluster.py	/^    def signals(self):$/;"	m	class:canCluster
signals	src/canmatrix/canmatrix.py	/^    def signals(self):$/;"	f
signals	src/canmatrix/canmatrix.py	/^    signals = attr.ib(factory=list, repr=False)$/;"	v
signals	src/canmatrix/xls.py	/^        signals = []$/;"	v
signaltopdumaps	build/lib/canmatrix/arxml.py	/^                    signaltopdumaps = arGetChild(ipdus, "I-SIGNAL-TO-I-PDU-MAPPINGS", arDict, ns)$/;"	v
signaltopdumaps	build/lib/canmatrix/arxml.py	/^                signaltopdumaps = arGetChild(ipdus, "I-SIGNAL-TO-PDU-MAPPINGS", arDict, ns)$/;"	v
signaltopdumaps	src/canmatrix/arxml_BACKUP_26060.py	/^                    signaltopdumaps = arGetChild(ipdus, "I-SIGNAL-TO-I-PDU-MAPPINGS", xmlRoot, ns)$/;"	v
signaltopdumaps	src/canmatrix/arxml_BACKUP_26060.py	/^                signaltopdumaps = arGetChild(ipdus, "I-SIGNAL-TO-PDU-MAPPINGS", xmlRoot, ns)$/;"	v
signaltopdumaps	src/canmatrix/arxml_LOCAL_26060.py	/^                    signaltopdumaps = arGetChild(ipdus, "I-SIGNAL-TO-I-PDU-MAPPINGS", arDict, ns)$/;"	v
signaltopdumaps	src/canmatrix/arxml_LOCAL_26060.py	/^                signaltopdumaps = arGetChild(ipdus, "I-SIGNAL-TO-PDU-MAPPINGS", arDict, ns)$/;"	v
sigstyle	src/canmatrix/xls.py	/^                    sigstyle = sty_white$/;"	v
sigstyle	src/canmatrix/xls.py	/^                sigstyle = sty_norm$/;"	v
sigstyle	src/canmatrix/xls.py	/^                sigstyle = sty_white$/;"	v
size	src/canmatrix/arxml_BACKUP_26060.py	/^                            size=int(length.text),$/;"	v
size	src/canmatrix/canmatrix.py	/^    size = attr.ib(type=int, default = 0)$/;"	v
size	src/canmatrix/cmjson.py	/^                                   size=signal["bit_length"],$/;"	v
size	src/canmatrix/cmjson.py	/^                             size=8)$/;"	v
size	src/canmatrix/dbc.py	/^                        size=int(temp.group(3)),$/;"	v	class:.FollowUps
size	src/canmatrix/dbc.py	/^                        size=int(temp.group(4)),$/;"	v	class:.FollowUps
size	src/canmatrix/dbf.py	/^                                                size=int(size),$/;"	v
size	src/canmatrix/dbf.py	/^                          size=int(size),$/;"	v
size	src/canmatrix/sym.py	/^                                            size=int(signalLength),$/;"	v	class:.Mode
size	src/canmatrix/sym.py	/^                                        size=int(signalLength),$/;"	v	class:.Mode
size	src/canmatrix/xls.py	/^                                size=int(signalLength),$/;"	v
some_signal	src/canmatrix/tests/test_canmatrix.py	/^def some_signal():$/;"	f
source	build/lib/canmatrix/canmatrix.py	/^    source = None  # Source Address$/;"	v	class:CanId
sourceBU	src/canmatrix/copy.py	/^                sourceBU = sourceDb.boardUnitByName(receiver)$/;"	v
sourceBU	src/canmatrix/copy.py	/^            sourceBU = sourceDb.boardUnitByName(transmitter)$/;"	v
sourceBU	src/canmatrix/copy.py	/^            sourceBU = sourceDb.boardUnits.byName(transmitter)$/;"	v
sourceBU	src/canmatrix/copy.py	/^        sourceBU = sourceDb.boardUnits.byName(transmitter)$/;"	v
split	build/lib/canmatrix/sym.py	/^                split = shlex.split(tempArray[1])$/;"	v	class:load.Mode
split	src/canmatrix/sym.py	/^                        split = line.split('\/\/', 1)$/;"	v	class:.Mode
split	src/canmatrix/sym.py	/^                    split = mySplit(tempArray[1])$/;"	v	class:.Mode
split	src/canmatrix/sym.py	/^                split = shlex.split(tempArray[1])$/;"	v	class:.Mode
spn	src/canmatrix/canmatrix.py	/^    def spn(self):$/;"	f
startBit	build/lib/canmatrix/arxml.py	/^                            startBit=startBit.text,$/;"	v
startBit	build/lib/canmatrix/dbc.py	/^                                 startBit=temp.group(2),$/;"	v	class:load.FollowUps
startBit	build/lib/canmatrix/dbc.py	/^                                 startBit=temp.group(3),$/;"	v	class:load.FollowUps
startBit	build/lib/canmatrix/sym.py	/^                                        startBit=startBit,$/;"	v	class:load.Mode
startBit	build/lib/canmatrix/sym.py	/^                                    startBit=startBit,$/;"	v	class:load.Mode
startBit	build/lib/canmatrix/sym.py	/^                startBit = int(tempArray[indexOffset + 1].split(',')[0])$/;"	v	class:load.Mode
startBit	src/canmatrix/arxml_BACKUP_26060.py	/^                            startBit=int(startBit.text),$/;"	v
startBit	src/canmatrix/arxml_LOCAL_26060.py	/^                            startBit=startBit.text,$/;"	v
startBit	src/canmatrix/canmatrix.py	/^    startBit = attr.ib(type=int, default=0)$/;"	v
startBit	src/canmatrix/cmjson.py	/^                                   startBit=signal["start_bit"],$/;"	v
startBit	src/canmatrix/dbc.py	/^                                 startBit=temp.group(2),$/;"	v	class:.FollowUps
startBit	src/canmatrix/dbc.py	/^                                 startBit=temp.group(3),$/;"	v	class:.FollowUps
startBit	src/canmatrix/dbc.py	/^                        startBit=int(temp.group(2)),$/;"	v	class:.FollowUps
startBit	src/canmatrix/dbc.py	/^                        startBit=int(temp.group(3)),$/;"	v	class:.FollowUps
startBit	src/canmatrix/dbf.py	/^                                                startBit=int(startbit),$/;"	v
startBit	src/canmatrix/sym.py	/^                                            startBit=int(startBit),$/;"	v	class:.Mode
startBit	src/canmatrix/sym.py	/^                                        startBit=int(startBit),$/;"	v	class:.Mode
startBit	src/canmatrix/sym.py	/^                                        startBit=startBit,$/;"	v	class:.Mode
startBit	src/canmatrix/sym.py	/^                                    startBit=startBit,$/;"	v	class:.Mode
startBit	src/canmatrix/sym.py	/^                    startBit = int(tempArray[indexOffset + 1].split(',')[0])$/;"	v	class:.Mode
startBit	src/canmatrix/sym.py	/^                startBit = int(tempArray[indexOffset + 1].split(',')[0])$/;"	v	class:.Mode
startBit	src/canmatrix/xls.py	/^                                startBit=(startbyte - 1) * 8 + startbit,$/;"	v
startBit	test/createTestMatrix.py	/^                   startBit=20,$/;"	v
startLittle	build/lib/canmatrix/arxml.py	/^                            startLittle=True),$/;"	v
startLittle	build/lib/canmatrix/dbf.py	/^                                                                                                   startLittle=True)) % 8,$/;"	v
startLittle	build/lib/canmatrix/dbf.py	/^                        startLittle=True) \/$/;"	v
startLittle	src/canmatrix/arxml_BACKUP_26060.py	/^                            startLittle=True),$/;"	v
startLittle	src/canmatrix/arxml_LOCAL_26060.py	/^                            startLittle=True),$/;"	v
startLittle	src/canmatrix/dbf.py	/^                                                                                                   startLittle=True)) % 8,$/;"	v
startLittle	src/canmatrix/dbf.py	/^                        startLittle=True) \/$/;"	v
startLittle	src/canmatrix/xls.py	/^                            startLittle=True)$/;"	v
startValue	build/lib/canmatrix/sym.py	/^                            startValue = s[1]$/;"	v	class:load.Mode
startValue	build/lib/canmatrix/sym.py	/^                        startValue = float(startValue) * (1 \/ float(factor))$/;"	v	class:load.Mode
startValue	build/lib/canmatrix/sym.py	/^                startValue = None$/;"	v	class:load.Mode
startValue	src/canmatrix/sym.py	/^                                startValue = s[1]$/;"	v	class:.Mode
startValue	src/canmatrix/sym.py	/^                            startValue = float_factory(startValue) * (1 \/ float_factory(factor))$/;"	v	class:.Mode
startValue	src/canmatrix/sym.py	/^                            startValue = s[1]$/;"	v	class:.Mode
startValue	src/canmatrix/sym.py	/^                        startValue = float(startValue) * (1 \/ float(factor))$/;"	v	class:.Mode
startValue	src/canmatrix/sym.py	/^                    startValue = None$/;"	v	class:.Mode
startValue	src/canmatrix/sym.py	/^                startValue = None$/;"	v	class:.Mode
startbit	src/canmatrix/dbc.py	/^            startbit = signal.getStartbit(bitNumbering=1)$/;"	v
startbit	src/canmatrix/dbf.py	/^                startbit = int(startbit)$/;"	v
startbit	src/canmatrix/xls.py	/^            startbit = int(sh.cell(rownum, index['startbit']).value)$/;"	v
startbyte	src/canmatrix/xls.py	/^            startbyte = int(sh.cell(rownum, index['startbyte']).value)$/;"	v
startingTime	build/lib/canmatrix/arxml.py	/^    startingTime = arGetChild(timingSpec, "STARTING-TIME", arDict, ns)$/;"	v
startingTime	src/canmatrix/arxml_BACKUP_26060.py	/^    startingTime = arGetChild(timingSpec, "STARTING-TIME", xmlRoot, ns)$/;"	v
startingTime	src/canmatrix/arxml_LOCAL_26060.py	/^    startingTime = arGetChild(timingSpec, "STARTING-TIME", arDict, ns)$/;"	v
staticPart	build/lib/canmatrix/arxml.py	/^        staticPart = arGetChild(pdu, "STATIC-PART", arDict, ns)$/;"	v
staticPart	src/canmatrix/arxml_BACKUP_26060.py	/^        staticPart = arGetChild(pdu, "STATIC-PART", xmlRoot, ns)$/;"	v
staticPart	src/canmatrix/arxml_LOCAL_26060.py	/^        staticPart = arGetChild(pdu, "STATIC-PART", arDict, ns)$/;"	v
stbit	build/lib/canmatrix/arxml.py	/^                    stbit = sig.getStartbit(bitNumbering=1, startLittle=True)$/;"	v
stbit	src/canmatrix/arxml_BACKUP_26060.py	/^                    stbit = sig.getStartbit(bitNumbering=1, startLittle=True)$/;"	v
stbit	src/canmatrix/arxml_LOCAL_26060.py	/^                    stbit = sig.getStartbit(bitNumbering=1, startLittle=True)$/;"	v
string	examples/BusmasterRestbus.py	/^import string$/;"	i
sty_first_frame	build/lib/canmatrix/xls.py	/^    sty_first_frame = xlwt.easyxf(font + ', colour black; borders: top thin')$/;"	v
sty_first_frame	build/lib/canmatrix/xlsx.py	/^sty_first_frame = 0$/;"	v
sty_first_frame	src/canmatrix/xls.py	/^    sty_first_frame = xlwt.easyxf(font + ', colour black; borders: top thin')$/;"	v
sty_first_frame	src/canmatrix/xlsx.py	/^sty_first_frame = 0$/;"	v
sty_green	build/lib/canmatrix/xls.py	/^    sty_green = xlwt.easyxf('pattern: pattern solid, fore-colour light_green')$/;"	v
sty_green	build/lib/canmatrix/xlsx.py	/^sty_green = 0$/;"	v
sty_green	src/canmatrix/xls.py	/^    sty_green = xlwt.easyxf('pattern: pattern solid, fore-colour light_green')$/;"	v
sty_green	src/canmatrix/xlsx.py	/^sty_green = 0$/;"	v
sty_green_first_frame	build/lib/canmatrix/xls.py	/^    sty_green_first_frame = xlwt.easyxf($/;"	v
sty_green_first_frame	build/lib/canmatrix/xlsx.py	/^sty_green_first_frame = 0$/;"	v
sty_green_first_frame	src/canmatrix/xls.py	/^    sty_green_first_frame = xlwt.easyxf($/;"	v
sty_green_first_frame	src/canmatrix/xlsx.py	/^sty_green_first_frame = 0$/;"	v
sty_header	build/lib/canmatrix/xls.py	/^    sty_header = xlwt.easyxf(font + ', bold on; align: vertical center, horizontal center',$/;"	v
sty_header	build/lib/canmatrix/xlsx.py	/^sty_header = 0$/;"	v
sty_header	src/canmatrix/xls.py	/^    sty_header = xlwt.easyxf(font + ', bold on; align: vertical center, horizontal center',$/;"	v
sty_header	src/canmatrix/xlsx.py	/^sty_header = 0$/;"	v
sty_norm	build/lib/canmatrix/xls.py	/^    sty_norm = xlwt.easyxf(font + ', colour black')$/;"	v
sty_norm	build/lib/canmatrix/xlsx.py	/^sty_norm = 0$/;"	v
sty_norm	src/canmatrix/xls.py	/^    sty_norm = xlwt.easyxf(font + ', colour black')$/;"	v
sty_norm	src/canmatrix/xlsx.py	/^sty_norm = 0$/;"	v
sty_sender	build/lib/canmatrix/xls.py	/^    sty_sender = xlwt.easyxf('pattern: pattern 0x04, fore-colour gray25')$/;"	v
sty_sender	build/lib/canmatrix/xlsx.py	/^sty_sender = 0$/;"	v
sty_sender	src/canmatrix/xls.py	/^    sty_sender = xlwt.easyxf('pattern: pattern 0x04, fore-colour gray25')$/;"	v
sty_sender	src/canmatrix/xlsx.py	/^sty_sender = 0$/;"	v
sty_sender_first_frame	build/lib/canmatrix/xls.py	/^    sty_sender_first_frame = xlwt.easyxf($/;"	v
sty_sender_first_frame	build/lib/canmatrix/xlsx.py	/^sty_sender_first_frame = 0$/;"	v
sty_sender_first_frame	src/canmatrix/xls.py	/^    sty_sender_first_frame = xlwt.easyxf($/;"	v
sty_sender_first_frame	src/canmatrix/xlsx.py	/^sty_sender_first_frame = 0$/;"	v
sty_sender_green	build/lib/canmatrix/xls.py	/^    sty_sender_green = xlwt.easyxf($/;"	v
sty_sender_green	build/lib/canmatrix/xlsx.py	/^sty_sender_green = 0$/;"	v
sty_sender_green	src/canmatrix/xls.py	/^    sty_sender_green = xlwt.easyxf($/;"	v
sty_sender_green	src/canmatrix/xlsx.py	/^sty_sender_green = 0$/;"	v
sty_sender_green_first_frame	build/lib/canmatrix/xls.py	/^    sty_sender_green_first_frame = xlwt.easyxf($/;"	v
sty_sender_green_first_frame	build/lib/canmatrix/xlsx.py	/^sty_sender_green_first_frame = 0$/;"	v
sty_sender_green_first_frame	src/canmatrix/xls.py	/^    sty_sender_green_first_frame = xlwt.easyxf($/;"	v
sty_sender_green_first_frame	src/canmatrix/xlsx.py	/^sty_sender_green_first_frame = 0$/;"	v
sty_white	build/lib/canmatrix/xls.py	/^    sty_white = xlwt.easyxf(font + ', colour white')$/;"	v
sty_white	build/lib/canmatrix/xlsx.py	/^sty_white = 0$/;"	v
sty_white	src/canmatrix/xls.py	/^    sty_white = xlwt.easyxf(font + ', colour white')$/;"	v
sty_white	src/canmatrix/xlsx.py	/^sty_white = 0$/;"	v
style	src/canmatrix/xls.py	/^                        style=sigstyle)$/;"	v
subprocess	src/canmatrix/_version.py	/^import subprocess$/;"	i
subprocess	test/test.py	/^import subprocess$/;"	i
subprocess	versioneer.py	/^import subprocess$/;"	i
supportedFormats	build/lib/canmatrix/formats.py	/^supportedFormats = {}$/;"	v
supportedFormats	src/canmatrix/formats.py	/^supportedFormats = {}$/;"	v
sym	src/canmatrix/tests/test_sym.py	/^import canmatrix.sym$/;"	i
sys	build/lib/canmatrix/cmcsv.py	/^import sys$/;"	i
sys	build/lib/canmatrix/cmjson.py	/^import sys$/;"	i
sys	build/lib/canmatrix/compare.py	/^import sys$/;"	i
sys	build/lib/canmatrix/convert.py	/^import sys$/;"	i
sys	build/lib/canmatrix/formats.py	/^import sys$/;"	i
sys	build/lib/canmatrix/sym.py	/^import sys$/;"	i
sys	build/lib/canmatrix/xls.py	/^import sys$/;"	i
sys	build/lib/canmatrix/xlsx.py	/^import sys$/;"	i
sys	examples/BusmasterRestbus.py	/^import sys$/;"	i
sys	examples/compare.py	/^import sys$/;"	i
sys	examples/convert.py	/^import sys$/;"	i
sys	examples/createCMacros.py	/^import sys$/;"	i
sys	examples/createccl.py	/^import sys$/;"	i
sys	examples/exampleMerge.py	/^import sys$/;"	i
sys	get_version.py	/^import sys$/;"	i
sys	setup.py	/^import sys$/;"	i
sys	src/canmatrix/_version.py	/^import sys$/;"	i
sys	src/canmatrix/cmcsv.py	/^import sys$/;"	i
sys	src/canmatrix/cmjson.py	/^import sys$/;"	i
sys	src/canmatrix/compare.py	/^import sys$/;"	i
sys	src/canmatrix/convert.py	/^import sys$/;"	i
sys	src/canmatrix/formats.py	/^import sys$/;"	i
sys	src/canmatrix/sym.py	/^import sys$/;"	i
sys	src/canmatrix/xls.py	/^import sys$/;"	i
sys	src/canmatrix/xlsx.py	/^import sys$/;"	i
sys	test/createTestFdMatrix.py	/^import sys$/;"	i
sys	test/createTestMatrix.py	/^import sys$/;"	i
sys	test/test.py	/^import sys$/;"	i
sys	versioneer.py	/^import sys$/;"	i
sysSignal	build/lib/canmatrix/arxml.py	/^                        sysSignal = arGetChild($/;"	v
sysSignal	src/canmatrix/arxml_BACKUP_26060.py	/^                        sysSignal = arGetChild($/;"	v
sysSignal	src/canmatrix/arxml_LOCAL_26060.py	/^                        sysSignal = arGetChild($/;"	v
tableName	build/lib/canmatrix/dbc.py	/^                tableName = temp.group(1)$/;"	v	class:load.FollowUps
tableName	src/canmatrix/dbc.py	/^                    tableName = temp.group(1)$/;"	v	class:.FollowUps
tableName	src/canmatrix/dbc.py	/^                tableName = temp.group(1)$/;"	v	class:.FollowUps
target	examples/exampleJoin.py	/^target = join_frame_by_signal_startbit(files)$/;"	v
targetBU	src/canmatrix/copy.py	/^                targetBU = targetDb.boardUnitByName(receiver)$/;"	v
targetBU	src/canmatrix/copy.py	/^            targetBU = targetDb.boardUnitByName(transmitter)$/;"	v
targetBU	src/canmatrix/copy.py	/^            targetBU = targetDb.boardUnits.byName(transmitter)$/;"	v
targetBU	src/canmatrix/copy.py	/^        targetBU = targetDb.boardUnits.byName(transmitter)$/;"	v
tearDown	test/test_codec.py	/^    def tearDown(self):$/;"	m	class:TestCanmatrixCodec
temp	build/lib/canmatrix/arxml.py	/^                temp = arGetChild(baseType, "SHORT-NAME", arDict, ns)$/;"	v
temp	build/lib/canmatrix/dbc.py	/^                temp = regexp.match(decoded)$/;"	v	class:load.FollowUps
temp	build/lib/canmatrix/dbc.py	/^            temp = regexp.match(decoded)$/;"	v	class:load.FollowUps
temp	src/canmatrix/arxml_BACKUP_26060.py	/^                temp = arGetChild(baseType, "SHORT-NAME", xmlRoot, ns)$/;"	v
temp	src/canmatrix/arxml_LOCAL_26060.py	/^                temp = arGetChild(baseType, "SHORT-NAME", arDict, ns)$/;"	v
temp	src/canmatrix/dbc.py	/^                    temp = regexp.match(decoded)$/;"	v	class:.FollowUps
temp	src/canmatrix/dbc.py	/^                temp = regexp.match(decoded)$/;"	v	class:.FollowUps
temp	src/canmatrix/dbc.py	/^            temp = regexp.match(decoded)$/;"	v	class:.FollowUps
temp	src/canmatrix/dbf.py	/^                temp = regexp.match(temstr)$/;"	v
temp	src/canmatrix/xls.py	/^                        temp = getattr(sig, item, "")$/;"	v
temp	src/canmatrix/xls.py	/^                    temp = getattr(sig, item, "")$/;"	v
temp	src/canmatrix/xls.py	/^            temp = frame.attribute(frameInfo, default="")$/;"	v
tempArray	build/lib/canmatrix/sym.py	/^                tempArray = [s.rstrip(',') for s in split]$/;"	v	class:load.Mode
tempArray	build/lib/canmatrix/sym.py	/^                tempArray = line[5:].replace(')', '').split('(')$/;"	v	class:load.Mode
tempArray	build/lib/canmatrix/sym.py	/^                tempArray = shlex.split(line.strip())$/;"	v	class:load.Mode
tempArray	src/canmatrix/sym.py	/^                    tempArray = [s.rstrip(',') for s in split]$/;"	v	class:.Mode
tempArray	src/canmatrix/sym.py	/^                    tempArray = line[5:].strip().rstrip(')').split('(', 1)$/;"	v	class:.Mode
tempArray	src/canmatrix/sym.py	/^                    tempArray = mySplit(line)$/;"	v	class:.Mode
tempArray	src/canmatrix/sym.py	/^                tempArray = [s.rstrip(',') for s in split]$/;"	v	class:.Mode
tempArray	src/canmatrix/sym.py	/^                tempArray = line[5:].replace(')', '').split('(')$/;"	v	class:.Mode
tempArray	src/canmatrix/sym.py	/^                tempArray = shlex.split(line.strip())$/;"	v	class:.Mode
tempAttr	src/canmatrix/copy.py	/^                    tempAttr = sig.attribute(attribute, db=sourceDb)$/;"	v
tempAttr	src/canmatrix/copy.py	/^                tempAttr = bu.attribute(attribute, db=sourceDb)$/;"	v
tempAttr	src/canmatrix/copy.py	/^                tempAttr = frame.attribute(attribute, db=sourceDb)$/;"	v
tempCol	src/canmatrix/xls.py	/^            tempCol = writeBuMatrix(buList, None, frame, worksheet, row, tempCol , framestyle)$/;"	v
tempCol	src/canmatrix/xls.py	/^            tempCol = writeExcelLine(worksheet, row, 0, rowArray, framestyle)$/;"	v
tempList	build/lib/canmatrix/dbc.py	/^                tempList = temp.group(2).split('"')$/;"	v	class:load.FollowUps
tempList	build/lib/canmatrix/dbc.py	/^                tempList = temp.group(3).split('"')$/;"	v	class:load.FollowUps
tempList	src/canmatrix/dbc.py	/^                    tempList = temp.group(2).split('"')$/;"	v	class:.FollowUps
tempList	src/canmatrix/dbc.py	/^                    tempList = temp.group(3).split('"')$/;"	v	class:.FollowUps
tempList	src/canmatrix/dbc.py	/^                tempList = temp.group(2).split('"')$/;"	v	class:.FollowUps
tempList	src/canmatrix/dbc.py	/^                tempList = temp.group(3).split('"')$/;"	v	class:.FollowUps
tempSig	build/lib/canmatrix/dbc.py	/^                tempSig = Signal(temp.group(1),$/;"	v	class:load.FollowUps
tempSig	src/canmatrix/dbc.py	/^                    tempSig = Signal($/;"	v	class:.FollowUps
tempSig	src/canmatrix/dbc.py	/^                tempSig = Signal(temp.group(1),$/;"	v	class:.FollowUps
tempValTable	build/lib/canmatrix/sym.py	/^                tempValTable = {}$/;"	v	class:load.Mode
tempValTable	src/canmatrix/sym.py	/^                    tempValTable = {}$/;"	v	class:.Mode
tempValTable	src/canmatrix/sym.py	/^                tempValTable = {}$/;"	v	class:.Mode
temp_raw	build/lib/canmatrix/dbc.py	/^                temp_raw = regexp_raw.match(l)$/;"	v	class:load.FollowUps
temp_raw	build/lib/canmatrix/dbc.py	/^            temp_raw = regexp_raw.match(l)$/;"	v	class:load.FollowUps
temp_raw	src/canmatrix/dbc.py	/^                    temp_raw = regexp_raw.match(l)$/;"	v	class:.FollowUps
temp_raw	src/canmatrix/dbc.py	/^                temp_raw = regexp_raw.match(l)$/;"	v	class:.FollowUps
temp_raw	src/canmatrix/dbc.py	/^            temp_raw = regexp_raw.match(l)$/;"	v	class:.FollowUps
temparray	src/canmatrix/dbf.py	/^                temparray = temstr.split(',')$/;"	v
tempba	build/lib/canmatrix/dbc.py	/^            tempba = regexp.match(decoded)$/;"	v	class:load.FollowUps
tempba	src/canmatrix/dbc.py	/^                tempba = regexp.match(decoded)$/;"	v	class:.FollowUps
tempba	src/canmatrix/dbc.py	/^            tempba = regexp.match(decoded)$/;"	v	class:.FollowUps
tempfile	test/test_codec.py	/^import tempfile$/;"	i
temstr	src/canmatrix/dbf.py	/^                temstr = line.strip()[15:].strip()$/;"	v
temstr	src/canmatrix/dbf.py	/^                temstr = line.strip()[19:].strip()$/;"	v
temstr	src/canmatrix/dbf.py	/^                temstr = line.strip()[6:].strip()$/;"	v
test	src/canmatrix/xls.py	/^        test = valueName$/;"	v
test_bitstruct_format	test/test_codec.py	/^    def test_bitstruct_format(self):$/;"	m	class:TestCanmatrixCodec
test_canid_parse_values	src/canmatrix/tests/test_canmatrix.py	/^def test_canid_parse_values():$/;"	f
test_canid_repr	src/canmatrix/tests/test_canmatrix.py	/^def test_canid_repr():$/;"	f
test_colliding_mux_values	src/canmatrix/tests/test_sym.py	/^def test_colliding_mux_values():$/;"	f
test_decode_signal	src/canmatrix/tests/test_canmatrix.py	/^def test_decode_signal():$/;"	f
test_ecu_default_attr_from_db	src/canmatrix/tests/test_canmatrix.py	/^def test_ecu_default_attr_from_db():$/;"	f
test_ecu_find_attribute	src/canmatrix/tests/test_canmatrix.py	/^def test_ecu_find_attribute():$/;"	f
test_ecu_no_attribute	src/canmatrix/tests/test_canmatrix.py	/^def test_ecu_no_attribute():$/;"	f
test_ecu_repr	src/canmatrix/tests/test_canmatrix.py	/^def test_ecu_repr():$/;"	f
test_encode_canmatrix	test/test_codec.py	/^    def test_encode_canmatrix(self):$/;"	m	class:TestCanmatrixCodec
test_encode_decode_frame	src/canmatrix/tests/test_canmatrix.py	/^def test_encode_decode_frame():$/;"	f
test_encode_decode_signal_value	test/test_codec.py	/^    def test_encode_decode_signal_value(self):$/;"	m	class:TestCanmatrixCodec
test_encode_decode_signal_value_choice_str	test/test_codec.py	/^    def test_encode_decode_signal_value_choice_str(self):$/;"	m	class:TestCanmatrixCodec
test_encode_decode_signal_value_choice_unicode	test/test_codec.py	/^    def test_encode_decode_signal_value_choice_unicode(self):$/;"	m	class:TestCanmatrixCodec
test_encode_signal	src/canmatrix/tests/test_canmatrix.py	/^def test_encode_signal():$/;"	f
test_export_additional_frame_info	src/canmatrix/tests/test_cmjson.py	/^def test_export_additional_frame_info(default_matrix):$/;"	f
test_export_long_signal_names	src/canmatrix/tests/test_cmjson.py	/^def test_export_long_signal_names():$/;"	f
test_export_with_jsonall	src/canmatrix/tests/test_cmjson.py	/^def test_export_with_jsonall(default_matrix):$/;"	f
test_file_base	test/test.py	/^test_file_base = 'test'$/;"	v
test_import_export_additional_frame_info	test/test_codec.py	/^    def test_import_export_additional_frame_info(self):$/;"	m	class:TestCanmatrixCodec
test_signal_decode_named_value	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_decode_named_value(some_signal):$/;"	f
test_signal_default_attr_from_db	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_default_attr_from_db(some_signal):$/;"	f
test_signal_defaults_to_decimal	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_defaults_to_decimal():$/;"	f
test_signal_delete_attribute	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_delete_attribute(some_signal):$/;"	f
test_signal_delete_receiver	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_delete_receiver(some_signal):$/;"	f
test_signal_delete_wrong_attribute_doesnt_raise	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_delete_wrong_attribute_doesnt_raise(some_signal):$/;"	f
test_signal_delete_wrong_receiver_doesnt_raise	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_delete_wrong_receiver_doesnt_raise(some_signal):$/;"	f
test_signal_encode_invalid_named_value	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_encode_invalid_named_value(some_signal):$/;"	f
test_signal_encode_named_value	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_encode_named_value(some_signal):$/;"	f
test_signal_find_mandatory_attribute	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_find_mandatory_attribute(some_signal):$/;"	f
test_signal_find_optional_attribute	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_find_optional_attribute(some_signal):$/;"	f
test_signal_get_startbit	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_get_startbit():$/;"	f
test_signal_get_startbit_conversion	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_get_startbit_conversion():$/;"	f
test_signal_has_attributes	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_has_attributes(some_signal):$/;"	f
test_signal_has_comment	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_has_comment(some_signal):$/;"	f
test_signal_no_attribute	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_no_attribute(some_signal):$/;"	f
test_signal_no_attribute_with_default	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_no_attribute_with_default(some_signal):$/;"	f
test_signal_no_duplicate_receiver	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_no_duplicate_receiver(some_signal):$/;"	f
test_signal_range	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_range():$/;"	f
test_signal_set_default_min_max	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_set_default_min_max():$/;"	f
test_signal_set_min_max	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_set_min_max():$/;"	f
test_signal_set_startbit	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_set_startbit():$/;"	f
test_signal_set_startbit_conversion	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_set_startbit_conversion():$/;"	f
test_signal_set_startbit_raise	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_set_startbit_raise():$/;"	f
test_signal_spn	src/canmatrix/tests/test_canmatrix.py	/^def test_signal_spn(some_signal):$/;"	f
test_signalgroup_can_add	src/canmatrix/tests/test_canmatrix.py	/^def test_signalgroup_can_add(the_group, some_signal):$/;"	f
test_signalgroup_can_remove	src/canmatrix/tests/test_canmatrix.py	/^def test_signalgroup_can_remove(the_group, some_signal):$/;"	f
test_signalgroup_delete_nothing	src/canmatrix/tests/test_canmatrix.py	/^def test_signalgroup_delete_nothing(the_group, some_signal):$/;"	f
test_signalgroup_empty	src/canmatrix/tests/test_canmatrix.py	/^def test_signalgroup_empty(the_group):$/;"	f
test_signalgroup_find_nothing	src/canmatrix/tests/test_canmatrix.py	/^def test_signalgroup_find_nothing(the_group, some_signal):$/;"	f
test_signalgroup_find_something	src/canmatrix/tests/test_canmatrix.py	/^def test_signalgroup_find_something(the_group, some_signal):$/;"	f
test_signalgroup_is_iterable	src/canmatrix/tests/test_canmatrix.py	/^def test_signalgroup_is_iterable(the_group, some_signal):$/;"	f
test_signalgroup_no_duplicates	src/canmatrix/tests/test_canmatrix.py	/^def test_signalgroup_no_duplicates(the_group, some_signal):$/;"	f
textwrap	src/canmatrix/tests/test_sym.py	/^import textwrap$/;"	i
the_group	src/canmatrix/tests/test_canmatrix.py	/^def the_group():$/;"	f
tickerBoardUnits	examples/BusmasterRestbus.py	/^def tickerBoardUnits(db, dbcname):$/;"	f
timeOffset	src/canmatrix/arxml_BACKUP_26060.py	/^    timeOffset = arGetChild(cyclicTiming, "TIME-OFFSET", xmlRoot, ns)$/;"	v
timePeriod	src/canmatrix/arxml_BACKUP_26060.py	/^    timePeriod = arGetChild(cyclicTiming, "TIME-PERIOD", xmlRoot, ns)$/;"	v
timingSpec	build/lib/canmatrix/arxml.py	/^    timingSpec = arGetChild(pdu, "I-PDU-TIMING-SPECIFICATION", arDict, ns)$/;"	v
timingSpec	src/canmatrix/arxml_BACKUP_26060.py	/^        timingSpec = arGetChild(pdu, "I-PDU-TIMING-SPECIFICATIONS", xmlRoot, ns)$/;"	v
timingSpec	src/canmatrix/arxml_BACKUP_26060.py	/^    timingSpec = arGetChild(pdu, "I-PDU-TIMING-SPECIFICATION", xmlRoot, ns)$/;"	v
timingSpec	src/canmatrix/arxml_LOCAL_26060.py	/^    timingSpec = arGetChild(pdu, "I-PDU-TIMING-SPECIFICATION", arDict, ns)$/;"	v
tmpMux	build/lib/canmatrix/sym.py	/^                tmpMux = line[:3]$/;"	v	class:load.Mode
tmpMux	src/canmatrix/sym.py	/^                    tmpMux = line[:3]$/;"	v	class:.Mode
tmpMux	src/canmatrix/sym.py	/^                tmpMux = line[:3]$/;"	v	class:.Mode
to	test/test.py	/^        to = copy.copy(export_types)$/;"	v
toCSV	build/lib/canmatrix/cmcsv.py	/^    def toCSV(self, delimiter=','):$/;"	m	class:csvRow
toCSV	src/canmatrix/cmcsv.py	/^    def toCSV(self, delimiter=','):$/;"	m	class:csvRow
transmitter	build/lib/canmatrix/dbc.py	/^                                  transmitter=temp.group(4).split()))$/;"	v	class:load.FollowUps
transmitter	src/canmatrix/dbc.py	/^                                  transmitter=temp.group(4).split()))$/;"	v	class:.FollowUps
transmitter	src/canmatrix/dbf.py	/^                          transmitter=transmitter))$/;"	v
transmitters	src/canmatrix/dbf.py	/^                          transmitters=transmitters))$/;"	v
trigrefcond	build/lib/canmatrix/arxml.py	/^                trigrefcond = arGetChild(pdutrig, "PDU-TRIGGERING-REF-CONDITIONAL", arDict, ns)$/;"	v
trigrefcond	src/canmatrix/arxml_BACKUP_26060.py	/^                trigrefcond = arGetChild(pdutrig, "PDU-TRIGGERING-REF-CONDITIONAL", xmlRoot, ns)$/;"	v
trigrefcond	src/canmatrix/arxml_LOCAL_26060.py	/^                trigrefcond = arGetChild(pdutrig, "PDU-TRIGGERING-REF-CONDITIONAL", arDict, ns)$/;"	v
trigs	build/lib/canmatrix/arxml.py	/^                trigs = arGetChild(trigrefcond, "PDU-TRIGGERING", arDict, ns)$/;"	v
trigs	src/canmatrix/arxml_BACKUP_26060.py	/^                trigs = arGetChild(trigrefcond, "PDU-TRIGGERING", xmlRoot, ns)$/;"	v
trigs	src/canmatrix/arxml_LOCAL_26060.py	/^                trigs = arGetChild(trigrefcond, "PDU-TRIGGERING", arDict, ns)$/;"	v
try	build/lib/canmatrix/canmatrix.py	/^            logger.error("message decoding not supported due bitstruct import error \/\/ try pip install bitstruct")$/;"	i
tuples	build/lib/canmatrix/canmatrix.py	/^    def tuples(self):$/;"	m	class:CanId
txMailboxStruct	examples/createccl.py	/^txMailboxStruct = "Mailbox_t TxCanMailboxes[COUNTTXMAILBOXES];"$/;"	v
typeName	build/lib/canmatrix/arxml.py	/^                typeName = arGetName(baseType, ns)$/;"	v
typeName	build/lib/canmatrix/arxml.py	/^            typeName = arGetName(baseType, ns)$/;"	v
typeName	src/canmatrix/arxml_BACKUP_26060.py	/^                typeName = arGetName(baseType, ns)$/;"	v
typeName	src/canmatrix/arxml_BACKUP_26060.py	/^            typeName = arGetName(baseType, ns)$/;"	v
typeName	src/canmatrix/arxml_LOCAL_26060.py	/^                typeName = arGetName(baseType, ns)$/;"	v
typeName	src/canmatrix/arxml_LOCAL_26060.py	/^            typeName = arGetName(baseType, ns)$/;"	v
types	build/lib/canmatrix/compare.py	/^import types$/;"	i
types	src/canmatrix/compare.py	/^import types$/;"	i
unit	build/lib/canmatrix/arxml.py	/^                            unit=Unit,$/;"	v
unit	build/lib/canmatrix/dbc.py	/^                                 unit=temp_raw.group(10).decode($/;"	v	class:load.FollowUps
unit	build/lib/canmatrix/dbc.py	/^                                 unit=temp_raw.group(11).decode($/;"	v	class:load.FollowUps
unit	build/lib/canmatrix/sym.py	/^                                        unit=unit,$/;"	v	class:load.Mode
unit	build/lib/canmatrix/sym.py	/^                                    unit=unit,$/;"	v	class:load.Mode
unit	build/lib/canmatrix/sym.py	/^                            unit = s[1]$/;"	v	class:load.Mode
unit	build/lib/canmatrix/sym.py	/^                unit = ""$/;"	v	class:load.Mode
unit	src/canmatrix/arxml_BACKUP_26060.py	/^                            unit=Unit,$/;"	v
unit	src/canmatrix/arxml_LOCAL_26060.py	/^                            unit=Unit,$/;"	v
unit	src/canmatrix/canmatrix.py	/^    unit = attr.ib(type=str, default ="")$/;"	v
unit	src/canmatrix/dbc.py	/^                                 unit=temp_raw.group(10).decode($/;"	v	class:.FollowUps
unit	src/canmatrix/dbc.py	/^                                 unit=temp_raw.group(11).decode($/;"	v	class:.FollowUps
unit	src/canmatrix/dbc.py	/^                        unit=temp_raw.group(10).decode(dbcImportEncoding),$/;"	v	class:.FollowUps
unit	src/canmatrix/dbc.py	/^                        unit=temp_raw.group(11).decode(dbcImportEncoding),$/;"	v	class:.FollowUps
unit	src/canmatrix/dbc.py	/^                unit = temp.group(5)$/;"	v	class:.FollowUps
unit	src/canmatrix/dbf.py	/^                                                unit=unit,$/;"	v
unit	src/canmatrix/sym.py	/^                                            unit=unit,$/;"	v	class:.Mode
unit	src/canmatrix/sym.py	/^                                        unit=unit,$/;"	v	class:.Mode
unit	src/canmatrix/sym.py	/^                                    unit=unit,$/;"	v	class:.Mode
unit	src/canmatrix/sym.py	/^                                unit = s[1]$/;"	v	class:.Mode
unit	src/canmatrix/sym.py	/^                            unit = s[1]$/;"	v	class:.Mode
unit	src/canmatrix/sym.py	/^                    unit = ""$/;"	v	class:.Mode
unit	src/canmatrix/sym.py	/^                unit = ""$/;"	v	class:.Mode
unit	src/canmatrix/xls.py	/^                unit = factor.strip()$/;"	v
unit	src/canmatrix/xls.py	/^                unit = unit.strip()$/;"	v
unit	src/canmatrix/xls.py	/^            unit = ""$/;"	v
unit	src/canmatrix/xls.py	/^        unit = ""$/;"	v
unit	test/createTestMatrix.py	/^                   unit="someUnit",$/;"	v
unit	test/createTestMatrix.py	/^                  unit=u"specialCharUnit°$", #.decode("utf-8"),$/;"	v
unit	test/createTestMatrix.py	/^    unit = "specialCharUnit°$".decode("utf-8")$/;"	v
unit	test/createTestMatrix.py	/^    unit = u"specialCharUnit°$"$/;"	v
unittest	test/test_codec.py	/^import unittest$/;"	i
update	build/lib/canmatrix/cancluster.py	/^    def update(self):$/;"	m	class:canCluster
update	build/lib/canmatrix/canmatrix.py	/^    def update(self):$/;"	m	class:Define
update	src/canmatrix/cancluster.py	/^    def update(self):$/;"	m	class:canCluster
updateECUs	build/lib/canmatrix/cancluster.py	/^    def updateECUs(self):$/;"	m	class:canCluster
updateECUs	src/canmatrix/cancluster.py	/^    def updateECUs(self):$/;"	m	class:canCluster
updateFrames	build/lib/canmatrix/cancluster.py	/^    def updateFrames(self):$/;"	m	class:canCluster
updateFrames	src/canmatrix/cancluster.py	/^    def updateFrames(self):$/;"	m	class:canCluster
updateReceiver	build/lib/canmatrix/canmatrix.py	/^    def updateReceiver(self):$/;"	f
updateSignals	build/lib/canmatrix/cancluster.py	/^    def updateSignals(self):$/;"	m	class:canCluster
updateSignals	src/canmatrix/cancluster.py	/^    def updateSignals(self):$/;"	m	class:canCluster
url	setup.py	/^    url = "http:\/\/github.com\/ebroecker\/canmatrix",$/;"	v
user_options	versioneer.py	/^        user_options = []$/;"	v	class:get_cmdclass.cmd_version
val	build/lib/canmatrix/dbc.py	/^                            val = tempList[i * 2 + 1]$/;"	v	class:load.FollowUps
val	build/lib/canmatrix/dbc.py	/^                        val = tempList[i * 2 + 1]$/;"	v	class:load.FollowUps
val	src/canmatrix/dbc.py	/^                                val = tempList[i * 2 + 1]$/;"	v	class:.FollowUps
val	src/canmatrix/dbc.py	/^                            val = tempList[i * 2 + 1]$/;"	v	class:.FollowUps
val	src/canmatrix/dbc.py	/^                        val = tempList[i * 2 + 1]$/;"	v	class:.FollowUps
val	src/canmatrix/dbc.py	/^                    val = '""'$/;"	v
val	src/canmatrix/dbc.py	/^                    val = '"' + val + '"'$/;"	v
val	src/canmatrix/dbc.py	/^                    val = format_float(val)$/;"	v
val	src/canmatrix/dbc.py	/^                val = '""'$/;"	v
val	src/canmatrix/dbc.py	/^                val = '"' + val + '"'$/;"	v
val	src/canmatrix/dbc.py	/^               val = '"' + val + '"'$/;"	v
val	src/canmatrix/dbc.py	/^            val = '""'$/;"	v
val	src/canmatrix/dbc.py	/^            val = '"' + val + '"'$/;"	v
valHash	build/lib/canmatrix/dbc.py	/^                    valHash = {}$/;"	v	class:load.FollowUps
valHash	src/canmatrix/dbc.py	/^                    valHash = {}$/;"	v	class:.FollowUps
valstyle	src/canmatrix/xls.py	/^                    valstyle = sty_norm$/;"	v
valstyle	src/canmatrix/xls.py	/^                valstyle = sigstyle$/;"	v
valtabName	build/lib/canmatrix/sym.py	/^                valtabName = tempArray[0]$/;"	v	class:load.Mode
valtabName	src/canmatrix/sym.py	/^                    valtabName = tempArray[0]$/;"	v	class:.Mode
valtabName	src/canmatrix/sym.py	/^                valtabName = tempArray[0]$/;"	v	class:.Mode
value	build/lib/canmatrix/arxml.py	/^        value = arGetChild(startingTime, "VALUE", arDict, ns)$/;"	v
value	build/lib/canmatrix/arxml.py	/^    value = arGetChild(repeatingTime, "VALUE", arDict, ns)$/;"	v
value	src/canmatrix/arxml_BACKUP_26060.py	/^        value = arGetChild(startingTime, "VALUE", xmlRoot, ns)$/;"	v
value	src/canmatrix/arxml_BACKUP_26060.py	/^        value = arGetChild(timeOffset, "VALUE", xmlRoot, ns)$/;"	v
value	src/canmatrix/arxml_BACKUP_26060.py	/^        value = arGetChild(timePeriod, "VALUE", xmlRoot, ns)$/;"	v
value	src/canmatrix/arxml_BACKUP_26060.py	/^    value = arGetChild(repeatingTime, "VALUE", xmlRoot, ns)$/;"	v
value	src/canmatrix/arxml_LOCAL_26060.py	/^        value = arGetChild(startingTime, "VALUE", arDict, ns)$/;"	v
value	src/canmatrix/arxml_LOCAL_26060.py	/^    value = arGetChild(repeatingTime, "VALUE", arDict, ns)$/;"	v
value	src/canmatrix/dbf.py	/^                    value = temp.group(2)$/;"	v
value	src/canmatrix/kcd.py	/^                    value = etree.Element('Value')$/;"	v
value	src/canmatrix/kcd.py	/^            value = None$/;"	v
value	src/canmatrix/xls.py	/^                value = int(float(value))$/;"	v
value	src/canmatrix/xls.py	/^        value = str(sh.cell(rownum, index['Value']).value)$/;"	v
valueName	src/canmatrix/xls.py	/^            valueName = "0"$/;"	v
valueName	src/canmatrix/xls.py	/^            valueName = "1"$/;"	v
valueName	src/canmatrix/xls.py	/^        valueName = sh.cell(rownum, index['ValueName']).value$/;"	v
valueTableName	build/lib/canmatrix/sym.py	/^                            valueTableName = s[1]$/;"	v	class:load.Mode
valueTableName	build/lib/canmatrix/sym.py	/^                valueTableName = None$/;"	v	class:load.Mode
valueTableName	src/canmatrix/sym.py	/^                                valueTableName = s[1]$/;"	v	class:.Mode
valueTableName	src/canmatrix/sym.py	/^                            valueTableName = s[1]$/;"	v	class:.Mode
valueTableName	src/canmatrix/sym.py	/^                    valueTableName = None$/;"	v	class:.Mode
valueTableName	src/canmatrix/sym.py	/^                valueTableName = None$/;"	v	class:.Mode
values	build/lib/canmatrix/canmatrix.py	/^    def values(self):$/;"	m	class:Signal
values	build/lib/canmatrix/canmatrix.py	/^    def values(self, valueTable):$/;"	m	class:Signal
values	src/canmatrix/canmatrix.py	/^    values = attr.ib(type=dict, converter=normalizeValueTable, default = attr.Factory(dict))$/;"	v
varName	src/canmatrix/dbc.py	/^                varName = temp.group(1)$/;"	v	class:.FollowUps
varType	src/canmatrix/dbc.py	/^                varType = temp.group(2)$/;"	v	class:.FollowUps
version	setup.py	/^    version = versioneer.get_version(),$/;"	v
versioneer	get_version.py	/^import versioneer$/;"	i
versioneer	setup.py	/^import versioneer$/;"	i
versioneer	versioneer.py	/^            if "import versioneer" in line:$/;"	i
versioneer	versioneer.py	/^        print(" import versioneer")$/;"	i
versions_from_file	versioneer.py	/^def versions_from_file(filename):$/;"	f
versions_from_parentdir	src/canmatrix/_version.py	/^def versions_from_parentdir(parentdir_prefix, root, verbose):$/;"	f
versions_from_parentdir	versioneer.py	/^def versions_from_parentdir(parentdir_prefix, root, verbose):$/;"	f
whichbyte	build/lib/canmatrix/dbf.py	/^            whichbyte = int($/;"	v
whichbyte	src/canmatrix/dbf.py	/^            whichbyte = int($/;"	v
write	build/lib/canmatrix/cmcsv.py	/^    def write(self, column, value):$/;"	m	class:csvRow
write	src/canmatrix/cmcsv.py	/^    def write(self, column, value):$/;"	m	class:csvRow
writeBuMatrix	build/lib/canmatrix/xls.py	/^def writeBuMatrix(buList, sig, frame, worksheet, row, col, firstframe):$/;"	f
writeBuMatrix	src/canmatrix/xls.py	/^def writeBuMatrix(buList, sig, frame, worksheet, row, col, firstframe):$/;"	f
writeBuMatrixx	build/lib/canmatrix/cmcsv.py	/^def writeBuMatrixx(buList, sig, frame, row, col):$/;"	f
writeBuMatrixx	build/lib/canmatrix/xlsx.py	/^def writeBuMatrixx(buList, sig, frame, worksheet, row, col, firstframe):$/;"	f
writeBuMatrixx	src/canmatrix/cmcsv.py	/^def writeBuMatrixx(buList, sig, frame, row, col):$/;"	f
writeBuMatrixx	src/canmatrix/xlsx.py	/^def writeBuMatrixx(buList, sig, frame, worksheet, row, col, firstframe):$/;"	f
writeExcelLine	build/lib/canmatrix/xlsx.py	/^def writeExcelLine(worksheet, row, col, rowArray, style):$/;"	f
writeExcelLine	src/canmatrix/xlsx.py	/^def writeExcelLine(worksheet, row, col, rowArray, style):$/;"	f
writeFrame	build/lib/canmatrix/xls.py	/^def writeFrame(frame, worksheet, row, mystyle):$/;"	f
writeFrame	src/canmatrix/xls.py	/^def writeFrame(frame, worksheet, row, mystyle):$/;"	f
writeSignal	build/lib/canmatrix/xls.py	/^def writeSignal(db, sig, worksheet, row, mystyle, rearCol, motorolaBitFormat):$/;"	f
writeSignal	src/canmatrix/xls.py	/^def writeSignal(db, sig, worksheet, row, mystyle, rearCol, motorolaBitFormat):$/;"	f
writeValue	build/lib/canmatrix/xls.py	/^def writeValue(label, value, worksheet, row, rearCol, mystyle):$/;"	f
writeValue	src/canmatrix/xls.py	/^def writeValue(label, value, worksheet, row, rearCol, mystyle):$/;"	f
write_to_version_file	versioneer.py	/^def write_to_version_file(filename, versions):$/;"	f
xlrd	build/lib/canmatrix/xls.py	/^import xlrd$/;"	i
xlrd	src/canmatrix/xls.py	/^import xlrd$/;"	i
xls	build/lib/canmatrix/xlsx.py	/^        import canmatrix.xls$/;"	i
xls	src/canmatrix/xlsx.py	/^        import canmatrix.xls$/;"	i
xlsxwriter	build/lib/canmatrix/xlsx.py	/^import xlsxwriter$/;"	i
xlsxwriter	src/canmatrix/xlsx.py	/^import xlsxwriter$/;"	i
xlwt	build/lib/canmatrix/xls.py	/^import xlwt$/;"	i
xlwt	src/canmatrix/xls.py	/^import xlwt$/;"	i
xsi	build/lib/canmatrix/fibex.py	/^xsi = "http:\/\/www.w3.org\/2001\/XMLSchema-instance"$/;"	v
xsi	src/canmatrix/fibex.py	/^xsi = "http:\/\/www.w3.org\/2001\/XMLSchema-instance"$/;"	v
yaml	build/lib/canmatrix/yaml.py	/^    yaml = None$/;"	v
yaml	build/lib/canmatrix/yaml.py	/^import yaml$/;"	i
yaml	src/canmatrix/yaml.py	/^    yaml = None$/;"	v
yaml	src/canmatrix/yaml.py	/^import yaml$/;"	i
zipfile	build/lib/canmatrix/xlsx.py	/^    import zipfile$/;"	i
zipfile	build/lib/canmatrix/xlsx.py	/^import zipfile$/;"	i
zipfile	examples/BusmasterRestbus.py	/^import zipfile$/;"	i
zipfile	src/canmatrix/xlsx.py	/^    import zipfile$/;"	i
zipfile	src/canmatrix/xlsx.py	/^import zipfile$/;"	i
